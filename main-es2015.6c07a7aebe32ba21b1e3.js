(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{0:function(e,t,n){e.exports=n("zUnb")},1:function(e,t){},2:function(e,t){},"2lpH":function(e,t){e.exports=r;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(N){}function r(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function s(e){return!0===(e&&e.__isLong__)}Object.defineProperty(r.prototype,"__isLong__",{value:!0}),r.isLong=s;var a={},i={};function o(e,t){var n,r,s;return t?(s=0<=(e>>>=0)&&e<256)&&(r=i[e])?r:(n=u(e,(0|e)<0?-1:0,!0),s&&(i[e]=n),n):(s=-128<=(e|=0)&&e<128)&&(r=a[e])?r:(n=u(e,e<0?-1:0,!1),s&&(a[e]=n),n)}function l(e,t){if(isNaN(e))return t?b:y;if(t){if(e<0)return b;if(e>=f)return S}else{if(e<=-m)return I;if(e+1>=m)return k}return e<0?l(-e,t).neg():u(e%p|0,e/p|0,t)}function u(e,t,n){return new r(e,t,n)}r.fromInt=o,r.fromNumber=l,r.fromBits=u;var c=Math.pow;function h(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return y;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return h(e.substring(1),t,n).neg();for(var s=l(c(n,8)),a=y,i=0;i<e.length;i+=8){var o=Math.min(8,e.length-i),u=parseInt(e.substring(i,i+o),n);if(o<8){var d=l(c(n,o));a=a.mul(d).add(l(u))}else a=(a=a.mul(s)).add(l(u))}return a.unsigned=t,a}function d(e,t){return"number"==typeof e?l(e,t):"string"==typeof e?h(e,t):u(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}r.fromString=h,r.fromValue=d;var p=4294967296,f=p*p,m=f/2,g=o(1<<24),y=o(0);r.ZERO=y;var b=o(0,!0);r.UZERO=b;var x=o(1);r.ONE=x;var w=o(1,!0);r.UONE=w;var v=o(-1);r.NEG_ONE=v;var k=u(-1,2147483647,!1);r.MAX_VALUE=k;var S=u(-1,-1,!0);r.MAX_UNSIGNED_VALUE=S;var I=u(0,-2147483648,!1);r.MIN_VALUE=I;var C=r.prototype;C.toInt=function(){return this.unsigned?this.low>>>0:this.low},C.toNumber=function(){return this.unsigned?(this.high>>>0)*p+(this.low>>>0):this.high*p+(this.low>>>0)},C.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(I)){var t=l(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var s=l(c(e,6),this.unsigned),a=this,i="";;){var o=a.div(s),u=(a.sub(o.mul(s)).toInt()>>>0).toString(e);if((a=o).isZero())return u+i;for(;u.length<6;)u="0"+u;i=""+u+i}},C.getHighBits=function(){return this.high},C.getHighBitsUnsigned=function(){return this.high>>>0},C.getLowBits=function(){return this.low},C.getLowBitsUnsigned=function(){return this.low>>>0},C.getNumBitsAbs=function(){if(this.isNegative())return this.eq(I)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},C.isZero=function(){return 0===this.high&&0===this.low},C.eqz=C.isZero,C.isNegative=function(){return!this.unsigned&&this.high<0},C.isPositive=function(){return this.unsigned||this.high>=0},C.isOdd=function(){return 1==(1&this.low)},C.isEven=function(){return 0==(1&this.low)},C.equals=function(e){return s(e)||(e=d(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},C.eq=C.equals,C.notEquals=function(e){return!this.eq(e)},C.neq=C.notEquals,C.ne=C.notEquals,C.lessThan=function(e){return this.comp(e)<0},C.lt=C.lessThan,C.lessThanOrEqual=function(e){return this.comp(e)<=0},C.lte=C.lessThanOrEqual,C.le=C.lessThanOrEqual,C.greaterThan=function(e){return this.comp(e)>0},C.gt=C.greaterThan,C.greaterThanOrEqual=function(e){return this.comp(e)>=0},C.gte=C.greaterThanOrEqual,C.ge=C.greaterThanOrEqual,C.compare=function(e){if(s(e)||(e=d(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},C.comp=C.compare,C.negate=function(){return!this.unsigned&&this.eq(I)?I:this.not().add(x)},C.neg=C.negate,C.add=function(e){s(e)||(e=d(e));var t=0,n=0,r=0,a=0;return r+=(a+=(65535&this.low)+(65535&e.low))>>>16,n+=(r+=(this.low>>>16)+(e.low>>>16))>>>16,t+=(n+=(65535&this.high)+(65535&e.high))>>>16,t+=(this.high>>>16)+(e.high>>>16),u((r&=65535)<<16|(a&=65535),(t&=65535)<<16|(n&=65535),this.unsigned)},C.subtract=function(e){return s(e)||(e=d(e)),this.add(e.neg())},C.sub=C.subtract,C.multiply=function(e){if(this.isZero())return y;if(s(e)||(e=d(e)),n)return u(n.mul(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned);if(e.isZero())return y;if(this.eq(I))return e.isOdd()?I:y;if(e.eq(I))return this.isOdd()?I:y;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(g)&&e.lt(g))return l(this.toNumber()*e.toNumber(),this.unsigned);var t=65535&this.high,r=this.low>>>16,a=65535&this.low,i=65535&e.high,o=e.low>>>16,c=65535&e.low,h=0,p=0,f=0,m=0;return f+=(m+=a*c)>>>16,p+=(f+=r*c)>>>16,f&=65535,p+=(f+=a*o)>>>16,h+=(p+=t*c)>>>16,p&=65535,h+=(p+=r*o)>>>16,p&=65535,h+=(p+=a*i)>>>16,h+=(this.high>>>16)*c+t*o+r*i+a*(e.high>>>16),u((f&=65535)<<16|(m&=65535),(h&=65535)<<16|(p&=65535),this.unsigned)},C.mul=C.multiply,C.divide=function(e){if(s(e)||(e=d(e)),e.isZero())throw Error("division by zero");var t,r,a;if(n)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?u((this.unsigned?n.div_u:n.div_s)(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?b:y;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return b;if(e.gt(this.shru(1)))return w;a=b}else{if(this.eq(I))return e.eq(x)||e.eq(v)?I:e.eq(I)?x:(t=this.shr(1).div(e).shl(1)).eq(y)?e.isNegative()?x:v:(r=this.sub(e.mul(t)),a=t.add(r.div(e)));if(e.eq(I))return this.unsigned?b:y;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();a=y}for(r=this;r.gte(e);){t=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(t)/Math.LN2),o=i<=48?1:c(2,i-48),h=l(t),p=h.mul(e);p.isNegative()||p.gt(r);)p=(h=l(t-=o,this.unsigned)).mul(e);h.isZero()&&(h=x),a=a.add(h),r=r.sub(p)}return a},C.div=C.divide,C.modulo=function(e){return s(e)||(e=d(e)),n?u((this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},C.mod=C.modulo,C.rem=C.modulo,C.not=function(){return u(~this.low,~this.high,this.unsigned)},C.and=function(e){return s(e)||(e=d(e)),u(this.low&e.low,this.high&e.high,this.unsigned)},C.or=function(e){return s(e)||(e=d(e)),u(this.low|e.low,this.high|e.high,this.unsigned)},C.xor=function(e){return s(e)||(e=d(e)),u(this.low^e.low,this.high^e.high,this.unsigned)},C.shiftLeft=function(e){return s(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):u(0,this.low<<e-32,this.unsigned)},C.shl=C.shiftLeft,C.shiftRight=function(e){return s(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):u(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},C.shr=C.shiftRight,C.shiftRightUnsigned=function(e){if(s(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?u(this.low>>>e|t<<32-e,t>>>e,this.unsigned):u(32===e?t:t>>>e-32,0,this.unsigned)},C.shru=C.shiftRightUnsigned,C.shr_u=C.shiftRightUnsigned,C.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},C.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},C.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},C.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},C.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},r.fromBytes=function(e,t,n){return n?r.fromBytesLE(e,t):r.fromBytesBE(e,t)},r.fromBytesLE=function(e,t){return new r(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},r.fromBytesBE=function(e,t){return new r(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},3:function(e,t){},4:function(e,t){},5:function(e,t){},6:function(e,t){},B9Yq:function(e,t){e.exports=function(){throw new Error("define cannot be used indirect")}},EhIR:function(e,t,n){(function(e){var r;!function(e,s,a){function i(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function l(e,t){var n=new i(e),r=t&&t.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n("B9Yq")&&n("PDX0")?void 0===(r=(function(){return l}).call(t,n,t,s))||(s.exports=r):this.alea=l}(0,e,n("B9Yq"))}).call(this,n("YuTi")(e))},PDX0:function(e,t){(function(t){e.exports=t}).call(this,{})},YSVl:function(e,t,n){var r=n("EhIR"),s=n("uDiL"),a=n("pJ6O"),i=n("yuCN"),o=n("euyF"),l=n("ie1u"),u=n("pJ3+");u.alea=r,u.xor128=s,u.xorwow=a,u.xorshift7=i,u.xor4096=o,u.tychei=l,e.exports=u},YuTi:function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},euyF:function(e,t,n){(function(e){var r;!function(e,s,a){function i(e){var t=this;t.next=function(){var e,n,r=t.w,s=t.X,a=t.i;return t.w=r=r+1640531527|0,n=s[a+34&127],e=s[a=a+1&127],n^=n<<13,e^=e<<17,n=s[a]=(n^=n>>>15)^(e^=e>>>12),t.i=a,n+(r^r>>>16)|0},function(e,t){var n,r,s,a,i,o=[],l=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,l=Math.max(l,t.length)),s=0,a=-32;a<l;++a)t&&(r^=t.charCodeAt((a+32)%t.length)),0===a&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,a>=0&&(s=0==(n=o[127&a]^=r+(i=i+1640531527|0))?s+1:0);for(s>=128&&(o[127&(t&&t.length||0)]=-1),s=127,a=512;a>0;--a)r=o[s+34&127],n=o[s=s+1&127],r^=r<<13,n^=n<<17,o[s]=(r^=r>>>15)^(n^=n>>>12);e.w=i,e.X=o,e.i=s}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function l(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.X&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n("B9Yq")&&n("PDX0")?void 0===(r=(function(){return l}).call(t,n,t,s))||(s.exports=r):this.xor4096=l}(0,e,n("B9Yq"))}).call(this,n("YuTi")(e))},ie1u:function(e,t,n){(function(e){var r;!function(e,s,a){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,s=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^s,t.a=s-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function l(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n("B9Yq")&&n("PDX0")?void 0===(r=(function(){return l}).call(t,n,t,s))||(s.exports=r):this.tychei=l}(0,e,n("B9Yq"))}).call(this,n("YuTi")(e))},"pJ3+":function(e,t,n){var r;!function(s,a){var i,o=this,l=a.pow(256,6),u=a.pow(2,52),c=2*u;function h(e,t,n){var r=[],h=f(function e(t,n){var r,s=[],a=typeof t;if(n&&"object"==a)for(r in t)try{s.push(e(t[r],n-1))}catch(i){}return s.length?s:"string"==a?t:t+"\0"}((t=1==t?{entropy:!0}:t||{}).entropy?[e,m(s)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(256):(e=new Uint8Array(256),(o.crypto||o.msCrypto).getRandomValues(e)),m(e)}catch(r){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,m(s)]}}():e,3),r),g=new d(r),y=function(){for(var e=g.g(6),t=l,n=0;e<u;)e=256*(e+n),t*=256,n=g.g(1);for(;e>=c;)e/=2,t/=2,n>>>=1;return(e+n)/t};return y.int32=function(){return 0|g.g(4)},y.quick=function(){return g.g(4)/4294967296},y.double=y,f(m(g.S),s),(t.pass||n||function(e,t,n,r){return r&&(r.S&&p(r,g),e.state=function(){return p(g,{})}),n?(a.random=e,t):e})(y,h,"global"in t?t.global:this==a,t.state)}function d(e){var t,n=e.length,r=this,s=0,a=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);s<256;)i[s]=s++;for(s=0;s<256;s++)i[s]=i[a=255&a+e[s%n]+(t=i[s])],i[a]=t;(r.g=function(e){for(var t,n=0,s=r.i,a=r.j,i=r.S;e--;)t=i[s=255&s+1],n=256*n+i[255&(i[s]=i[a=255&a+t])+(i[a]=t)];return r.i=s,r.j=a,n})(256)}function p(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function f(e,t){for(var n,r=e+"",s=0;s<r.length;)t[255&s]=255&(n^=19*t[255&s])+r.charCodeAt(s++);return m(t)}function m(e){return String.fromCharCode.apply(0,e)}if(a.seedrandom=h,f(a.random(),s),e.exports){e.exports=h;try{i=n(3)}catch(g){}}else void 0===(r=(function(){return h}).call(t,n,t,e))||(e.exports=r)}([],Math)},pJ6O:function(e,t,n){(function(e){var r;!function(e,s,a){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function l(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n("B9Yq")&&n("PDX0")?void 0===(r=(function(){return l}).call(t,n,t,s))||(s.exports=r):this.xorwow=l}(0,e,n("B9Yq"))}).call(this,n("YuTi")(e))},uDiL:function(e,t,n){(function(e){var r;!function(e,s,a){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function l(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n("B9Yq")&&n("PDX0")?void 0===(r=(function(){return l}).call(t,n,t,s))||(s.exports=r):this.xor128=l}(0,e,n("B9Yq"))}).call(this,n("YuTi")(e))},yuCN:function(e,t,n){(function(e){var r;!function(e,s,a){function i(e){var t=this;t.next=function(){var e,n,r=t.x,s=t.i;return e=r[s],n=(e^=e>>>7)^e<<24,n^=(e=r[s+1&7])^e>>>10,n^=(e=r[s+3&7])^e>>>3,n^=(e=r[s+4&7])^e<<7,e=r[s+7&7],r[s]=n^=(e^=e<<13)^e<<9,t.i=s+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n&&(r[7]=-1),e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function l(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.x&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n("B9Yq")&&n("PDX0")?void 0===(r=(function(){return l}).call(t,n,t,s))||(s.exports=r):this.xorshift7=l}(0,e,n("B9Yq"))}).call(this,n("YuTi")(e))},zUnb:function(e,t,n){"use strict";n.r(t);var r={};n.r(r),n.d(r,"shuffle",(function(){return ip})),n.d(r,"shuffleCombo",(function(){return op})),n.d(r,"clamp",(function(){return lp})),n.d(r,"nearestLargerEven",(function(){return up})),n.d(r,"swap",(function(){return cp})),n.d(r,"sum",(function(){return hp})),n.d(r,"randUniform",(function(){return dp})),n.d(r,"distSquared",(function(){return pp})),n.d(r,"assert",(function(){return fp})),n.d(r,"assertShapesMatch",(function(){return mp})),n.d(r,"assertNonNull",(function(){return gp})),n.d(r,"flatten",(function(){return yp})),n.d(r,"sizeFromShape",(function(){return bp})),n.d(r,"isScalarShape",(function(){return xp})),n.d(r,"arraysEqual",(function(){return wp})),n.d(r,"isInt",(function(){return vp})),n.d(r,"tanh",(function(){return kp})),n.d(r,"sizeToSquarishShape",(function(){return Sp})),n.d(r,"createShuffledIndices",(function(){return Ip})),n.d(r,"rightPad",(function(){return Cp})),n.d(r,"repeatedTry",(function(){return Np})),n.d(r,"inferFromImplicitShape",(function(){return Tp})),n.d(r,"parseAxisParam",(function(){return _p})),n.d(r,"squeezeShape",(function(){return Ep})),n.d(r,"getTypedArrayFromDType",(function(){return Ap})),n.d(r,"getArrayFromDType",(function(){return Rp})),n.d(r,"checkConversionForErrors",(function(){return $p})),n.d(r,"isValidDtype",(function(){return Fp})),n.d(r,"hasEncodingLoss",(function(){return Dp})),n.d(r,"isTypedArray",(function(){return Op})),n.d(r,"bytesPerElement",(function(){return Mp})),n.d(r,"bytesFromStringArray",(function(){return Lp})),n.d(r,"isString",(function(){return zp})),n.d(r,"isBoolean",(function(){return Pp})),n.d(r,"isNumber",(function(){return Bp})),n.d(r,"inferDtype",(function(){return Up})),n.d(r,"isFunction",(function(){return Vp})),n.d(r,"nearestDivisor",(function(){return Wp})),n.d(r,"computeStrides",(function(){return Gp})),n.d(r,"toNestedArray",(function(){return Hp})),n.d(r,"makeOnesTypedArray",(function(){return jp})),n.d(r,"makeZerosTypedArray",(function(){return qp})),n.d(r,"makeZerosNestedTypedArray",(function(){return Kp})),n.d(r,"assertNonNegativeIntegerDimensions",(function(){return Xp})),n.d(r,"locToIndex",(function(){return Zp})),n.d(r,"indexToLoc",(function(){return Yp})),n.d(r,"isPromise",(function(){return Jp})),n.d(r,"hexToLong",(function(){return xf})),n.d(r,"fingerPrint64",(function(){return Af})),n.d(r,"createScalarValue",(function(){return Rf})),n.d(r,"toTypedArray",(function(){return $f})),n.d(r,"now",(function(){return Ff})),n.d(r,"fetch",(function(){return Df})),n.d(r,"encodeString",(function(){return Of})),n.d(r,"decodeString",(function(){return Mf}));var s={};n.r(s),n.d(s,"makeTypesMatch",(function(){return sm})),n.d(s,"assertTypesMatch",(function(){return am})),n.d(s,"isTensorInList",(function(){return im})),n.d(s,"getTensorsInContainer",(function(){return om}));var a={};n.r(a),n.d(a,"mockIsMobile",(function(){return mm})),n.d(a,"isMobile",(function(){return gm})),n.d(a,"isBrowser",(function(){return ym}));var i={};n.r(i),n.d(i,"copyModel",(function(){return dg})),n.d(i,"listModels",(function(){return cg})),n.d(i,"moveModel",(function(){return pg})),n.d(i,"removeModel",(function(){return hg})),n.d(i,"browserFiles",(function(){return kg})),n.d(i,"browserHTTPRequest",(function(){return Rg})),n.d(i,"concatenateArrayBuffers",(function(){return Fm})),n.d(i,"decodeWeights",(function(){return Em})),n.d(i,"encodeWeights",(function(){return _m})),n.d(i,"fromMemory",(function(){return Dg})),n.d(i,"getLoadHandlers",(function(){return Wm})),n.d(i,"getModelArtifactsForJSON",(function(){return Mm})),n.d(i,"getModelArtifactsInfoForJSON",(function(){return Lm})),n.d(i,"getSaveHandlers",(function(){return Vm})),n.d(i,"http",(function(){return Ag})),n.d(i,"isHTTPScheme",(function(){return _g})),n.d(i,"loadWeights",(function(){return Cg})),n.d(i,"registerLoadRouter",(function(){return Um})),n.d(i,"registerSaveRouter",(function(){return Bm})),n.d(i,"weightsLoaderFactory",(function(){return Ng})),n.d(i,"withSaveHandler",(function(){return Og}));var o={};n.r(o),n.d(o,"getBroadcastDims",(function(){return Mg})),n.d(o,"getReductionAxes",(function(){return Lg})),n.d(o,"assertAndGetBroadcastShape",(function(){return zg}));var l={};n.r(l),n.d(l,"fromPixelsAsync",(function(){return Ug})),n.d(l,"toPixels",(function(){return Vg})),n.d(l,"fromPixels",(function(){return Wg}));var u={};n.r(u),n.d(u,"assertParamsValid",(function(){return Gg})),n.d(u,"maskToAxes",(function(){return Hg})),n.d(u,"computeOutShape",(function(){return jg})),n.d(u,"stridesWithElidedDims",(function(){return qg})),n.d(u,"getNormalizedAxes",(function(){return Zg})),n.d(u,"startIndicesWithElidedDims",(function(){return Yg})),n.d(u,"stopIndicesWithElidedDims",(function(){return Jg})),n.d(u,"stridesForAxis",(function(){return Qg})),n.d(u,"startForAxis",(function(){return ey})),n.d(u,"stopForAxis",(function(){return ty})),n.d(u,"isSliceContinous",(function(){return ny})),n.d(u,"computeFlatOffset",(function(){return ry})),n.d(u,"parseSliceParams",(function(){return sy})),n.d(u,"sliceInfo",(function(){return ay}));var c={};n.r(c),n.d(c,"Serializable",(function(){return oy})),n.d(c,"SerializationMap",(function(){return ly})),n.d(c,"registerClass",(function(){return uy}));var h={};n.r(h),n.d(h,"conv2d",(function(){return Vx})),n.d(h,"depthwiseConv2d",(function(){return Hx})),n.d(h,"matMul",(function(){return jx}));var d={};n.r(d),n.d(d,"segOpComputeOptimalWindowSize",(function(){return Bv})),n.d(d,"computeOutShape",(function(){return Uv})),n.d(d,"collectGatherOpShapeInfo",(function(){return Vv}));var p={};n.r(p),n.d(p,"axesAreInnerMostDims",(function(){return Fb})),n.d(p,"combineLocations",(function(){return Db})),n.d(p,"computeOutAndReduceShapes",(function(){return Ob})),n.d(p,"expandShapeToKeepDim",(function(){return Mb})),n.d(p,"assertAxesAreInnerMostDims",(function(){return Lb})),n.d(p,"getAxesPermutation",(function(){return zb})),n.d(p,"getUndoAxesPermutation",(function(){return Pb})),n.d(p,"getInnerMostAxes",(function(){return Bb})),n.d(p,"getBroadcastDims",(function(){return Mg})),n.d(p,"getReductionAxes",(function(){return Lg})),n.d(p,"assertAndGetBroadcastShape",(function(){return zg})),n.d(p,"assertParamsConsistent",(function(){return Gw})),n.d(p,"computeOutShape",(function(){return Hw})),n.d(p,"computeDilation2DInfo",(function(){return Iy})),n.d(p,"computePool2DInfo",(function(){return Cy})),n.d(p,"computePool3DInfo",(function(){return Ny})),n.d(p,"computeConv2DInfo",(function(){return Ty})),n.d(p,"computeConv3DInfo",(function(){return _y})),n.d(p,"computeDefaultPad",(function(){return Ey})),n.d(p,"tupleValuesAreOne",(function(){return Dy})),n.d(p,"eitherStridesOrDilationsAreOne",(function(){return Oy})),n.d(p,"convertConv2DDataFormat",(function(){return My})),n.d(p,"checkPadOnDimRoundingMode",(function(){return Ly})),n.d(p,"getFusedDyActivation",(function(){return zx})),n.d(p,"getFusedBiasGradient",(function(){return Px})),n.d(p,"applyActivation",(function(){return Bx})),n.d(p,"shouldFuse",(function(){return Ux})),n.d(p,"PARALLELIZE_THRESHOLD",(function(){return jw})),n.d(p,"computeOptimalWindowSize",(function(){return qw})),n.d(p,"slice_util",(function(){return u})),n.d(p,"upcastType",(function(){return nm})),n.d(p,"getImageCenter",(function(){return Kw})),n.d(p,"getReshaped",(function(){return Xw})),n.d(p,"getPermuted",(function(){return Zw})),n.d(p,"getReshapedPermuted",(function(){return Yw})),n.d(p,"getSliceBeginCoords",(function(){return Jw})),n.d(p,"getSliceSize",(function(){return Qw})),n.d(p,"prepareAndValidate",(function(){return ev})),n.d(p,"validateUpdateShape",(function(){return tv})),n.d(p,"validateInput",(function(){return nv})),n.d(p,"calculateShapes",(function(){return rv})),n.d(p,"SELU_SCALEALPHA",(function(){return sv})),n.d(p,"SELU_SCALE",(function(){return av})),n.d(p,"ERF_P",(function(){return iv})),n.d(p,"ERF_A1",(function(){return ov})),n.d(p,"ERF_A2",(function(){return lv})),n.d(p,"ERF_A3",(function(){return uv})),n.d(p,"ERF_A4",(function(){return cv})),n.d(p,"ERF_A5",(function(){return hv})),n.d(p,"warn",(function(){return of})),n.d(p,"log",(function(){return lf})),n.d(p,"mergeRealAndImagArrays",(function(){return dv})),n.d(p,"splitRealAndImagArrays",(function(){return pv})),n.d(p,"complexWithEvenIndex",(function(){return fv})),n.d(p,"complexWithOddIndex",(function(){return mv})),n.d(p,"getComplexWithIndex",(function(){return gv})),n.d(p,"assignToTypedArray",(function(){return yv})),n.d(p,"exponents",(function(){return bv})),n.d(p,"exponent",(function(){return xv})),n.d(p,"decodeEinsumEquation",(function(){return vv})),n.d(p,"getEinsumPermutation",(function(){return kv})),n.d(p,"checkEinsumDimSizes",(function(){return Sv})),n.d(p,"getEinsumComputePath",(function(){return Iv})),n.d(p,"isIdentityPermutation",(function(){return Cv})),n.d(p,"prepareSplitSize",(function(){return Tv})),n.d(p,"getSparseFillEmptyRowsIndicesDenseShapeMismatch",(function(){return _v})),n.d(p,"getSparseFillEmptyRowsNegativeIndexErrorMessage",(function(){return Ev})),n.d(p,"getSparseFillEmptyRowsOutOfRangeIndexErrorMessage",(function(){return Av})),n.d(p,"getSparseReshapeMultipleNegativeOneOutputDimErrorMessage",(function(){return Rv})),n.d(p,"getSparseReshapeNegativeOutputDimErrorMessage",(function(){return $v})),n.d(p,"getSparseReshapeEmptyTensorZeroOutputDimErrorMessage",(function(){return Fv})),n.d(p,"getSparseReshapeInputOutputMultipleErrorMessage",(function(){return Dv})),n.d(p,"getSparseReshapeInputOutputMismatchErrorMessage",(function(){return Ov})),n.d(p,"getSparseSegmentReductionNegativeSegmentIdsErrorMessage",(function(){return Mv})),n.d(p,"getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage",(function(){return Lv})),n.d(p,"getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage",(function(){return zv})),n.d(p,"getSparseSegmentReductionIndicesOutOfRangeErrorMessage",(function(){return Pv})),n.d(p,"segment_util",(function(){return d})),n.d(p,"fromUint8ToStringArray",(function(){return Wv})),n.d(p,"fromStringArrayToUint8",(function(){return Gv}));var f={};n.r(f),n.d(f,"nonMaxSuppressionV3Impl",(function(){return sw})),n.d(f,"nonMaxSuppressionV4Impl",(function(){return aw})),n.d(f,"nonMaxSuppressionV5Impl",(function(){return iw})),n.d(f,"whereImpl",(function(){return Hv}));var m={};n.r(m),n.d(m,"json",(function(){return LE}));var g={};n.r(g),n.d(g,"json",(function(){return zE}));var y={};n.r(y),n.d(y,"json",(function(){return PE}));var b={};n.r(b),n.d(b,"json",(function(){return BE}));var x={};n.r(x),n.d(x,"json",(function(){return UE}));var w={};n.r(w),n.d(w,"json",(function(){return VE}));var v={};n.r(v),n.d(v,"json",(function(){return WE}));var k={};n.r(k),n.d(k,"json",(function(){return GE}));var S={};n.r(S),n.d(S,"json",(function(){return HE}));var I={};n.r(I),n.d(I,"json",(function(){return jE}));var C={};n.r(C),n.d(C,"json",(function(){return qE}));var N={};n.r(N),n.d(N,"json",(function(){return KE}));var T={};n.r(T),n.d(T,"json",(function(){return XE}));var _={};n.r(_),n.d(_,"json",(function(){return ZE}));var E={};n.r(E),n.d(E,"json",(function(){return YE}));var A={};n.r(A),n.d(A,"json",(function(){return JE}));var R={};n.r(R),n.d(R,"json",(function(){return QE}));var $={};n.r($),n.d($,"json",(function(){return eA}));var F={};n.r(F),n.d(F,"json",(function(){return tA}));var D={};function O(e){return"function"==typeof e}n.r(D),n.d(D,"simpleAbsImpl",(function(){return mR})),n.d(D,"addImpl",(function(){return iR})),n.d(D,"bincountImpl",(function(){return GR})),n.d(D,"bincountReduceImpl",(function(){return HR})),n.d(D,"ceilImpl",(function(){return KR})),n.d(D,"concatImpl",(function(){return JR})),n.d(D,"equalImpl",(function(){return $$})),n.d(D,"expImpl",(function(){return V$})),n.d(D,"expm1Impl",(function(){return q$})),n.d(D,"floorImpl",(function(){return oF})),n.d(D,"gatherNdImpl",(function(){return dF})),n.d(D,"gatherV2Impl",(function(){return fF})),n.d(D,"greaterImpl",(function(){return gF})),n.d(D,"greaterEqualImpl",(function(){return bF})),n.d(D,"lessImpl",(function(){return IF})),n.d(D,"lessEqualImpl",(function(){return NF})),n.d(D,"linSpaceImpl",(function(){return _F})),n.d(D,"logImpl",(function(){return AF})),n.d(D,"maxImpl",(function(){return zF})),n.d(D,"maximumImpl",(function(){return UF})),n.d(D,"minimumImpl",(function(){return ZF})),n.d(D,"multiplyImpl",(function(){return I$})),n.d(D,"negImpl",(function(){return rD})),n.d(D,"notEqualImpl",(function(){return hD})),n.d(D,"prodImpl",(function(){return vD})),n.d(D,"rangeImpl",(function(){return SD})),n.d(D,"rsqrtImpl",(function(){return FD})),n.d(D,"sigmoidImpl",(function(){return qA})),n.d(D,"sliceImpl",(function(){return BR})),n.d(D,"sparseFillEmptyRowsImpl",(function(){return qD})),n.d(D,"sparseReshapeImpl",(function(){return XD})),n.d(D,"sparseSegmentReductionImpl",(function(){return YD})),n.d(D,"sqrtImpl",(function(){return nO})),n.d(D,"squaredDifferenceImpl",(function(){return aO})),n.d(D,"stridedSliceImpl",(function(){return lO})),n.d(D,"stringNGramsImpl",(function(){return hO})),n.d(D,"stringSplitImpl",(function(){return fO})),n.d(D,"stringToHashBucketFastImpl",(function(){return gO})),n.d(D,"subImpl",(function(){return Y$})),n.d(D,"tileImpl",(function(){return wO})),n.d(D,"topKImpl",(function(){return SO})),n.d(D,"transposeImpl",(function(){return wR})),n.d(D,"uniqueImpl",(function(){return _O}));let M=!1;const L={Promise:void 0,set useDeprecatedSynchronousErrorHandling(e){if(e){const e=new Error;console.warn("DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \n"+e.stack)}else M&&console.log("RxJS: Back to a better error behavior. Thank you. <3");M=e},get useDeprecatedSynchronousErrorHandling(){return M}};function z(e){setTimeout(()=>{throw e},0)}const P={closed:!0,next(e){},error(e){if(L.useDeprecatedSynchronousErrorHandling)throw e;z(e)},complete(){}},B=(()=>Array.isArray||(e=>e&&"number"==typeof e.length))();function U(e){return null!==e&&"object"==typeof e}const V=(()=>{function e(e){return Error.call(this),this.message=e?`${e.length} errors occurred during unsubscription:\n${e.map((e,t)=>`${t+1}) ${e.toString()}`).join("\n  ")}`:"",this.name="UnsubscriptionError",this.errors=e,this}return e.prototype=Object.create(Error.prototype),e})();let W=(()=>{class e{constructor(e){this.closed=!1,this._parentOrParents=null,this._subscriptions=null,e&&(this._unsubscribe=e)}unsubscribe(){let t;if(this.closed)return;let{_parentOrParents:n,_unsubscribe:r,_subscriptions:s}=this;if(this.closed=!0,this._parentOrParents=null,this._subscriptions=null,n instanceof e)n.remove(this);else if(null!==n)for(let e=0;e<n.length;++e)n[e].remove(this);if(O(r))try{r.call(this)}catch(a){t=a instanceof V?G(a.errors):[a]}if(B(s)){let e=-1,n=s.length;for(;++e<n;){const n=s[e];if(U(n))try{n.unsubscribe()}catch(a){t=t||[],a instanceof V?t=t.concat(G(a.errors)):t.push(a)}}}if(t)throw new V(t)}add(t){let n=t;if(!t)return e.EMPTY;switch(typeof t){case"function":n=new e(t);case"object":if(n===this||n.closed||"function"!=typeof n.unsubscribe)return n;if(this.closed)return n.unsubscribe(),n;if(!(n instanceof e)){const t=n;n=new e,n._subscriptions=[t]}break;default:throw new Error("unrecognized teardown "+t+" added to Subscription.")}let{_parentOrParents:r}=n;if(null===r)n._parentOrParents=this;else if(r instanceof e){if(r===this)return n;n._parentOrParents=[r,this]}else{if(-1!==r.indexOf(this))return n;r.push(this)}const s=this._subscriptions;return null===s?this._subscriptions=[n]:s.push(n),n}remove(e){const t=this._subscriptions;if(t){const n=t.indexOf(e);-1!==n&&t.splice(n,1)}}}return e.EMPTY=function(e){return e.closed=!0,e}(new e),e})();function G(e){return e.reduce((e,t)=>e.concat(t instanceof V?t.errors:t),[])}const H=(()=>"function"==typeof Symbol?Symbol("rxSubscriber"):"@@rxSubscriber_"+Math.random())();class j extends W{constructor(e,t,n){switch(super(),this.syncErrorValue=null,this.syncErrorThrown=!1,this.syncErrorThrowable=!1,this.isStopped=!1,arguments.length){case 0:this.destination=P;break;case 1:if(!e){this.destination=P;break}if("object"==typeof e){e instanceof j?(this.syncErrorThrowable=e.syncErrorThrowable,this.destination=e,e.add(this)):(this.syncErrorThrowable=!0,this.destination=new q(this,e));break}default:this.syncErrorThrowable=!0,this.destination=new q(this,e,t,n)}}[H](){return this}static create(e,t,n){const r=new j(e,t,n);return r.syncErrorThrowable=!1,r}next(e){this.isStopped||this._next(e)}error(e){this.isStopped||(this.isStopped=!0,this._error(e))}complete(){this.isStopped||(this.isStopped=!0,this._complete())}unsubscribe(){this.closed||(this.isStopped=!0,super.unsubscribe())}_next(e){this.destination.next(e)}_error(e){this.destination.error(e),this.unsubscribe()}_complete(){this.destination.complete(),this.unsubscribe()}_unsubscribeAndRecycle(){const{_parentOrParents:e}=this;return this._parentOrParents=null,this.unsubscribe(),this.closed=!1,this.isStopped=!1,this._parentOrParents=e,this}}class q extends j{constructor(e,t,n,r){let s;super(),this._parentSubscriber=e;let a=this;O(t)?s=t:t&&(s=t.next,n=t.error,r=t.complete,t!==P&&(a=Object.create(t),O(a.unsubscribe)&&this.add(a.unsubscribe.bind(a)),a.unsubscribe=this.unsubscribe.bind(this))),this._context=a,this._next=s,this._error=n,this._complete=r}next(e){if(!this.isStopped&&this._next){const{_parentSubscriber:t}=this;L.useDeprecatedSynchronousErrorHandling&&t.syncErrorThrowable?this.__tryOrSetError(t,this._next,e)&&this.unsubscribe():this.__tryOrUnsub(this._next,e)}}error(e){if(!this.isStopped){const{_parentSubscriber:t}=this,{useDeprecatedSynchronousErrorHandling:n}=L;if(this._error)n&&t.syncErrorThrowable?(this.__tryOrSetError(t,this._error,e),this.unsubscribe()):(this.__tryOrUnsub(this._error,e),this.unsubscribe());else if(t.syncErrorThrowable)n?(t.syncErrorValue=e,t.syncErrorThrown=!0):z(e),this.unsubscribe();else{if(this.unsubscribe(),n)throw e;z(e)}}}complete(){if(!this.isStopped){const{_parentSubscriber:e}=this;if(this._complete){const t=()=>this._complete.call(this._context);L.useDeprecatedSynchronousErrorHandling&&e.syncErrorThrowable?(this.__tryOrSetError(e,t),this.unsubscribe()):(this.__tryOrUnsub(t),this.unsubscribe())}else this.unsubscribe()}}__tryOrUnsub(e,t){try{e.call(this._context,t)}catch(n){if(this.unsubscribe(),L.useDeprecatedSynchronousErrorHandling)throw n;z(n)}}__tryOrSetError(e,t,n){if(!L.useDeprecatedSynchronousErrorHandling)throw new Error("bad call");try{t.call(this._context,n)}catch(r){return L.useDeprecatedSynchronousErrorHandling?(e.syncErrorValue=r,e.syncErrorThrown=!0,!0):(z(r),!0)}return!1}_unsubscribe(){const{_parentSubscriber:e}=this;this._context=null,this._parentSubscriber=null,e.unsubscribe()}}const K=(()=>"function"==typeof Symbol&&Symbol.observable||"@@observable")();function X(e){return e}function Z(...e){return Y(e)}function Y(e){return 0===e.length?X:1===e.length?e[0]:function(t){return e.reduce((e,t)=>t(e),t)}}let J=(()=>{class e{constructor(e){this._isScalar=!1,e&&(this._subscribe=e)}lift(t){const n=new e;return n.source=this,n.operator=t,n}subscribe(e,t,n){const{operator:r}=this,s=function(e,t,n){if(e){if(e instanceof j)return e;if(e[H])return e[H]()}return e||t||n?new j(e,t,n):new j(P)}(e,t,n);if(s.add(r?r.call(s,this.source):this.source||L.useDeprecatedSynchronousErrorHandling&&!s.syncErrorThrowable?this._subscribe(s):this._trySubscribe(s)),L.useDeprecatedSynchronousErrorHandling&&s.syncErrorThrowable&&(s.syncErrorThrowable=!1,s.syncErrorThrown))throw s.syncErrorValue;return s}_trySubscribe(e){try{return this._subscribe(e)}catch(t){L.useDeprecatedSynchronousErrorHandling&&(e.syncErrorThrown=!0,e.syncErrorValue=t),function(e){for(;e;){const{closed:t,destination:n,isStopped:r}=e;if(t||r)return!1;e=n&&n instanceof j?n:null}return!0}(e)?e.error(t):console.warn(t)}}forEach(e,t){return new(t=Q(t))((t,n)=>{let r;r=this.subscribe(t=>{try{e(t)}catch(s){n(s),r&&r.unsubscribe()}},n,t)})}_subscribe(e){const{source:t}=this;return t&&t.subscribe(e)}[K](){return this}pipe(...e){return 0===e.length?this:Y(e)(this)}toPromise(e){return new(e=Q(e))((e,t)=>{let n;this.subscribe(e=>n=e,e=>t(e),()=>e(n))})}}return e.create=t=>new e(t),e})();function Q(e){if(e||(e=L.Promise||Promise),!e)throw new Error("no Promise impl found");return e}const ee=(()=>{function e(){return Error.call(this),this.message="object unsubscribed",this.name="ObjectUnsubscribedError",this}return e.prototype=Object.create(Error.prototype),e})();class te extends W{constructor(e,t){super(),this.subject=e,this.subscriber=t,this.closed=!1}unsubscribe(){if(this.closed)return;this.closed=!0;const e=this.subject,t=e.observers;if(this.subject=null,!t||0===t.length||e.isStopped||e.closed)return;const n=t.indexOf(this.subscriber);-1!==n&&t.splice(n,1)}}class ne extends j{constructor(e){super(e),this.destination=e}}let re=(()=>{class e extends J{constructor(){super(),this.observers=[],this.closed=!1,this.isStopped=!1,this.hasError=!1,this.thrownError=null}[H](){return new ne(this)}lift(e){const t=new se(this,this);return t.operator=e,t}next(e){if(this.closed)throw new ee;if(!this.isStopped){const{observers:t}=this,n=t.length,r=t.slice();for(let s=0;s<n;s++)r[s].next(e)}}error(e){if(this.closed)throw new ee;this.hasError=!0,this.thrownError=e,this.isStopped=!0;const{observers:t}=this,n=t.length,r=t.slice();for(let s=0;s<n;s++)r[s].error(e);this.observers.length=0}complete(){if(this.closed)throw new ee;this.isStopped=!0;const{observers:e}=this,t=e.length,n=e.slice();for(let r=0;r<t;r++)n[r].complete();this.observers.length=0}unsubscribe(){this.isStopped=!0,this.closed=!0,this.observers=null}_trySubscribe(e){if(this.closed)throw new ee;return super._trySubscribe(e)}_subscribe(e){if(this.closed)throw new ee;return this.hasError?(e.error(this.thrownError),W.EMPTY):this.isStopped?(e.complete(),W.EMPTY):(this.observers.push(e),new te(this,e))}asObservable(){const e=new J;return e.source=this,e}}return e.create=(e,t)=>new se(e,t),e})();class se extends re{constructor(e,t){super(),this.destination=e,this.source=t}next(e){const{destination:t}=this;t&&t.next&&t.next(e)}error(e){const{destination:t}=this;t&&t.error&&this.destination.error(e)}complete(){const{destination:e}=this;e&&e.complete&&this.destination.complete()}_subscribe(e){const{source:t}=this;return t?this.source.subscribe(e):W.EMPTY}}function ae(e){return e&&"function"==typeof e.schedule}class ie extends j{constructor(e,t,n){super(),this.parent=e,this.outerValue=t,this.outerIndex=n,this.index=0}_next(e){this.parent.notifyNext(this.outerValue,e,this.outerIndex,this.index++,this)}_error(e){this.parent.notifyError(e,this),this.unsubscribe()}_complete(){this.parent.notifyComplete(this),this.unsubscribe()}}const oe=e=>t=>{for(let n=0,r=e.length;n<r&&!t.closed;n++)t.next(e[n]);t.complete()};function le(){return"function"==typeof Symbol&&Symbol.iterator?Symbol.iterator:"@@iterator"}const ue=le(),ce=e=>e&&"number"==typeof e.length&&"function"!=typeof e;function he(e){return!!e&&"function"!=typeof e.subscribe&&"function"==typeof e.then}const de=e=>{if(e&&"function"==typeof e[K])return r=e,e=>{const t=r[K]();if("function"!=typeof t.subscribe)throw new TypeError("Provided object does not correctly implement Symbol.observable");return t.subscribe(e)};if(ce(e))return oe(e);if(he(e))return n=e,e=>(n.then(t=>{e.closed||(e.next(t),e.complete())},t=>e.error(t)).then(null,z),e);if(e&&"function"==typeof e[ue])return t=e,e=>{const n=t[ue]();for(;;){const t=n.next();if(t.done){e.complete();break}if(e.next(t.value),e.closed)break}return"function"==typeof n.return&&e.add(()=>{n.return&&n.return()}),e};{const t=U(e)?"an invalid object":`'${e}'`;throw new TypeError(`You provided ${t} where a stream was expected. You can provide an Observable, Promise, Array, or Iterable.`)}var t,n,r};function pe(e,t,n,r,s=new ie(e,n,r)){if(!s.closed)return t instanceof J?t.subscribe(s):de(t)(s)}class fe extends j{notifyNext(e,t,n,r,s){this.destination.next(t)}notifyError(e,t){this.destination.error(e)}notifyComplete(e){this.destination.complete()}}function me(e,t){return function(n){if("function"!=typeof e)throw new TypeError("argument is not a function. Are you looking for `mapTo()`?");return n.lift(new ge(e,t))}}class ge{constructor(e,t){this.project=e,this.thisArg=t}call(e,t){return t.subscribe(new ye(e,this.project,this.thisArg))}}class ye extends j{constructor(e,t,n){super(e),this.project=t,this.count=0,this.thisArg=n||this}_next(e){let t;try{t=this.project.call(this.thisArg,e,this.count++)}catch(n){return void this.destination.error(n)}this.destination.next(t)}}function be(e,t){return new J(n=>{const r=new W;let s=0;return r.add(t.schedule((function(){s!==e.length?(n.next(e[s++]),n.closed||r.add(this.schedule())):n.complete()}))),r})}function xe(e,t){return t?function(e,t){if(null!=e){if(function(e){return e&&"function"==typeof e[K]}(e))return function(e,t){return new J(n=>{const r=new W;return r.add(t.schedule(()=>{const s=e[K]();r.add(s.subscribe({next(e){r.add(t.schedule(()=>n.next(e)))},error(e){r.add(t.schedule(()=>n.error(e)))},complete(){r.add(t.schedule(()=>n.complete()))}}))})),r})}(e,t);if(he(e))return function(e,t){return new J(n=>{const r=new W;return r.add(t.schedule(()=>e.then(e=>{r.add(t.schedule(()=>{n.next(e),r.add(t.schedule(()=>n.complete()))}))},e=>{r.add(t.schedule(()=>n.error(e)))}))),r})}(e,t);if(ce(e))return be(e,t);if(function(e){return e&&"function"==typeof e[ue]}(e)||"string"==typeof e)return function(e,t){if(!e)throw new Error("Iterable cannot be null");return new J(n=>{const r=new W;let s;return r.add(()=>{s&&"function"==typeof s.return&&s.return()}),r.add(t.schedule(()=>{s=e[ue](),r.add(t.schedule((function(){if(n.closed)return;let e,t;try{const n=s.next();e=n.value,t=n.done}catch(r){return void n.error(r)}t?n.complete():(n.next(e),this.schedule())})))})),r})}(e,t)}throw new TypeError((null!==e&&typeof e||e)+" is not observable")}(e,t):e instanceof J?e:new J(de(e))}function we(e,t,n=Number.POSITIVE_INFINITY){return"function"==typeof t?r=>r.pipe(we((n,r)=>xe(e(n,r)).pipe(me((e,s)=>t(n,e,r,s))),n)):("number"==typeof t&&(n=t),t=>t.lift(new ve(e,n)))}class ve{constructor(e,t=Number.POSITIVE_INFINITY){this.project=e,this.concurrent=t}call(e,t){return t.subscribe(new ke(e,this.project,this.concurrent))}}class ke extends fe{constructor(e,t,n=Number.POSITIVE_INFINITY){super(e),this.project=t,this.concurrent=n,this.hasCompleted=!1,this.buffer=[],this.active=0,this.index=0}_next(e){this.active<this.concurrent?this._tryNext(e):this.buffer.push(e)}_tryNext(e){let t;const n=this.index++;try{t=this.project(e,n)}catch(r){return void this.destination.error(r)}this.active++,this._innerSub(t,e,n)}_innerSub(e,t,n){const r=new ie(this,t,n),s=this.destination;s.add(r);const a=pe(this,e,void 0,void 0,r);a!==r&&s.add(a)}_complete(){this.hasCompleted=!0,0===this.active&&0===this.buffer.length&&this.destination.complete(),this.unsubscribe()}notifyNext(e,t,n,r,s){this.destination.next(t)}notifyComplete(e){const t=this.buffer;this.remove(e),this.active--,t.length>0?this._next(t.shift()):0===this.active&&this.hasCompleted&&this.destination.complete()}}function Se(e=Number.POSITIVE_INFINITY){return we(X,e)}function Ie(e,t){return t?be(e,t):new J(oe(e))}function Ce(){return function(e){return e.lift(new Ne(e))}}class Ne{constructor(e){this.connectable=e}call(e,t){const{connectable:n}=this;n._refCount++;const r=new Te(e,n),s=t.subscribe(r);return r.closed||(r.connection=n.connect()),s}}class Te extends j{constructor(e,t){super(e),this.connectable=t}_unsubscribe(){const{connectable:e}=this;if(!e)return void(this.connection=null);this.connectable=null;const t=e._refCount;if(t<=0)return void(this.connection=null);if(e._refCount=t-1,t>1)return void(this.connection=null);const{connection:n}=this,r=e._connection;this.connection=null,!r||n&&r!==n||r.unsubscribe()}}class _e extends J{constructor(e,t){super(),this.source=e,this.subjectFactory=t,this._refCount=0,this._isComplete=!1}_subscribe(e){return this.getSubject().subscribe(e)}getSubject(){const e=this._subject;return e&&!e.isStopped||(this._subject=this.subjectFactory()),this._subject}connect(){let e=this._connection;return e||(this._isComplete=!1,e=this._connection=new W,e.add(this.source.subscribe(new Ae(this.getSubject(),this))),e.closed&&(this._connection=null,e=W.EMPTY)),e}refCount(){return Ce()(this)}}const Ee=(()=>{const e=_e.prototype;return{operator:{value:null},_refCount:{value:0,writable:!0},_subject:{value:null,writable:!0},_connection:{value:null,writable:!0},_subscribe:{value:e._subscribe},_isComplete:{value:e._isComplete,writable:!0},getSubject:{value:e.getSubject},connect:{value:e.connect},refCount:{value:e.refCount}}})();class Ae extends ne{constructor(e,t){super(e),this.connectable=t}_error(e){this._unsubscribe(),super._error(e)}_complete(){this.connectable._isComplete=!0,this._unsubscribe(),super._complete()}_unsubscribe(){const e=this.connectable;if(e){this.connectable=null;const t=e._connection;e._refCount=0,e._subject=null,e._connection=null,t&&t.unsubscribe()}}}function Re(){return new re}function $e(e){return{toString:e}.toString()}function Fe(e,t,n){return $e(()=>{const r=function(e){return function(...t){if(e){const n=e(...t);for(const e in n)this[e]=n[e]}}}(t);function s(...e){if(this instanceof s)return r.apply(this,e),this;const t=new s(...e);return n.annotation=t,n;function n(e,n,r){const s=e.hasOwnProperty("__parameters__")?e.__parameters__:Object.defineProperty(e,"__parameters__",{value:[]}).__parameters__;for(;s.length<=r;)s.push(null);return(s[r]=s[r]||[]).push(t),e}}return n&&(s.prototype=Object.create(n.prototype)),s.prototype.ngMetadataName=e,s.annotationCls=s,s})}const De=Fe("Inject",e=>({token:e})),Oe=Fe("Optional"),Me=Fe("Self"),Le=Fe("SkipSelf");var ze=function(e){return e[e.Default=0]="Default",e[e.Host=1]="Host",e[e.Self=2]="Self",e[e.SkipSelf=4]="SkipSelf",e[e.Optional=8]="Optional",e}({});function Pe(e){for(let t in e)if(e[t]===Pe)return t;throw Error("Could not find renamed property on target object.")}function Be(e){return{token:e.token,providedIn:e.providedIn||null,factory:e.factory,value:void 0}}function Ue(e){return{factory:e.factory,providers:e.providers||[],imports:e.imports||[]}}function Ve(e){return We(e,e[He])||We(e,e[Ke])}function We(e,t){return t&&t.token===e?t:null}function Ge(e){return e&&(e.hasOwnProperty(je)||e.hasOwnProperty(Xe))?e[je]:null}const He=Pe({"\u0275prov":Pe}),je=Pe({"\u0275inj":Pe}),qe=Pe({"\u0275provFallback":Pe}),Ke=Pe({ngInjectableDef:Pe}),Xe=Pe({ngInjectorDef:Pe});function Ze(e){if("string"==typeof e)return e;if(Array.isArray(e))return"["+e.map(Ze).join(", ")+"]";if(null==e)return""+e;if(e.overriddenName)return""+e.overriddenName;if(e.name)return""+e.name;const t=e.toString();if(null==t)return""+t;const n=t.indexOf("\n");return-1===n?t:t.substring(0,n)}function Ye(e,t){return null==e||""===e?null===t?"":t:null==t||""===t?e:e+" "+t}const Je=Pe({__forward_ref__:Pe});function Qe(e){return e.__forward_ref__=Qe,e.toString=function(){return Ze(this())},e}function et(e){return function(e){return"function"==typeof e&&e.hasOwnProperty(Je)&&e.__forward_ref__===Qe}(e)?e():e}const tt="undefined"!=typeof globalThis&&globalThis,nt="undefined"!=typeof window&&window,rt="undefined"!=typeof self&&"undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope&&self,st="undefined"!=typeof global&&global,at=tt||st||nt||rt,it=Pe({"\u0275cmp":Pe}),ot=Pe({"\u0275dir":Pe}),lt=Pe({"\u0275pipe":Pe}),ut=Pe({"\u0275mod":Pe}),ct=Pe({"\u0275loc":Pe}),ht=Pe({"\u0275fac":Pe}),dt=Pe({__NG_ELEMENT_ID__:Pe});class pt{constructor(e,t){this._desc=e,this.ngMetadataName="InjectionToken",this.\u0275prov=void 0,"number"==typeof t?this.__NG_ELEMENT_ID__=t:void 0!==t&&(this.\u0275prov=Be({token:this,providedIn:t.providedIn||"root",factory:t.factory}))}toString(){return"InjectionToken "+this._desc}}const ft=new pt("INJECTOR",-1),mt={},gt=/\n/gm,yt=Pe({provide:String,useValue:Pe});let bt,xt=void 0;function wt(e){const t=xt;return xt=e,t}function vt(e){const t=bt;return bt=e,t}function kt(e,t=ze.Default){if(void 0===xt)throw new Error("inject() must be called from an injection context");return null===xt?It(e,void 0,t):xt.get(e,t&ze.Optional?null:void 0,t)}function St(e,t=ze.Default){return(bt||kt)(et(e),t)}function It(e,t,n){const r=Ve(e);if(r&&"root"==r.providedIn)return void 0===r.value?r.value=r.factory():r.value;if(n&ze.Optional)return null;if(void 0!==t)return t;throw new Error(`Injector: NOT_FOUND [${Ze(e)}]`)}function Ct(e){const t=[];for(let n=0;n<e.length;n++){const r=et(e[n]);if(Array.isArray(r)){if(0===r.length)throw new Error("Arguments array must have arguments.");let e=void 0,n=ze.Default;for(let t=0;t<r.length;t++){const s=r[t];s instanceof Oe||"Optional"===s.ngMetadataName||s===Oe?n|=ze.Optional:s instanceof Le||"SkipSelf"===s.ngMetadataName||s===Le?n|=ze.SkipSelf:s instanceof Me||"Self"===s.ngMetadataName||s===Me?n|=ze.Self:e=s instanceof De||s===De?s.token:s}t.push(St(e,n))}else t.push(St(r))}return t}class Nt{get(e,t=mt){if(t===mt){const t=new Error(`NullInjectorError: No provider for ${Ze(e)}!`);throw t.name="NullInjectorError",t}return t}}class Tt{}class _t{}function Et(e,t){e.forEach(e=>Array.isArray(e)?Et(e,t):t(e))}function At(e,t,n){t>=e.length?e.push(n):e.splice(t,0,n)}function Rt(e,t){return t>=e.length-1?e.pop():e.splice(t,1)[0]}function $t(e,t){const n=[];for(let r=0;r<e;r++)n.push(t);return n}function Ft(e,t,n){let r=Ot(e,t);return r>=0?e[1|r]=n:(r=~r,function(e,t,n,r){let s=e.length;if(s==t)e.push(n,r);else if(1===s)e.push(r,e[0]),e[0]=n;else{for(s--,e.push(e[s-1],e[s]);s>t;)e[s]=e[s-2],s--;e[t]=n,e[t+1]=r}}(e,r,t,n)),r}function Dt(e,t){const n=Ot(e,t);if(n>=0)return e[1|n]}function Ot(e,t){return function(e,t,n){let r=0,s=e.length>>1;for(;s!==r;){const n=r+(s-r>>1),a=e[n<<1];if(t===a)return n<<1;a>t?s=n:r=n+1}return~(s<<1)}(e,t)}const Mt=function(){var e={OnPush:0,Default:1};return e[e.OnPush]="OnPush",e[e.Default]="Default",e}(),Lt=function(){var e={Emulated:0,Native:1,None:2,ShadowDom:3};return e[e.Emulated]="Emulated",e[e.Native]="Native",e[e.None]="None",e[e.ShadowDom]="ShadowDom",e}(),zt={},Pt=[];let Bt=0;function Ut(e){return $e(()=>{const t=e.type,n=t.prototype,r={},s={type:t,providersResolver:null,decls:e.decls,vars:e.vars,factory:null,template:e.template||null,consts:e.consts||null,ngContentSelectors:e.ngContentSelectors,hostBindings:e.hostBindings||null,hostVars:e.hostVars||0,hostAttrs:e.hostAttrs||null,contentQueries:e.contentQueries||null,declaredInputs:r,inputs:null,outputs:null,exportAs:e.exportAs||null,onChanges:null,onInit:n.ngOnInit||null,doCheck:n.ngDoCheck||null,afterContentInit:n.ngAfterContentInit||null,afterContentChecked:n.ngAfterContentChecked||null,afterViewInit:n.ngAfterViewInit||null,afterViewChecked:n.ngAfterViewChecked||null,onDestroy:n.ngOnDestroy||null,onPush:e.changeDetection===Mt.OnPush,directiveDefs:null,pipeDefs:null,selectors:e.selectors||Pt,viewQuery:e.viewQuery||null,features:e.features||null,data:e.data||{},encapsulation:e.encapsulation||Lt.Emulated,id:"c",styles:e.styles||Pt,_:null,setInput:null,schemas:e.schemas||null,tView:null},a=e.directives,i=e.features,o=e.pipes;return s.id+=Bt++,s.inputs=jt(e.inputs,r),s.outputs=jt(e.outputs),i&&i.forEach(e=>e(s)),s.directiveDefs=a?()=>("function"==typeof a?a():a).map(Vt):null,s.pipeDefs=o?()=>("function"==typeof o?o():o).map(Wt):null,s})}function Vt(e){return Kt(e)||function(e){return e[ot]||null}(e)}function Wt(e){return function(e){return e[lt]||null}(e)}const Gt={};function Ht(e){const t={type:e.type,bootstrap:e.bootstrap||Pt,declarations:e.declarations||Pt,imports:e.imports||Pt,exports:e.exports||Pt,transitiveCompileScopes:null,schemas:e.schemas||null,id:e.id||null};return null!=e.id&&$e(()=>{Gt[e.id]=e.type}),t}function jt(e,t){if(null==e)return zt;const n={};for(const r in e)if(e.hasOwnProperty(r)){let s=e[r],a=s;Array.isArray(s)&&(a=s[1],s=s[0]),n[s]=r,t&&(t[s]=a)}return n}const qt=Ut;function Kt(e){return e[it]||null}function Xt(e,t){return e.hasOwnProperty(ht)?e[ht]:null}function Zt(e,t){const n=e[ut]||null;if(!n&&!0===t)throw new Error(`Type ${Ze(e)} does not have '\u0275mod' property.`);return n}function Yt(e){return Array.isArray(e)&&"object"==typeof e[1]}function Jt(e){return Array.isArray(e)&&!0===e[1]}function Qt(e){return 0!=(8&e.flags)}function en(e){return 2==(2&e.flags)}function tn(e){return 1==(1&e.flags)}function nn(e){return null!==e.template}function rn(e){return 0!=(512&e[2])}let sn=void 0;function an(e){return!!e.listen}const on={createRenderer:(e,t)=>void 0!==sn?sn:"undefined"!=typeof document?document:void 0};function ln(e){for(;Array.isArray(e);)e=e[0];return e}function un(e,t){return ln(t[e.index])}function cn(e,t){return e.data[t+20]}function hn(e,t){const n=t[e];return Yt(n)?n:n[0]}function dn(e){const t=function(e){return e.__ngContext__||null}(e);return t?Array.isArray(t)?t:t.lView:null}function pn(e){return 4==(4&e[2])}function fn(e){return 128==(128&e[2])}function mn(e,t){return null===e||null==t?null:e[t]}function gn(e){e[18]=0}function yn(e,t){e[5]+=t;let n=e,r=e[3];for(;null!==r&&(1===t&&1===n[5]||-1===t&&0===n[5]);)r[5]+=t,n=r,r=r[3]}const bn={lFrame:Mn(null),bindingsEnabled:!0,checkNoChangesMode:!1};function xn(){return bn.bindingsEnabled}function wn(){return bn.lFrame.lView}function vn(){return bn.lFrame.tView}function kn(){return bn.lFrame.previousOrParentTNode}function Sn(e,t){bn.lFrame.previousOrParentTNode=e,bn.lFrame.isParent=t}function In(){return bn.lFrame.isParent}function Cn(){bn.lFrame.isParent=!1}function Nn(){return bn.checkNoChangesMode}function Tn(e){bn.checkNoChangesMode=e}function _n(){return bn.lFrame.bindingIndex++}function En(e,t){const n=bn.lFrame;n.bindingIndex=n.bindingRootIndex=e,An(t)}function An(e){bn.lFrame.currentDirectiveIndex=e}function Rn(){return bn.lFrame.currentQueryIndex}function $n(e){bn.lFrame.currentQueryIndex=e}function Fn(e,t){const n=On();bn.lFrame=n,n.previousOrParentTNode=t,n.lView=e}function Dn(e,t){const n=On(),r=e[1];bn.lFrame=n,n.previousOrParentTNode=t,n.lView=e,n.tView=r,n.contextLView=e,n.bindingIndex=r.bindingStartIndex}function On(){const e=bn.lFrame,t=null===e?null:e.child;return null===t?Mn(e):t}function Mn(e){const t={previousOrParentTNode:null,isParent:!0,lView:null,tView:null,selectedIndex:0,contextLView:null,elementDepthCount:0,currentNamespace:null,currentSanitizer:null,currentDirectiveIndex:-1,bindingRootIndex:-1,bindingIndex:-1,currentQueryIndex:0,parent:e,child:null};return null!==e&&(e.child=t),t}function Ln(){const e=bn.lFrame;return bn.lFrame=e.parent,e.previousOrParentTNode=null,e.lView=null,e}const zn=Ln;function Pn(){const e=Ln();e.isParent=!0,e.tView=null,e.selectedIndex=0,e.contextLView=null,e.elementDepthCount=0,e.currentDirectiveIndex=-1,e.currentNamespace=null,e.currentSanitizer=null,e.bindingRootIndex=-1,e.bindingIndex=-1,e.currentQueryIndex=0}function Bn(){return bn.lFrame.selectedIndex}function Un(e){bn.lFrame.selectedIndex=e}function Vn(){const e=bn.lFrame;return cn(e.tView,e.selectedIndex)}function Wn(e,t){for(let n=t.directiveStart,r=t.directiveEnd;n<r;n++){const t=e.data[n];t.afterContentInit&&(e.contentHooks||(e.contentHooks=[])).push(-n,t.afterContentInit),t.afterContentChecked&&((e.contentHooks||(e.contentHooks=[])).push(n,t.afterContentChecked),(e.contentCheckHooks||(e.contentCheckHooks=[])).push(n,t.afterContentChecked)),t.afterViewInit&&(e.viewHooks||(e.viewHooks=[])).push(-n,t.afterViewInit),t.afterViewChecked&&((e.viewHooks||(e.viewHooks=[])).push(n,t.afterViewChecked),(e.viewCheckHooks||(e.viewCheckHooks=[])).push(n,t.afterViewChecked)),null!=t.onDestroy&&(e.destroyHooks||(e.destroyHooks=[])).push(n,t.onDestroy)}}function Gn(e,t,n){qn(e,t,3,n)}function Hn(e,t,n,r){(3&e[2])===n&&qn(e,t,n,r)}function jn(e,t){let n=e[2];(3&n)===t&&(n&=2047,n+=1,e[2]=n)}function qn(e,t,n,r){const s=null!=r?r:-1;let a=0;for(let i=void 0!==r?65535&e[18]:0;i<t.length;i++)if("number"==typeof t[i+1]){if(a=t[i],null!=r&&a>=r)break}else t[i]<0&&(e[18]+=65536),(a<s||-1==s)&&(Kn(e,n,t,i),e[18]=(4294901760&e[18])+i+2),i++}function Kn(e,t,n,r){const s=n[r]<0,a=n[r+1],i=e[s?-n[r]:n[r]];s?e[2]>>11<e[18]>>16&&(3&e[2])===t&&(e[2]+=2048,a.call(i)):a.call(i)}class Xn{constructor(e,t,n){this.factory=e,this.resolving=!1,this.canSeeViewProviders=t,this.injectImpl=n}}function Zn(e,t,n){const r=an(e);let s=0;for(;s<n.length;){const a=n[s];if("number"==typeof a){if(0!==a)break;s++;const i=n[s++],o=n[s++],l=n[s++];r?e.setAttribute(t,o,l,i):t.setAttributeNS(i,o,l)}else{const i=a,o=n[++s];Jn(i)?r&&e.setProperty(t,i,o):r?e.setAttribute(t,i,o):t.setAttribute(i,o),s++}}return s}function Yn(e){return 3===e||4===e||6===e}function Jn(e){return 64===e.charCodeAt(0)}function Qn(e,t){if(null===t||0===t.length);else if(null===e||0===e.length)e=t.slice();else{let n=-1;for(let r=0;r<t.length;r++){const s=t[r];"number"==typeof s?n=s:0===n||er(e,n,s,null,-1===n||2===n?t[++r]:null)}}return e}function er(e,t,n,r,s){let a=0,i=e.length;if(-1===t)i=-1;else for(;a<e.length;){const n=e[a++];if("number"==typeof n){if(n===t){i=-1;break}if(n>t){i=a-1;break}}}for(;a<e.length;){const t=e[a];if("number"==typeof t)break;if(t===n){if(null===r)return void(null!==s&&(e[a+1]=s));if(r===e[a+1])return void(e[a+2]=s)}a++,null!==r&&a++,null!==s&&a++}-1!==i&&(e.splice(i,0,t),a=i+1),e.splice(a++,0,n),null!==r&&e.splice(a++,0,r),null!==s&&e.splice(a++,0,s)}function tr(e){return-1!==e}function nr(e){return 32767&e}function rr(e){return e>>16}function sr(e,t){let n=rr(e),r=t;for(;n>0;)r=r[15],n--;return r}function ar(e){return"string"==typeof e?e:null==e?"":""+e}function ir(e){return"function"==typeof e?e.name||e.toString():"object"==typeof e&&null!=e&&"function"==typeof e.type?e.type.name||e.type.toString():ar(e)}const or=(()=>("undefined"!=typeof requestAnimationFrame&&requestAnimationFrame||setTimeout).bind(at))();function lr(e){return e instanceof Function?e():e}let ur=!0;function cr(e){const t=ur;return ur=e,t}let hr=0;function dr(e,t){const n=fr(e,t);if(-1!==n)return n;const r=t[1];r.firstCreatePass&&(e.injectorIndex=t.length,pr(r.data,e),pr(t,null),pr(r.blueprint,null));const s=mr(e,t),a=e.injectorIndex;if(tr(s)){const e=nr(s),n=sr(s,t),r=n[1].data;for(let s=0;s<8;s++)t[a+s]=n[e+s]|r[e+s]}return t[a+8]=s,a}function pr(e,t){e.push(0,0,0,0,0,0,0,0,t)}function fr(e,t){return-1===e.injectorIndex||e.parent&&e.parent.injectorIndex===e.injectorIndex||null==t[e.injectorIndex+8]?-1:e.injectorIndex}function mr(e,t){if(e.parent&&-1!==e.parent.injectorIndex)return e.parent.injectorIndex;let n=t[6],r=1;for(;n&&-1===n.injectorIndex;)n=(t=t[15])?t[6]:null,r++;return n?n.injectorIndex|r<<16:-1}function gr(e,t,n){!function(e,t,n){let r="string"!=typeof n?n[dt]:n.charCodeAt(0)||0;null==r&&(r=n[dt]=hr++);const s=255&r,a=1<<s,i=64&s,o=32&s,l=t.data;128&s?i?o?l[e+7]|=a:l[e+6]|=a:o?l[e+5]|=a:l[e+4]|=a:i?o?l[e+3]|=a:l[e+2]|=a:o?l[e+1]|=a:l[e]|=a}(e,t,n)}function yr(e,t,n,r=ze.Default,s){if(null!==e){const s=function(e){if("string"==typeof e)return e.charCodeAt(0)||0;const t=e[dt];return"number"==typeof t&&t>0?255&t:t}(n);if("function"==typeof s){Fn(t,e);try{const e=s();if(null!=e||r&ze.Optional)return e;throw new Error(`No provider for ${ir(n)}!`)}finally{zn()}}else if("number"==typeof s){if(-1===s)return new Ir(e,t);let a=null,i=fr(e,t),o=-1,l=r&ze.Host?t[16][6]:null;for((-1===i||r&ze.SkipSelf)&&(o=-1===i?mr(e,t):t[i+8],Sr(r,!1)?(a=t[1],i=nr(o),t=sr(o,t)):i=-1);-1!==i;){o=t[i+8];const e=t[1];if(kr(s,i,e.data)){const e=xr(i,t,n,a,r,l);if(e!==br)return e}Sr(r,t[1].data[i+8]===l)&&kr(s,i,t)?(a=e,i=nr(o),t=sr(o,t)):i=-1}}}if(r&ze.Optional&&void 0===s&&(s=null),0==(r&(ze.Self|ze.Host))){const e=t[9],a=vt(void 0);try{return e?e.get(n,s,r&ze.Optional):It(n,s,r&ze.Optional)}finally{vt(a)}}if(r&ze.Optional)return s;throw new Error(`NodeInjector: NOT_FOUND [${ir(n)}]`)}const br={};function xr(e,t,n,r,s,a){const i=t[1],o=i.data[e+8],l=wr(o,i,n,null==r?en(o)&&ur:r!=i&&3===o.type,s&ze.Host&&a===o);return null!==l?vr(t,i,l,o):br}function wr(e,t,n,r,s){const a=e.providerIndexes,i=t.data,o=65535&a,l=e.directiveStart,u=a>>16,c=s?o+u:e.directiveEnd;for(let h=r?o:o+u;h<c;h++){const e=i[h];if(h<l&&n===e||h>=l&&e.type===n)return h}if(s){const e=i[l];if(e&&nn(e)&&e.type===n)return l}return null}function vr(e,t,n,r){let s=e[n];const a=t.data;if(s instanceof Xn){const i=s;if(i.resolving)throw new Error("Circular dep for "+ir(a[n]));const o=cr(i.canSeeViewProviders);let l;i.resolving=!0,i.injectImpl&&(l=vt(i.injectImpl)),Fn(e,r);try{s=e[n]=i.factory(void 0,a,e,r),t.firstCreatePass&&n>=r.directiveStart&&function(e,t,n){const{onChanges:r,onInit:s,doCheck:a}=t;r&&((n.preOrderHooks||(n.preOrderHooks=[])).push(e,r),(n.preOrderCheckHooks||(n.preOrderCheckHooks=[])).push(e,r)),s&&(n.preOrderHooks||(n.preOrderHooks=[])).push(-e,s),a&&((n.preOrderHooks||(n.preOrderHooks=[])).push(e,a),(n.preOrderCheckHooks||(n.preOrderCheckHooks=[])).push(e,a))}(n,a[n],t)}finally{i.injectImpl&&vt(l),cr(o),i.resolving=!1,zn()}}return s}function kr(e,t,n){const r=64&e,s=32&e;let a;return a=128&e?r?s?n[t+7]:n[t+6]:s?n[t+5]:n[t+4]:r?s?n[t+3]:n[t+2]:s?n[t+1]:n[t],!!(a&1<<e)}function Sr(e,t){return!(e&ze.Self||e&ze.Host&&t)}class Ir{constructor(e,t){this._tNode=e,this._lView=t}get(e,t){return yr(this._tNode,this._lView,e,void 0,t)}}function Cr(e){return e.ngDebugContext}function Nr(e){return e.ngOriginalError}function Tr(e,...t){e.error(...t)}class _r{constructor(){this._console=console}handleError(e){const t=this._findOriginalError(e),n=this._findContext(e),r=function(e){return e.ngErrorLogger||Tr}(e);r(this._console,"ERROR",e),t&&r(this._console,"ORIGINAL ERROR",t),n&&r(this._console,"ERROR CONTEXT",n)}_findContext(e){return e?Cr(e)?Cr(e):this._findContext(Nr(e)):null}_findOriginalError(e){let t=Nr(e);for(;t&&Nr(t);)t=Nr(t);return t}}let Er=!0,Ar=!1;function Rr(){return Ar=!0,Er}function $r(e,t){e.__ngContext__=t}function Fr(e){throw new Error("Multiple components match node with tagname "+e.tagName)}function Dr(){throw new Error("Cannot mix multi providers and regular providers")}function Or(e,t,n){let r=e.length;for(;;){const s=e.indexOf(t,n);if(-1===s)return s;if(0===s||e.charCodeAt(s-1)<=32){const n=t.length;if(s+n===r||e.charCodeAt(s+n)<=32)return s}n=s+1}}function Mr(e,t,n){let r=0;for(;r<e.length;){let s=e[r++];if(n&&"class"===s){if(s=e[r],-1!==Or(s.toLowerCase(),t,0))return!0}else if(1===s){for(;r<e.length&&"string"==typeof(s=e[r++]);)if(s.toLowerCase()===t)return!0;return!1}}return!1}function Lr(e){return 0===e.type&&"ng-template"!==e.tagName}function zr(e,t,n){return t===(0!==e.type||n?e.tagName:"ng-template")}function Pr(e,t,n){let r=4;const s=e.attrs||[],a=function(e){for(let t=0;t<e.length;t++)if(Yn(e[t]))return t;return e.length}(s);let i=!1;for(let o=0;o<t.length;o++){const l=t[o];if("number"!=typeof l){if(!i)if(4&r){if(r=2|1&r,""!==l&&!zr(e,l,n)||""===l&&1===t.length){if(Br(r))return!1;i=!0}}else{const u=8&r?l:t[++o];if(8&r&&null!==e.attrs){if(!Mr(e.attrs,u,n)){if(Br(r))return!1;i=!0}continue}const c=Ur(8&r?"class":l,s,Lr(e),n);if(-1===c){if(Br(r))return!1;i=!0;continue}if(""!==u){let e;e=c>a?"":s[c+1].toLowerCase();const t=8&r?e:null;if(t&&-1!==Or(t,u,0)||2&r&&u!==e){if(Br(r))return!1;i=!0}}}}else{if(!i&&!Br(r)&&!Br(l))return!1;if(i&&Br(l))continue;i=!1,r=l|1&r}}return Br(r)||i}function Br(e){return 0==(1&e)}function Ur(e,t,n,r){if(null===t)return-1;let s=0;if(r||!n){let n=!1;for(;s<t.length;){const r=t[s];if(r===e)return s;if(3===r||6===r)n=!0;else{if(1===r||2===r){let e=t[++s];for(;"string"==typeof e;)e=t[++s];continue}if(4===r)break;if(0===r){s+=4;continue}}s+=n?1:2}return-1}return function(e,t){let n=e.indexOf(4);if(n>-1)for(n++;n<e.length;){const r=e[n];if("number"==typeof r)return-1;if(r===t)return n;n++}return-1}(t,e)}function Vr(e,t,n=!1){for(let r=0;r<t.length;r++)if(Pr(e,t[r],n))return!0;return!1}function Wr(e,t){return e?":not("+t.trim()+")":t}function Gr(e){let t=e[0],n=1,r=2,s="",a=!1;for(;n<e.length;){let i=e[n];if("string"==typeof i)if(2&r){const t=e[++n];s+="["+i+(t.length>0?'="'+t+'"':"")+"]"}else 8&r?s+="."+i:4&r&&(s+=" "+i);else""===s||Br(i)||(t+=Wr(a,s),s=""),r=i,a=a||!Br(r);n++}return""!==s&&(t+=Wr(a,s)),t}const Hr={};function jr(e){const t=e[3];return Jt(t)?t[3]:t}function qr(e){return Xr(e[13])}function Kr(e){return Xr(e[4])}function Xr(e){for(;null!==e&&!Jt(e);)e=e[4];return e}function Zr(e){Yr(vn(),wn(),Bn()+e,Nn())}function Yr(e,t,n,r){if(!r)if(3==(3&t[2])){const r=e.preOrderCheckHooks;null!==r&&Gn(t,r,n)}else{const r=e.preOrderHooks;null!==r&&Hn(t,r,0,n)}Un(n)}function Jr(e,t){return e<<17|t<<2}function Qr(e){return e>>17&32767}function es(e){return 2|e}function ts(e){return(131068&e)>>2}function ns(e,t){return-131069&e|t<<2}function rs(e){return 1|e}function ss(e,t){const n=e.contentQueries;if(null!==n)for(let r=0;r<n.length;r+=2){const s=n[r],a=n[r+1];if(-1!==a){const n=e.data[a];$n(s),n.contentQueries(2,t[a],a)}}}function as(e,t,n){return an(t)?t.createElement(e,n):null===n?t.createElement(e):t.createElementNS(n,e)}function is(e,t,n,r,s,a,i,o,l,u){const c=t.blueprint.slice();return c[0]=s,c[2]=140|r,gn(c),c[3]=c[15]=e,c[8]=n,c[10]=i||e&&e[10],c[11]=o||e&&e[11],c[12]=l||e&&e[12]||null,c[9]=u||e&&e[9]||null,c[6]=a,c[16]=2==t.type?e[16]:c,c}function os(e,t,n,r,s,a){const i=n+20,o=e.data[i]||function(e,t,n,r,s,a){const i=kn(),o=In(),l=o?i:i&&i.parent,u=e.data[n]=fs(0,l&&l!==t?l:null,r,n,s,a);return null===e.firstChild&&(e.firstChild=u),i&&(!o||null!=i.child||null===u.parent&&2!==i.type?o||(i.next=u):i.child=u),u}(e,t,i,r,s,a);return Sn(o,!0),o}function ls(e,t,n){Dn(t,t[6]);try{const r=e.viewQuery;null!==r&&Fs(1,r,n);const s=e.template;null!==s&&hs(e,t,s,1,n),e.firstCreatePass&&(e.firstCreatePass=!1),e.staticContentQueries&&ss(e,t),e.staticViewQueries&&Fs(2,e.viewQuery,n);const a=e.components;null!==a&&function(e,t){for(let n=0;n<t.length;n++)_s(e,t[n])}(t,a)}catch(r){throw e.firstCreatePass&&(e.incompleteFirstPass=!0),r}finally{t[2]&=-5,Pn()}}function us(e,t,n,r){const s=t[2];if(256==(256&s))return;Dn(t,t[6]);const a=Nn();try{gn(t),bn.lFrame.bindingIndex=e.bindingStartIndex,null!==n&&hs(e,t,n,2,r);const i=3==(3&s);if(!a)if(i){const n=e.preOrderCheckHooks;null!==n&&Gn(t,n,null)}else{const n=e.preOrderHooks;null!==n&&Hn(t,n,0,null),jn(t,0)}if(function(e){for(let t=qr(e);null!==t;t=Kr(t)){if(!t[2])continue;const e=t[9];for(let t=0;t<e.length;t++){const n=e[t],r=n[3];0==(1024&n[2])&&yn(r,1),n[2]|=1024}}}(t),function(e){for(let t=qr(e);null!==t;t=Kr(t))for(let e=10;e<t.length;e++){const n=t[e],r=n[1];fn(n)&&us(r,n,r.template,n[8])}}(t),null!==e.contentQueries&&ss(e,t),!a)if(i){const n=e.contentCheckHooks;null!==n&&Gn(t,n)}else{const n=e.contentHooks;null!==n&&Hn(t,n,1),jn(t,1)}!function(e,t){try{const n=e.expandoInstructions;if(null!==n){let r=e.expandoStartIndex,s=-1,a=-1;for(let e=0;e<n.length;e++){const i=n[e];"number"==typeof i?i<=0?(a=0-i,Un(a),r+=9+n[++e],s=r):r+=i:(null!==i&&(En(r,s),i(2,t[s])),s++)}}}finally{Un(-1)}}(e,t);const o=e.components;null!==o&&function(e,t){for(let n=0;n<t.length;n++)Ts(e,t[n])}(t,o);const l=e.viewQuery;if(null!==l&&Fs(2,l,r),!a)if(i){const n=e.viewCheckHooks;null!==n&&Gn(t,n)}else{const n=e.viewHooks;null!==n&&Hn(t,n,2),jn(t,2)}!0===e.firstUpdatePass&&(e.firstUpdatePass=!1),a||(t[2]&=-73),1024&t[2]&&(t[2]&=-1025,yn(t[3],-1))}finally{Pn()}}function cs(e,t,n,r){const s=t[10],a=!Nn(),i=pn(t);try{a&&!i&&s.begin&&s.begin(),i&&ls(e,t,r),us(e,t,n,r)}finally{a&&!i&&s.end&&s.end()}}function hs(e,t,n,r,s){const a=Bn();try{Un(-1),2&r&&t.length>20&&Yr(e,t,0,Nn()),n(r,s)}finally{Un(a)}}function ds(e){const t=e.tView;return null===t||t.incompleteFirstPass?e.tView=ps(1,-1,e.template,e.decls,e.vars,e.directiveDefs,e.pipeDefs,e.viewQuery,e.schemas,e.consts):t}function ps(e,t,n,r,s,a,i,o,l,u){const c=20+r,h=c+s,d=function(e,t){const n=[];for(let r=0;r<t;r++)n.push(r<e?null:Hr);return n}(c,h);return d[1]={type:e,id:t,blueprint:d,template:n,queries:null,viewQuery:o,node:null,data:d.slice().fill(null,c),bindingStartIndex:c,expandoStartIndex:h,expandoInstructions:null,firstCreatePass:!0,firstUpdatePass:!0,staticViewQueries:!1,staticContentQueries:!1,preOrderHooks:null,preOrderCheckHooks:null,contentHooks:null,contentCheckHooks:null,viewHooks:null,viewCheckHooks:null,destroyHooks:null,cleanup:null,contentQueries:null,components:null,directiveRegistry:"function"==typeof a?a():a,pipeRegistry:"function"==typeof i?i():i,firstChild:null,schemas:l,consts:u,incompleteFirstPass:!1}}function fs(e,t,n,r,s,a){return{type:n,index:r,injectorIndex:t?t.injectorIndex:-1,directiveStart:-1,directiveEnd:-1,directiveStylingLast:-1,propertyBindings:null,flags:0,providerIndexes:0,tagName:s,attrs:a,mergedAttrs:null,localNames:null,initialInputs:void 0,inputs:null,outputs:null,tViews:null,next:null,projectionNext:null,child:null,parent:t,projection:null,styles:null,stylesWithoutHost:null,residualStyles:void 0,classes:null,classesWithoutHost:null,residualClasses:void 0,classBindings:0,styleBindings:0}}function ms(e,t,n){for(let r in e)if(e.hasOwnProperty(r)){const s=e[r];(n=null===n?{}:n).hasOwnProperty(r)?n[r].push(t,s):n[r]=[t,s]}return n}function gs(e,t){const n=e.expandoInstructions;n.push(t.hostBindings),0!==t.hostVars&&n.push(t.hostVars)}function ys(e,t,n){for(let r=0;r<n;r++)t.push(Hr),e.blueprint.push(Hr),e.data.push(null)}function bs(e,t){null!==e.hostBindings&&e.hostBindings(1,t)}function xs(e,t,n){const r=20-t.index,s=e.data.length-(65535&t.providerIndexes);(e.expandoInstructions||(e.expandoInstructions=[])).push(r,s,n)}function ws(e,t){t.flags|=2,(e.components||(e.components=[])).push(t.index)}function vs(e,t,n){if(n){if(t.exportAs)for(let r=0;r<t.exportAs.length;r++)n[t.exportAs[r]]=e;nn(t)&&(n[""]=e)}}function ks(e,t,n){e.flags|=1,e.directiveStart=t,e.directiveEnd=t+n,e.providerIndexes=t}function Ss(e,t,n){e.data.push(n);const r=n.factory||(n.factory=Xt(n.type)),s=new Xn(r,nn(n),null);e.blueprint.push(s),t.push(s)}function Is(e,t,n){const r=un(t,e),s=ds(n),a=e[10],i=Es(e,is(e,s,null,n.onPush?64:16,r,t,a,a.createRenderer(r,n)));e[t.index]=i}function Cs(e,t,n,r,s,a){const i=a[t];if(null!==i){const e=r.setInput;for(let t=0;t<i.length;){const s=i[t++],a=i[t++],o=i[t++];null!==e?r.setInput(n,o,s,a):n[a]=o}}}function Ns(e,t){let n=null,r=0;for(;r<t.length;){const s=t[r];if(0!==s)if(5!==s){if("number"==typeof s)break;e.hasOwnProperty(s)&&(null===n&&(n=[]),n.push(s,e[s],t[r+1])),r+=2}else r+=2;else r+=4}return n}function Ts(e,t){const n=hn(t,e);if(fn(n)){const e=n[1];80&n[2]?us(e,n,e.template,n[8]):n[5]>0&&function e(t){for(let r=qr(t);null!==r;r=Kr(r))for(let t=10;t<r.length;t++){const n=r[t];if(1024&n[2]){const e=n[1];us(e,n,e.template,n[8])}else n[5]>0&&e(n)}const n=t[1].components;if(null!==n)for(let r=0;r<n.length;r++){const s=hn(n[r],t);fn(s)&&s[5]>0&&e(s)}}(n)}}function _s(e,t){const n=hn(t,e),r=n[1];!function(e,t){for(let n=t.length;n<e.blueprint.length;n++)t.push(e.blueprint[n])}(r,n),ls(r,n,n[8])}function Es(e,t){return e[13]?e[14][4]=t:e[13]=t,e[14]=t,t}function As(e){for(;e;){e[2]|=64;const t=jr(e);if(rn(e)&&!t)return e;e=t}return null}function Rs(e,t,n){const r=t[10];r.begin&&r.begin();try{us(e,t,e.template,n)}catch(s){throw Ls(t,s),s}finally{r.end&&r.end()}}function $s(e){!function(e){for(let t=0;t<e.components.length;t++){const n=e.components[t],r=dn(n),s=r[1];cs(s,r,s.template,n)}}(e[8])}function Fs(e,t,n){$n(0),t(e,n)}const Ds=(()=>Promise.resolve(null))();function Os(e){return e[7]||(e[7]=[])}function Ms(e){return e.cleanup||(e.cleanup=[])}function Ls(e,t){const n=e[9],r=n?n.get(_r,null):null;r&&r.handleError(t)}function zs(e,t,n,r,s){for(let a=0;a<n.length;){const i=n[a++],o=n[a++],l=t[i],u=e.data[i];null!==u.setInput?u.setInput(l,s,r,o):l[o]=s}}function Ps(e,t){const n=t[3];return-1===e.index?Jt(n)?n:null:n}function Bs(e,t){const n=Ps(e,t);return n?Js(t[11],n[7]):null}function Us(e,t,n,r,s){if(null!=r){let a,i=!1;Jt(r)?a=r:Yt(r)&&(i=!0,r=r[0]);const o=ln(r);0===e&&null!==n?null==s?Zs(t,n,o):Xs(t,n,o,s||null):1===e&&null!==n?Xs(t,n,o,s||null):2===e?function(e,t,n){const r=Js(e,t);r&&function(e,t,n,r){an(e)?e.removeChild(t,n,r):t.removeChild(n)}(e,r,t,n)}(t,o,i):3===e&&t.destroyNode(o),null!=a&&function(e,t,n,r,s){const a=n[7];a!==ln(n)&&Us(t,e,r,a,s);for(let i=10;i<n.length;i++){const s=n[i];ra(s[1],s,e,t,r,a)}}(t,e,a,n,s)}}function Vs(e,t,n,r){const s=Bs(e.node,t);s&&ra(e,t,t[11],n?1:2,s,r)}function Ws(e,t){const n=e[9],r=n.indexOf(t);1024&t[2]&&yn(t[3],-1),n.splice(r,1)}function Gs(e,t){if(e.length<=10)return;const n=10+t,r=e[n];if(r){const s=r[17];null!==s&&s!==e&&Ws(s,r),t>0&&(e[n-1][4]=r[4]);const a=Rt(e,10+t);Vs(r[1],r,!1,null);const i=a[19];null!==i&&i.detachView(a[1]),r[3]=null,r[4]=null,r[2]&=-129}return r}function Hs(e,t){if(!(256&t[2])){const n=t[11];an(n)&&n.destroyNode&&ra(e,t,n,3,null,null),function(e){let t=e[13];if(!t)return qs(e[1],e);for(;t;){let n=null;if(Yt(t))n=t[13];else{const e=t[10];e&&(n=e)}if(!n){for(;t&&!t[4]&&t!==e;)Yt(t)&&qs(t[1],t),t=js(t,e);null===t&&(t=e),Yt(t)&&qs(t[1],t),n=t&&t[4]}t=n}}(t)}}function js(e,t){let n;return Yt(e)&&(n=e[6])&&2===n.type?Ps(n,e):e[3]===t?null:e[3]}function qs(e,t){if(!(256&t[2])){t[2]&=-129,t[2]|=256,function(e,t){let n;if(null!=e&&null!=(n=e.destroyHooks))for(let r=0;r<n.length;r+=2){const e=t[n[r]];if(!(e instanceof Xn)){const t=n[r+1];if(Array.isArray(t))for(let n=0;n<t.length;n+=2)t[n+1].call(e[t[n]]);else t.call(e)}}}(e,t),function(e,t){const n=e.cleanup;if(null!==n){const e=t[7];for(let r=0;r<n.length-1;r+=2)if("string"==typeof n[r]){const s=n[r+1],a="function"==typeof s?s(t):ln(t[s]),i=e[n[r+2]],o=n[r+3];"boolean"==typeof o?a.removeEventListener(n[r],i,o):o>=0?e[o]():e[-o].unsubscribe(),r+=2}else n[r].call(e[n[r+1]]);t[7]=null}}(e,t);const n=t[6];n&&3===n.type&&an(t[11])&&t[11].destroy();const r=t[17];if(null!==r&&Jt(t[3])){r!==t[3]&&Ws(r,t);const n=t[19];null!==n&&n.detachView(e)}}}function Ks(e,t,n){let r=t.parent;for(;null!=r&&(4===r.type||5===r.type);)r=(t=r).parent;if(null==r){const e=n[6];return 2===e.type?Bs(e,n):n[0]}if(t&&5===t.type&&4&t.flags)return un(t,n).parentNode;if(2&r.flags){const t=e.data,n=t[t[r.index].directiveStart].encapsulation;if(n!==Lt.ShadowDom&&n!==Lt.Native)return null}return un(r,n)}function Xs(e,t,n,r){an(e)?e.insertBefore(t,n,r):t.insertBefore(n,r,!0)}function Zs(e,t,n){an(e)?e.appendChild(t,n):t.appendChild(n)}function Ys(e,t,n,r){null!==r?Xs(e,t,n,r):Zs(e,t,n)}function Js(e,t){return an(e)?e.parentNode(t):t.parentNode}function Qs(e,t){if(2===e.type){const n=Ps(e,t);return null===n?null:ta(n.indexOf(t,10)-10,n)}return 4===e.type||5===e.type?un(e,t):null}function ea(e,t,n,r){const s=Ks(e,r,t);if(null!=s){const e=t[11],a=Qs(r.parent||t[6],t);if(Array.isArray(n))for(let t=0;t<n.length;t++)Ys(e,s,n[t],a);else Ys(e,s,n,a)}}function ta(e,t){const n=10+e+1;if(n<t.length){const e=t[n],r=e[1].firstChild;if(null!==r)return function e(t,n){if(null!==n){const r=n.type;if(3===r)return un(n,t);if(0===r)return ta(-1,t[n.index]);if(4===r||5===r){const r=n.child;if(null!==r)return e(t,r);{const e=t[n.index];return Jt(e)?ta(-1,e):ln(e)}}{const r=t[16],s=r[6],a=jr(r),i=s.projection[n.projection];return null!=i?e(a,i):e(t,n.next)}}return null}(e,r)}return t[7]}function na(e,t,n,r,s,a,i){for(;null!=n;){const o=r[n.index],l=n.type;i&&0===t&&(o&&$r(ln(o),r),n.flags|=4),64!=(64&n.flags)&&(4===l||5===l?(na(e,t,n.child,r,s,a,!1),Us(t,e,s,o,a)):1===l?sa(e,t,r,n,s,a):Us(t,e,s,o,a)),n=i?n.projectionNext:n.next}}function ra(e,t,n,r,s,a){na(n,r,e.node.child,t,s,a,!1)}function sa(e,t,n,r,s,a){const i=n[16],o=i[6].projection[r.projection];if(Array.isArray(o))for(let l=0;l<o.length;l++)Us(t,e,s,o[l],a);else na(e,t,o,i[3],s,a,!0)}function aa(e,t,n){an(e)?e.setAttribute(t,"style",n):t.style.cssText=n}function ia(e,t,n){an(e)?""===n?e.removeAttribute(t,"class"):e.setAttribute(t,"class",n):t.className=n}class oa{constructor(e,t){this._lView=e,this._cdRefInjectingView=t,this._appRef=null,this._viewContainerRef=null}get rootNodes(){const e=this._lView;return null==e[0]?function e(t,n,r,s,a=!1){for(;null!==r;){const i=n[r.index];if(null!==i&&s.push(ln(i)),Jt(i))for(let t=10;t<i.length;t++){const n=i[t],r=n[1].firstChild;null!==r&&e(n[1],n,r,s)}const o=r.type;if(4===o||5===o)e(t,n,r.child,s);else if(1===o){const t=n[16],a=t[6].projection[r.projection];if(Array.isArray(a))s.push(...a);else{const n=jr(t);e(n[1],n,a,s,!0)}}r=a?r.projectionNext:r.next}return s}(e[1],e,e[6].child,[]):[]}get context(){return this._lView[8]}get destroyed(){return 256==(256&this._lView[2])}destroy(){if(this._appRef)this._appRef.detachView(this);else if(this._viewContainerRef){const e=this._viewContainerRef.indexOf(this);e>-1&&this._viewContainerRef.detach(e),this._viewContainerRef=null}Hs(this._lView[1],this._lView)}onDestroy(e){var t,n,r;t=this._lView[1],r=e,Os(n=this._lView).push(r),t.firstCreatePass&&Ms(t).push(n[7].length-1,null)}markForCheck(){As(this._cdRefInjectingView||this._lView)}detach(){this._lView[2]&=-129}reattach(){this._lView[2]|=128}detectChanges(){Rs(this._lView[1],this._lView,this.context)}checkNoChanges(){!function(e,t,n){Tn(!0);try{Rs(e,t,n)}finally{Tn(!1)}}(this._lView[1],this._lView,this.context)}attachToViewContainerRef(e){if(this._appRef)throw new Error("This view is already attached directly to the ApplicationRef!");this._viewContainerRef=e}detachFromAppRef(){var e;this._appRef=null,ra(this._lView[1],e=this._lView,e[11],2,null,null)}attachToAppRef(e){if(this._viewContainerRef)throw new Error("This view is already attached to a ViewContainer!");this._appRef=e}}class la extends oa{constructor(e){super(e),this._view=e}detectChanges(){$s(this._view)}checkNoChanges(){!function(e){Tn(!0);try{$s(e)}finally{Tn(!1)}}(this._view)}get context(){return null}}let ua,ca,ha;function da(e,t,n){return ua||(ua=class extends e{}),new ua(un(t,n))}function pa(e,t,n,r){return ca||(ca=class extends e{constructor(e,t,n){super(),this._declarationView=e,this._declarationTContainer=t,this.elementRef=n}createEmbeddedView(e){const t=this._declarationTContainer.tViews,n=is(this._declarationView,t,e,16,null,t.node);n[17]=this._declarationView[this._declarationTContainer.index];const r=this._declarationView[19];return null!==r&&(n[19]=r.createEmbeddedView(t)),ls(t,n,e),new oa(n)}}),0===n.type?new ca(r,n,da(t,n,r)):null}function fa(e,t,n,r){let s;ha||(ha=class extends e{constructor(e,t,n){super(),this._lContainer=e,this._hostTNode=t,this._hostView=n}get element(){return da(t,this._hostTNode,this._hostView)}get injector(){return new Ir(this._hostTNode,this._hostView)}get parentInjector(){const e=mr(this._hostTNode,this._hostView),t=sr(e,this._hostView),n=function(e,t,n){if(n.parent&&-1!==n.parent.injectorIndex){const e=n.parent.injectorIndex;let t=n.parent;for(;null!=t.parent&&e==t.parent.injectorIndex;)t=t.parent;return t}let r=rr(e),s=t,a=t[6];for(;r>1;)s=s[15],a=s[6],r--;return a}(e,this._hostView,this._hostTNode);return tr(e)&&null!=n?new Ir(n,t):new Ir(null,this._hostView)}clear(){for(;this.length>0;)this.remove(this.length-1)}get(e){return null!==this._lContainer[8]&&this._lContainer[8][e]||null}get length(){return this._lContainer.length-10}createEmbeddedView(e,t,n){const r=e.createEmbeddedView(t||{});return this.insert(r,n),r}createComponent(e,t,n,r,s){const a=n||this.parentInjector;if(!s&&null==e.ngModule&&a){const e=a.get(Tt,null);e&&(s=e)}const i=e.create(a,r,void 0,s);return this.insert(i.hostView,t),i}insert(e,t){const n=e._lView,r=n[1];if(e.destroyed)throw new Error("Cannot insert a destroyed View in a ViewContainer!");if(this.allocateContainerIfNeeded(),Jt(n[3])){const t=this.indexOf(e);if(-1!==t)this.detach(t);else{const t=n[3],r=new ha(t,t[6],t[3]);r.detach(r.indexOf(e))}}const s=this._adjustIndex(t);return function(e,t,n,r){const s=10+r,a=n.length;r>0&&(n[s-1][4]=t),r<a-10?(t[4]=n[s],At(n,10+r,t)):(n.push(t),t[4]=null),t[3]=n;const i=t[17];null!==i&&n!==i&&function(e,t){const n=e[9];t[16]!==t[3][3][16]&&(e[2]=!0),null===n?e[9]=[t]:n.push(t)}(i,t);const o=t[19];null!==o&&o.insertView(e),t[2]|=128}(r,n,this._lContainer,s),Vs(r,n,!0,ta(s,this._lContainer)),e.attachToViewContainerRef(this),At(this._lContainer[8],s,e),e}move(e,t){if(e.destroyed)throw new Error("Cannot move a destroyed View in a ViewContainer!");return this.insert(e,t)}indexOf(e){const t=this._lContainer[8];return null!==t?t.indexOf(e):-1}remove(e){this.allocateContainerIfNeeded();const t=this._adjustIndex(e,-1);!function(e,t){const n=Gs(e,t);n&&Hs(n[1],n)}(this._lContainer,t),Rt(this._lContainer[8],t)}detach(e){this.allocateContainerIfNeeded();const t=this._adjustIndex(e,-1),n=Gs(this._lContainer,t);return n&&null!=Rt(this._lContainer[8],t)?new oa(n):null}_adjustIndex(e,t=0){return null==e?this.length+t:e}allocateContainerIfNeeded(){null===this._lContainer[8]&&(this._lContainer[8]=[])}});const a=r[n.index];if(Jt(a))s=a;else{let e;if(4===n.type)e=ln(a);else if(e=r[11].createComment(""),rn(r)){const t=r[11],s=un(n,r);Xs(t,Js(t,s),e,function(e,t){return an(e)?e.nextSibling(t):t.nextSibling}(t,s))}else ea(r[1],r,e,n);r[n.index]=s=new Array(a,!0,!1,r,null,0,n,e,null,null),Es(r,s)}return new ha(s,n,r)}let ma=(()=>{class e{}return e.__NG_ELEMENT_ID__=()=>ga(),e})();const ga=function(e=!1){return function(e,t,n){if(!n&&en(e)){const n=hn(e.index,t);return new oa(n,n)}return 3===e.type||0===e.type||4===e.type||5===e.type?new oa(t[16],t):null}(kn(),wn(),e)},ya=new pt("Set Injector scope."),ba={},xa={},wa=[];let va=void 0;function ka(){return void 0===va&&(va=new Nt),va}function Sa(e,t=null,n=null,r){return new Ia(e,n,t||ka(),r)}class Ia{constructor(e,t,n,r=null){this.parent=n,this.records=new Map,this.injectorDefTypes=new Set,this.onDestroy=new Set,this._destroyed=!1;const s=[];t&&Et(t,n=>this.processProvider(n,e,t)),Et([e],e=>this.processInjectorType(e,[],s)),this.records.set(ft,Na(void 0,this));const a=this.records.get(ya);this.scope=null!=a?a.value:null,this.source=r||("object"==typeof e?null:Ze(e))}get destroyed(){return this._destroyed}destroy(){this.assertNotDestroyed(),this._destroyed=!0;try{this.onDestroy.forEach(e=>e.ngOnDestroy())}finally{this.records.clear(),this.onDestroy.clear(),this.injectorDefTypes.clear()}}get(e,t=mt,n=ze.Default){this.assertNotDestroyed();const r=wt(this);try{if(!(n&ze.SkipSelf)){let t=this.records.get(e);if(void 0===t){const n=("function"==typeof(s=e)||"object"==typeof s&&s instanceof pt)&&Ve(e);t=n&&this.injectableDefInScope(n)?Na(Ca(e),ba):null,this.records.set(e,t)}if(null!=t)return this.hydrate(e,t)}return(n&ze.Self?ka():this.parent).get(e,t=n&ze.Optional&&t===mt?null:t)}catch(a){if("NullInjectorError"===a.name){if((a.ngTempTokenPath=a.ngTempTokenPath||[]).unshift(Ze(e)),r)throw a;return function(e,t,n,r){const s=e.ngTempTokenPath;throw t.__source&&s.unshift(t.__source),e.message=function(e,t,n,r=null){e=e&&"\n"===e.charAt(0)&&"\u0275"==e.charAt(1)?e.substr(2):e;let s=Ze(t);if(Array.isArray(t))s=t.map(Ze).join(" -> ");else if("object"==typeof t){let e=[];for(let n in t)if(t.hasOwnProperty(n)){let r=t[n];e.push(n+":"+("string"==typeof r?JSON.stringify(r):Ze(r)))}s=`{${e.join(", ")}}`}return`${n}${r?"("+r+")":""}[${s}]: ${e.replace(gt,"\n  ")}`}("\n"+e.message,s,n,r),e.ngTokenPath=s,e.ngTempTokenPath=null,e}(a,e,"R3InjectorError",this.source)}throw a}finally{wt(r)}var s}_resolveInjectorDefTypes(){this.injectorDefTypes.forEach(e=>this.get(e))}toString(){const e=[];return this.records.forEach((t,n)=>e.push(Ze(n))),`R3Injector[${e.join(", ")}]`}assertNotDestroyed(){if(this._destroyed)throw new Error("Injector has already been destroyed.")}processInjectorType(e,t,n){if(!(e=et(e)))return!1;let r=Ge(e);const s=null==r&&e.ngModule||void 0,a=void 0===s?e:s,i=-1!==n.indexOf(a);if(void 0!==s&&(r=Ge(s)),null==r)return!1;if(null!=r.imports&&!i){let e;n.push(a);try{Et(r.imports,r=>{this.processInjectorType(r,t,n)&&(void 0===e&&(e=[]),e.push(r))})}finally{}if(void 0!==e)for(let t=0;t<e.length;t++){const{ngModule:n,providers:r}=e[t];Et(r,e=>this.processProvider(e,n,r||wa))}}this.injectorDefTypes.add(a),this.records.set(a,Na(r.factory,ba));const o=r.providers;if(null!=o&&!i){const t=e;Et(o,e=>this.processProvider(e,t,o))}return void 0!==s&&void 0!==e.providers}processProvider(e,t,n){let r=_a(e=et(e))?e:et(e&&e.provide);const s=function(e,t,n){return Ta(e)?Na(void 0,e.useValue):Na(function(e,t,n){let r=void 0;if(_a(e)){const t=et(e);return Xt(t)||Ca(t)}if(Ta(e))r=()=>et(e.useValue);else if((s=e)&&s.useFactory)r=()=>e.useFactory(...Ct(e.deps||[]));else if(function(e){return!(!e||!e.useExisting)}(e))r=()=>St(et(e.useExisting));else{const s=et(e&&(e.useClass||e.provide));if(s||function(e,t,n){let r="";throw e&&t&&(r=` - only instances of Provider and Type are allowed, got: [${t.map(e=>e==n?"?"+n+"?":"...").join(", ")}]`),new Error(`Invalid provider for the NgModule '${Ze(e)}'`+r)}(t,n,e),!function(e){return!!e.deps}(e))return Xt(s)||Ca(s);r=()=>new s(...Ct(e.deps))}var s;return r}(e,t,n),ba)}(e,t,n);if(_a(e)||!0!==e.multi){const e=this.records.get(r);e&&void 0!==e.multi&&Dr()}else{let t=this.records.get(r);t?void 0===t.multi&&Dr():(t=Na(void 0,ba,!0),t.factory=()=>Ct(t.multi),this.records.set(r,t)),r=e,t.multi.push(e)}this.records.set(r,s)}hydrate(e,t){var n;return t.value===xa?function(e){throw new Error("Cannot instantiate cyclic dependency! "+e)}(Ze(e)):t.value===ba&&(t.value=xa,t.value=t.factory()),"object"==typeof t.value&&t.value&&null!==(n=t.value)&&"object"==typeof n&&"function"==typeof n.ngOnDestroy&&this.onDestroy.add(t.value),t.value}injectableDefInScope(e){return!!e.providedIn&&("string"==typeof e.providedIn?"any"===e.providedIn||e.providedIn===this.scope:this.injectorDefTypes.has(e.providedIn))}}function Ca(e){const t=Ve(e),n=null!==t?t.factory:Xt(e);if(null!==n)return n;const r=Ge(e);if(null!==r)return r.factory;if(e instanceof pt)throw new Error(`Token ${Ze(e)} is missing a \u0275prov definition.`);if(e instanceof Function)return function(e){const t=e.length;if(t>0){const n=$t(t,"?");throw new Error(`Can't resolve all parameters for ${Ze(e)}: (${n.join(", ")}).`)}const n=function(e){const t=e&&(e[He]||e[Ke]||e[qe]&&e[qe]());if(t){const n=function(e){if(e.hasOwnProperty("name"))return e.name;const t=(""+e).match(/^function\s*([^\s(]+)/);return null===t?"":t[1]}(e);return console.warn(`DEPRECATED: DI is instantiating a token "${n}" that inherits its @Injectable decorator but does not provide one itself.\nThis will become an error in v10. Please add @Injectable() to the "${n}" class.`),t}return null}(e);return null!==n?()=>n.factory(e):()=>new e}(e);throw new Error("unreachable")}function Na(e,t,n=!1){return{factory:e,value:t,multi:n?[]:void 0}}function Ta(e){return null!==e&&"object"==typeof e&&yt in e}function _a(e){return"function"==typeof e}const Ea=function(e,t,n){return function(e,t=null,n=null,r){const s=Sa(e,t,n,r);return s._resolveInjectorDefTypes(),s}({name:n},t,e,n)};let Aa=(()=>{class e{static create(e,t){return Array.isArray(e)?Ea(e,t,""):Ea(e.providers,e.parent,e.name||"")}}return e.THROW_IF_NOT_FOUND=mt,e.NULL=new Nt,e.\u0275prov=Be({token:e,providedIn:"any",factory:()=>St(ft)}),e.__NG_ELEMENT_ID__=-1,e})();const Ra=new pt("AnalyzeForEntryComponents");let $a=new Map;const Fa=new Set;function Da(e){return"string"==typeof e?e:e.text()}function Oa(e,t,n){let r=n?e.styles:null,s=n?e.classes:null,a=0;if(null!==t)for(let i=0;i<t.length;i++){const e=t[i];"number"==typeof e?a=e:1==a?s=Ye(s,e):2==a&&(r=Ye(r,e+": "+t[++i]+";"))}n?e.styles=r:e.stylesWithoutHost=r,n?e.classes=s:e.classesWithoutHost=s}let Ma=null;function La(){if(!Ma){const e=at.Symbol;if(e&&e.iterator)Ma=e.iterator;else{const e=Object.getOwnPropertyNames(Map.prototype);for(let t=0;t<e.length;++t){const n=e[t];"entries"!==n&&"size"!==n&&Map.prototype[n]===Map.prototype.entries&&(Ma=n)}}}return Ma}function za(e,t){return e===t||"number"==typeof e&&"number"==typeof t&&isNaN(e)&&isNaN(t)}function Pa(e){return!!Ba(e)&&(Array.isArray(e)||!(e instanceof Map)&&La()in e)}function Ba(e){return null!==e&&("function"==typeof e||"object"==typeof e)}function Ua(e,t,n){return!Object.is(e[t],n)&&(e[t]=n,!0)}function Va(e,t,n,r){const s=wn();return Ua(s,_n(),t)&&(vn(),function(e,t,n,r,s,a){const i=un(e,t),o=t[11];if(null==r)an(o)?o.removeAttribute(i,n,a):i.removeAttribute(n);else{const t=null==s?ar(r):s(r,e.tagName||"",n);an(o)?o.setAttribute(i,n,t,a):a?i.setAttributeNS(a,n,t):i.setAttribute(n,t)}}(Vn(),s,e,t,n,r)),Va}function Wa(e,t=ze.Default){const n=wn();return null==n?St(e,t):yr(kn(),n,et(e),t)}function Ga(){throw new Error("invalid")}function Ha(e,t,n){const r=wn();return Ua(r,_n(),t)&&function(e,t,n,r,s,a,i,o){const l=un(t,n);let u,c=t.inputs;var h;null!=c&&(u=c[r])?(zs(e,n,u,r,s),en(t)&&function(e,t){const n=hn(t,e);16&n[2]||(n[2]|=64)}(n,t.index)):3===t.type&&(r="class"===(h=r)?"className":"for"===h?"htmlFor":"formaction"===h?"formAction":"innerHtml"===h?"innerHTML":"readonly"===h?"readOnly":"tabindex"===h?"tabIndex":h,s=null!=i?i(s,t.tagName||"",r):s,an(a)?a.setProperty(l,r,s):Jn(r)||(l.setProperty?l.setProperty(r,s):l[r]=s))}(vn(),Vn(),r,e,t,r[11],n),Ha}function ja(e,t,n,r,s){const a=s?"class":"style";zs(e,n,t.inputs[a],a,r)}function qa(e,t,n,r){const s=wn(),a=vn(),i=20+e,o=s[11],l=s[i]=as(t,o,bn.lFrame.currentNamespace),u=a.firstCreatePass?function(e,t,n,r,s,a,i){const o=t.consts,l=mn(o,a),u=os(t,n[6],e,3,s,l);return function(e,t,n,r){let s=!1;if(xn()){const a=function(e,t,n){const r=e.directiveRegistry;let s=null;if(r)for(let a=0;a<r.length;a++){const i=r[a];Vr(n,i.selectors,!1)&&(s||(s=[]),gr(dr(n,t),e,i.type),nn(i)?(2&n.flags&&Fr(n),ws(e,n),s.unshift(i)):s.push(i))}return s}(e,t,n),i=null===r?null:{"":-1};if(null!==a){let r=0;s=!0,ks(n,e.data.length,a.length);for(let e=0;e<a.length;e++){const t=a[e];t.providersResolver&&t.providersResolver(t)}xs(e,n,a.length);let o=!1,l=!1;for(let s=0;s<a.length;s++){const u=a[s];n.mergedAttrs=Qn(n.mergedAttrs,u.hostAttrs),Ss(e,t,u),vs(e.data.length-1,u,i),null!==u.contentQueries&&(n.flags|=8),null===u.hostBindings&&null===u.hostAttrs&&0===u.hostVars||(n.flags|=128),!o&&(u.onChanges||u.onInit||u.doCheck)&&((e.preOrderHooks||(e.preOrderHooks=[])).push(n.index-20),o=!0),l||!u.onChanges&&!u.doCheck||((e.preOrderCheckHooks||(e.preOrderCheckHooks=[])).push(n.index-20),l=!0),gs(e,u),r+=u.hostVars}!function(e,t){const n=t.directiveEnd,r=e.data,s=t.attrs,a=[];let i=null,o=null;for(let l=t.directiveStart;l<n;l++){const e=r[l],n=e.inputs,u=null===s||Lr(t)?null:Ns(n,s);a.push(u),i=ms(n,l,i),o=ms(e.outputs,l,o)}null!==i&&(i.hasOwnProperty("class")&&(t.flags|=16),i.hasOwnProperty("style")&&(t.flags|=32)),t.initialInputs=a,t.inputs=i,t.outputs=o}(e,n),ys(e,t,r)}i&&function(e,t,n){if(t){const r=e.localNames=[];for(let e=0;e<t.length;e+=2){const s=n[t[e+1]];if(null==s)throw new Error(`Export of name '${t[e+1]}' not found!`);r.push(t[e],s)}}}(n,r,i)}n.mergedAttrs=Qn(n.mergedAttrs,n.attrs)}(t,n,u,mn(o,i)),null!==u.attrs&&Oa(u,u.attrs,!1),null!==u.mergedAttrs&&Oa(u,u.mergedAttrs,!0),null!==t.queries&&t.queries.elementStart(t,u),u}(e,a,s,0,t,n,r):a.data[i];Sn(u,!0);const c=u.mergedAttrs;null!==c&&Zn(o,l,c);const h=u.classes;null!==h&&ia(o,l,h);const d=u.styles;null!==d&&aa(o,l,d),ea(a,s,l,u),0===bn.lFrame.elementDepthCount&&$r(l,s),bn.lFrame.elementDepthCount++,tn(u)&&(function(e,t,n){xn()&&(function(e,t,n,r){const s=n.directiveStart,a=n.directiveEnd;e.firstCreatePass||dr(n,t),$r(r,t);const i=n.initialInputs;for(let o=s;o<a;o++){const r=e.data[o],a=nn(r);a&&Is(t,n,r);const l=vr(t,e,o,n);$r(l,t),null!==i&&Cs(0,o-s,l,r,0,i),a&&(hn(n.index,t)[8]=l)}}(e,t,n,un(n,t)),128==(128&n.flags)&&function(e,t,n){const r=n.directiveStart,s=n.directiveEnd,a=e.expandoInstructions,i=e.firstCreatePass,o=n.index-20,l=bn.lFrame.currentDirectiveIndex;try{Un(o);for(let n=r;n<s;n++){const r=e.data[n],s=t[n];An(n),null!==r.hostBindings||0!==r.hostVars||null!==r.hostAttrs?bs(r,s):i&&a.push(null)}}finally{Un(-1),An(l)}}(e,t,n))}(a,s,u),function(e,t,n){if(Qt(t)){const r=t.directiveEnd;for(let s=t.directiveStart;s<r;s++){const t=e.data[s];t.contentQueries&&t.contentQueries(1,n[s],s)}}}(a,u,s)),null!==r&&function(e,t,n=un){const r=t.localNames;if(null!==r){let s=t.index+1;for(let a=0;a<r.length;a+=2){const i=r[a+1],o=-1===i?n(t,e):e[i];e[s++]=o}}}(s,u)}function Ka(){let e=kn();In()?Cn():(e=e.parent,Sn(e,!1));const t=e;bn.lFrame.elementDepthCount--;const n=vn();n.firstCreatePass&&(Wn(n,e),Qt(e)&&n.queries.elementEnd(e)),null!=t.classesWithoutHost&&function(e){return 0!=(16&e.flags)}(t)&&ja(n,t,wn(),t.classesWithoutHost,!0),null!=t.stylesWithoutHost&&function(e){return 0!=(32&e.flags)}(t)&&ja(n,t,wn(),t.stylesWithoutHost,!1)}function Xa(e,t,n,r){qa(e,t,n,r),Ka()}function Za(e){return!!e&&"function"==typeof e.then}function Ya(e,t,n=!1,r){const s=wn(),a=vn(),i=kn();return function(e,t,n,r,s,a,i=!1,o){const l=tn(r),u=e.firstCreatePass&&(e.cleanup||(e.cleanup=[])),c=Os(t);let h=!0;if(3===r.type){const d=un(r,t),p=o?o(d):zt,f=p.target||d,m=c.length,g=o?e=>o(ln(e[r.index])).target:r.index;if(an(n)){let i=null;if(!o&&l&&(i=function(e,t,n,r){const s=e.cleanup;if(null!=s)for(let a=0;a<s.length-1;a+=2){const e=s[a];if(e===n&&s[a+1]===r){const e=t[7],n=s[a+2];return e.length>n?e[n]:null}"string"==typeof e&&(a+=2)}return null}(e,t,s,r.index)),null!==i)(i.__ngLastListenerFn__||i).__ngNextListenerFn__=a,i.__ngLastListenerFn__=a,h=!1;else{a=Qa(r,t,a,!1);const e=n.listen(p.name||f,s,a);c.push(a,e),u&&u.push(s,g,m,m+1)}}else a=Qa(r,t,a,!0),f.addEventListener(s,a,i),c.push(a),u&&u.push(s,g,m,i)}const d=r.outputs;let p;if(h&&null!==d&&(p=d[s])){const e=p.length;if(e)for(let n=0;n<e;n+=2){const e=t[p[n]][p[n+1]].subscribe(a),i=c.length;c.push(a,e),u&&u.push(s,r.index,i,-(i+1))}}}(a,s,s[11],i,e,t,n,r),Ya}function Ja(e,t,n){try{return!1!==t(n)}catch(r){return Ls(e,r),!1}}function Qa(e,t,n,r){return function s(a){if(a===Function)return n;const i=2&e.flags?hn(e.index,t):t;0==(32&t[2])&&As(i);let o=Ja(t,n,a),l=s.__ngNextListenerFn__;for(;l;)o=Ja(t,l,a)&&o,l=l.__ngNextListenerFn__;return r&&!1===o&&(a.preventDefault(),a.returnValue=!1),o}}const ei=[];function ti(e,t,n,r,s){const a=e[n+1],i=null===t;let o=r?Qr(a):ts(a),l=!1;for(;0!==o&&(!1===l||i);){const n=e[o+1];ni(e[o],t)&&(l=!0,e[o+1]=r?rs(n):es(n)),o=r?Qr(n):ts(n)}l&&(e[n+1]=r?es(a):rs(a))}function ni(e,t){return null===e||null==t||(Array.isArray(e)?e[1]:e)===t||!(!Array.isArray(e)||"string"!=typeof t)&&Ot(e,t)>=0}const ri={textEnd:0,key:0,keyEnd:0,value:0,valueEnd:0};function si(e){return e.substring(ri.key,ri.keyEnd)}function ai(e,t){const n=ri.textEnd;return n===t?-1:(t=ri.keyEnd=function(e,t,n){for(;t<n&&e.charCodeAt(t)>32;)t++;return t}(e,ri.key=t,n),ii(e,t,n))}function ii(e,t,n){for(;t<n&&e.charCodeAt(t)<=32;)t++;return t}function oi(e){!function(e,t,n,r){const s=vn(),a=function(e){const t=bn.lFrame,n=t.bindingIndex;return t.bindingIndex=t.bindingIndex+2,n}();s.firstUpdatePass&&function(e,t,n,r){const s=e.data;if(null===s[n+1]){const r=s[Bn()+20],a=ui(e,n);mi(r,!0)&&null===t&&!a&&(t=!1),t=function(e,t,n,r){const s=function(e){const t=bn.lFrame.currentDirectiveIndex;return-1===t?null:e[t]}(e);let a=t.residualClasses;if(null===s)0===t.classBindings&&(n=hi(n=ci(null,e,t,n,!0),t.attrs,!0),a=null);else{const r=t.directiveStylingLast;if(-1===r||e[r]!==s)if(n=ci(s,e,t,n,!0),null===a){let n=function(e,t,n){const r=t.classBindings;if(0!==ts(r))return e[Qr(r)]}(e,t);void 0!==n&&Array.isArray(n)&&(n=ci(null,e,t,n[1],!0),n=hi(n,t.attrs,!0),function(e,t,n,r){e[Qr(t.classBindings)]=r}(e,t,0,n))}else a=function(e,t,n){let r=void 0;const s=t.directiveEnd;for(let a=1+t.directiveStylingLast;a<s;a++)r=hi(r,e[a].hostAttrs,!0);return hi(r,t.attrs,!0)}(e,t)}return void 0!==a&&(t.residualClasses=a),n}(s,r,t),function(e,t,n,r,s,a){let i=t.classBindings,o=Qr(i),l=ts(i);e[r]=n;let u,c=!1;if(Array.isArray(n)){const e=n;u=e[1],(null===u||Ot(e,u)>0)&&(c=!0)}else u=n;if(s)if(0!==l){const t=Qr(e[o+1]);e[r+1]=Jr(t,o),0!==t&&(e[t+1]=ns(e[t+1],r)),e[o+1]=131071&e[o+1]|r<<17}else e[r+1]=Jr(o,0),0!==o&&(e[o+1]=ns(e[o+1],r)),o=r;else e[r+1]=Jr(l,0),0===o?o=r:e[l+1]=ns(e[l+1],r),l=r;c&&(e[r+1]=es(e[r+1])),ti(e,u,r,!0),ti(e,u,r,!1),function(e,t,n,r,s){const a=e.residualClasses;null!=a&&"string"==typeof t&&Ot(a,t)>=0&&(n[r+1]=rs(n[r+1]))}(t,u,e,r),i=Jr(o,l),t.classBindings=i}(s,r,t,n,a)}}(s,null,a);const i=wn();if(n!==Hr&&Ua(i,a,n)){const r=s.data[Bn()+20];if(mi(r,!0)&&!ui(s,a)){let e=r.classesWithoutHost;null!==e&&(n=Ye(e,n||"")),ja(s,r,i,n,!0)}else!function(e,t,n,r,s,a,i,o){s===Hr&&(s=ei);let l=0,u=0,c=0<s.length?s[0]:null,h=0<a.length?a[0]:null;for(;null!==c||null!==h;){const i=l<s.length?s[l+1]:void 0,d=u<a.length?a[u+1]:void 0;let p=null,f=void 0;c===h?(l+=2,u+=2,i!==d&&(p=h,f=d)):null===h||null!==c&&c<h?(l+=2,p=c):(u+=2,p=h,f=d),null!==p&&di(e,t,n,r,p,f,!0,o),c=l<s.length?s[l]:null,h=u<a.length?a[u]:null}}(s,r,i,i[11],i[a+1],i[a+1]=function(e,t,n){if(null==n||""===n)return ei;const r=[],s=function(e){return e instanceof class{constructor(e){this.changingThisBreaksApplicationSecurity=e}toString(){return"SafeValue must use [property]=binding: "+this.changingThisBreaksApplicationSecurity+" (see http://g.co/ng/security#xss)"}}?e.changingThisBreaksApplicationSecurity:e}(n);if(Array.isArray(s))for(let a=0;a<s.length;a++)e(r,s[a],!0);else if("object"==typeof s)for(const a in s)s.hasOwnProperty(a)&&e(r,a,s[a]);else"string"==typeof s&&t(r,s);return r}(e,t,n),0,a)}}(Ft,li,e)}function li(e,t){for(let n=function(e){return function(e){ri.key=0,ri.keyEnd=0,ri.value=0,ri.valueEnd=0,ri.textEnd=e.length}(e),ai(e,ii(e,0,ri.textEnd))}(t);n>=0;n=ai(t,n))Ft(e,si(t),!0)}function ui(e,t){return t>=e.expandoStartIndex}function ci(e,t,n,r,s){let a=null;const i=n.directiveEnd;let o=n.directiveStylingLast;for(-1===o?o=n.directiveStart:o++;o<i&&(a=t[o],r=hi(r,a.hostAttrs,s),a!==e);)o++;return null!==e&&(n.directiveStylingLast=o),r}function hi(e,t,n){const r=n?1:2;let s=-1;if(null!==t)for(let a=0;a<t.length;a++){const i=t[a];"number"==typeof i?s=i:s===r&&(Array.isArray(e)||(e=void 0===e?[]:["",e]),Ft(e,i,!!n||t[++a]))}return void 0===e?null:e}function di(e,t,n,r,s,a,i,o){if(3!==t.type)return;const l=e.data,u=l[o+1];fi(1==(1&u)?pi(l,t,n,s,ts(u),i):void 0)||(fi(a)||function(e){return 2==(2&e)}(u)&&(a=pi(l,null,n,s,o,i)),function(e,t,n,r,s){const a=an(e);if(t)s?a?e.addClass(n,r):n.classList.add(r):a?e.removeClass(n,r):n.classList.remove(r);else{const t=-1==r.indexOf("-")?void 0:2;null==s?a?e.removeStyle(n,r,t):n.style.removeProperty(r):a?e.setStyle(n,r,s,t):n.style.setProperty(r,s)}}(r,i,function(e,t){return ln(t[e+20])}(Bn(),n),s,a))}function pi(e,t,n,r,s,a){const i=null===t;let o=void 0;for(;s>0;){const t=e[s],a=Array.isArray(t),l=a?t[1]:t,u=null===l;let c=n[s+1];c===Hr&&(c=u?ei:void 0);let h=u?Dt(c,r):l===r?c:void 0;if(a&&!fi(h)&&(h=Dt(t,r)),fi(h)&&(o=h,i))return o;const d=e[s+1];s=i?Qr(d):ts(d)}if(null!==t){let e=a?t.residualClasses:t.residualStyles;null!=e&&(o=Dt(e,r))}return o}function fi(e){return void 0!==e}function mi(e,t){return 0!=(e.flags&(t?16:32))}function gi(e,t=""){const n=wn(),r=vn(),s=e+20,a=r.firstCreatePass?os(r,n[6],e,3,null,null):r.data[s],i=n[s]=function(e,t){return an(t)?t.createText(e):t.createTextNode(e)}(t,n[11]);ea(r,n,i,a),Sn(a,!1)}function yi(e,t){const n=dn(e)[1],r=n.data.length-1;Wn(n,{directiveStart:r,directiveEnd:r+1})}class bi{}class xi{resolveComponentFactory(e){throw function(e){const t=Error(`No component factory found for ${Ze(e)}. Did you add it to @NgModule.entryComponents?`);return t.ngComponent=e,t}(e)}}let wi=(()=>{class e{}return e.NULL=new xi,e})(),vi=(()=>{class e{constructor(e){this.nativeElement=e}}return e.__NG_ELEMENT_ID__=()=>ki(e),e})();const ki=function(e){return da(e,kn(),wn())};class Si{}const Ii=function(){var e={Important:1,DashCase:2};return e[e.Important]="Important",e[e.DashCase]="DashCase",e}();let Ci=(()=>{class e{}return e.__NG_ELEMENT_ID__=()=>Ni(),e})();const Ni=function(){const e=wn(),t=hn(kn().index,e);return function(e){const t=e[11];if(an(t))return t;throw new Error("Cannot inject Renderer2 when the application uses Renderer3!")}(Yt(t)?t:e)};let Ti=(()=>{class e{}return e.\u0275prov=Be({token:e,providedIn:"root",factory:()=>null}),e})();class _i{constructor(e){this.full=e,this.major=e.split(".")[0],this.minor=e.split(".")[1],this.patch=e.split(".").slice(2).join(".")}}const Ei=new _i("9.1.13");class Ai{constructor(){}supports(e){return Pa(e)}create(e){return new $i(e)}}const Ri=(e,t)=>t;class $i{constructor(e){this.length=0,this._linkedRecords=null,this._unlinkedRecords=null,this._previousItHead=null,this._itHead=null,this._itTail=null,this._additionsHead=null,this._additionsTail=null,this._movesHead=null,this._movesTail=null,this._removalsHead=null,this._removalsTail=null,this._identityChangesHead=null,this._identityChangesTail=null,this._trackByFn=e||Ri}forEachItem(e){let t;for(t=this._itHead;null!==t;t=t._next)e(t)}forEachOperation(e){let t=this._itHead,n=this._removalsHead,r=0,s=null;for(;t||n;){const a=!n||t&&t.currentIndex<Mi(n,r,s)?t:n,i=Mi(a,r,s),o=a.currentIndex;if(a===n)r--,n=n._nextRemoved;else if(t=t._next,null==a.previousIndex)r++;else{s||(s=[]);const e=i-r,t=o-r;if(e!=t){for(let n=0;n<e;n++){const r=n<s.length?s[n]:s[n]=0,a=r+n;t<=a&&a<e&&(s[n]=r+1)}s[a.previousIndex]=t-e}}i!==o&&e(a,i,o)}}forEachPreviousItem(e){let t;for(t=this._previousItHead;null!==t;t=t._nextPrevious)e(t)}forEachAddedItem(e){let t;for(t=this._additionsHead;null!==t;t=t._nextAdded)e(t)}forEachMovedItem(e){let t;for(t=this._movesHead;null!==t;t=t._nextMoved)e(t)}forEachRemovedItem(e){let t;for(t=this._removalsHead;null!==t;t=t._nextRemoved)e(t)}forEachIdentityChange(e){let t;for(t=this._identityChangesHead;null!==t;t=t._nextIdentityChange)e(t)}diff(e){if(null==e&&(e=[]),!Pa(e))throw new Error(`Error trying to diff '${Ze(e)}'. Only arrays and iterables are allowed`);return this.check(e)?this:null}onDestroy(){}check(e){this._reset();let t,n,r,s=this._itHead,a=!1;if(Array.isArray(e)){this.length=e.length;for(let t=0;t<this.length;t++)n=e[t],r=this._trackByFn(t,n),null!==s&&za(s.trackById,r)?(a&&(s=this._verifyReinsertion(s,n,r,t)),za(s.item,n)||this._addIdentityChange(s,n)):(s=this._mismatch(s,n,r,t),a=!0),s=s._next}else t=0,function(e,t){if(Array.isArray(e))for(let n=0;n<e.length;n++)t(e[n]);else{const n=e[La()]();let r;for(;!(r=n.next()).done;)t(r.value)}}(e,e=>{r=this._trackByFn(t,e),null!==s&&za(s.trackById,r)?(a&&(s=this._verifyReinsertion(s,e,r,t)),za(s.item,e)||this._addIdentityChange(s,e)):(s=this._mismatch(s,e,r,t),a=!0),s=s._next,t++}),this.length=t;return this._truncate(s),this.collection=e,this.isDirty}get isDirty(){return null!==this._additionsHead||null!==this._movesHead||null!==this._removalsHead||null!==this._identityChangesHead}_reset(){if(this.isDirty){let e,t;for(e=this._previousItHead=this._itHead;null!==e;e=e._next)e._nextPrevious=e._next;for(e=this._additionsHead;null!==e;e=e._nextAdded)e.previousIndex=e.currentIndex;for(this._additionsHead=this._additionsTail=null,e=this._movesHead;null!==e;e=t)e.previousIndex=e.currentIndex,t=e._nextMoved;this._movesHead=this._movesTail=null,this._removalsHead=this._removalsTail=null,this._identityChangesHead=this._identityChangesTail=null}}_mismatch(e,t,n,r){let s;return null===e?s=this._itTail:(s=e._prev,this._remove(e)),null!==(e=null===this._linkedRecords?null:this._linkedRecords.get(n,r))?(za(e.item,t)||this._addIdentityChange(e,t),this._moveAfter(e,s,r)):null!==(e=null===this._unlinkedRecords?null:this._unlinkedRecords.get(n,null))?(za(e.item,t)||this._addIdentityChange(e,t),this._reinsertAfter(e,s,r)):e=this._addAfter(new Fi(t,n),s,r),e}_verifyReinsertion(e,t,n,r){let s=null===this._unlinkedRecords?null:this._unlinkedRecords.get(n,null);return null!==s?e=this._reinsertAfter(s,e._prev,r):e.currentIndex!=r&&(e.currentIndex=r,this._addToMoves(e,r)),e}_truncate(e){for(;null!==e;){const t=e._next;this._addToRemovals(this._unlink(e)),e=t}null!==this._unlinkedRecords&&this._unlinkedRecords.clear(),null!==this._additionsTail&&(this._additionsTail._nextAdded=null),null!==this._movesTail&&(this._movesTail._nextMoved=null),null!==this._itTail&&(this._itTail._next=null),null!==this._removalsTail&&(this._removalsTail._nextRemoved=null),null!==this._identityChangesTail&&(this._identityChangesTail._nextIdentityChange=null)}_reinsertAfter(e,t,n){null!==this._unlinkedRecords&&this._unlinkedRecords.remove(e);const r=e._prevRemoved,s=e._nextRemoved;return null===r?this._removalsHead=s:r._nextRemoved=s,null===s?this._removalsTail=r:s._prevRemoved=r,this._insertAfter(e,t,n),this._addToMoves(e,n),e}_moveAfter(e,t,n){return this._unlink(e),this._insertAfter(e,t,n),this._addToMoves(e,n),e}_addAfter(e,t,n){return this._insertAfter(e,t,n),this._additionsTail=null===this._additionsTail?this._additionsHead=e:this._additionsTail._nextAdded=e,e}_insertAfter(e,t,n){const r=null===t?this._itHead:t._next;return e._next=r,e._prev=t,null===r?this._itTail=e:r._prev=e,null===t?this._itHead=e:t._next=e,null===this._linkedRecords&&(this._linkedRecords=new Oi),this._linkedRecords.put(e),e.currentIndex=n,e}_remove(e){return this._addToRemovals(this._unlink(e))}_unlink(e){null!==this._linkedRecords&&this._linkedRecords.remove(e);const t=e._prev,n=e._next;return null===t?this._itHead=n:t._next=n,null===n?this._itTail=t:n._prev=t,e}_addToMoves(e,t){return e.previousIndex===t||(this._movesTail=null===this._movesTail?this._movesHead=e:this._movesTail._nextMoved=e),e}_addToRemovals(e){return null===this._unlinkedRecords&&(this._unlinkedRecords=new Oi),this._unlinkedRecords.put(e),e.currentIndex=null,e._nextRemoved=null,null===this._removalsTail?(this._removalsTail=this._removalsHead=e,e._prevRemoved=null):(e._prevRemoved=this._removalsTail,this._removalsTail=this._removalsTail._nextRemoved=e),e}_addIdentityChange(e,t){return e.item=t,this._identityChangesTail=null===this._identityChangesTail?this._identityChangesHead=e:this._identityChangesTail._nextIdentityChange=e,e}}class Fi{constructor(e,t){this.item=e,this.trackById=t,this.currentIndex=null,this.previousIndex=null,this._nextPrevious=null,this._prev=null,this._next=null,this._prevDup=null,this._nextDup=null,this._prevRemoved=null,this._nextRemoved=null,this._nextAdded=null,this._nextMoved=null,this._nextIdentityChange=null}}class Di{constructor(){this._head=null,this._tail=null}add(e){null===this._head?(this._head=this._tail=e,e._nextDup=null,e._prevDup=null):(this._tail._nextDup=e,e._prevDup=this._tail,e._nextDup=null,this._tail=e)}get(e,t){let n;for(n=this._head;null!==n;n=n._nextDup)if((null===t||t<=n.currentIndex)&&za(n.trackById,e))return n;return null}remove(e){const t=e._prevDup,n=e._nextDup;return null===t?this._head=n:t._nextDup=n,null===n?this._tail=t:n._prevDup=t,null===this._head}}class Oi{constructor(){this.map=new Map}put(e){const t=e.trackById;let n=this.map.get(t);n||(n=new Di,this.map.set(t,n)),n.add(e)}get(e,t){const n=this.map.get(e);return n?n.get(e,t):null}remove(e){const t=e.trackById;return this.map.get(t).remove(e)&&this.map.delete(t),e}get isEmpty(){return 0===this.map.size}clear(){this.map.clear()}}function Mi(e,t,n){const r=e.previousIndex;if(null===r)return r;let s=0;return n&&r<n.length&&(s=n[r]),r+t+s}class Li{constructor(){}supports(e){return e instanceof Map||Ba(e)}create(){return new zi}}class zi{constructor(){this._records=new Map,this._mapHead=null,this._appendAfter=null,this._previousMapHead=null,this._changesHead=null,this._changesTail=null,this._additionsHead=null,this._additionsTail=null,this._removalsHead=null,this._removalsTail=null}get isDirty(){return null!==this._additionsHead||null!==this._changesHead||null!==this._removalsHead}forEachItem(e){let t;for(t=this._mapHead;null!==t;t=t._next)e(t)}forEachPreviousItem(e){let t;for(t=this._previousMapHead;null!==t;t=t._nextPrevious)e(t)}forEachChangedItem(e){let t;for(t=this._changesHead;null!==t;t=t._nextChanged)e(t)}forEachAddedItem(e){let t;for(t=this._additionsHead;null!==t;t=t._nextAdded)e(t)}forEachRemovedItem(e){let t;for(t=this._removalsHead;null!==t;t=t._nextRemoved)e(t)}diff(e){if(e){if(!(e instanceof Map||Ba(e)))throw new Error(`Error trying to diff '${Ze(e)}'. Only maps and objects are allowed`)}else e=new Map;return this.check(e)?this:null}onDestroy(){}check(e){this._reset();let t=this._mapHead;if(this._appendAfter=null,this._forEach(e,(e,n)=>{if(t&&t.key===n)this._maybeAddToChanges(t,e),this._appendAfter=t,t=t._next;else{const r=this._getOrCreateRecordForKey(n,e);t=this._insertBeforeOrAppend(t,r)}}),t){t._prev&&(t._prev._next=null),this._removalsHead=t;for(let e=t;null!==e;e=e._nextRemoved)e===this._mapHead&&(this._mapHead=null),this._records.delete(e.key),e._nextRemoved=e._next,e.previousValue=e.currentValue,e.currentValue=null,e._prev=null,e._next=null}return this._changesTail&&(this._changesTail._nextChanged=null),this._additionsTail&&(this._additionsTail._nextAdded=null),this.isDirty}_insertBeforeOrAppend(e,t){if(e){const n=e._prev;return t._next=e,t._prev=n,e._prev=t,n&&(n._next=t),e===this._mapHead&&(this._mapHead=t),this._appendAfter=e,e}return this._appendAfter?(this._appendAfter._next=t,t._prev=this._appendAfter):this._mapHead=t,this._appendAfter=t,null}_getOrCreateRecordForKey(e,t){if(this._records.has(e)){const n=this._records.get(e);this._maybeAddToChanges(n,t);const r=n._prev,s=n._next;return r&&(r._next=s),s&&(s._prev=r),n._next=null,n._prev=null,n}const n=new Pi(e);return this._records.set(e,n),n.currentValue=t,this._addToAdditions(n),n}_reset(){if(this.isDirty){let e;for(this._previousMapHead=this._mapHead,e=this._previousMapHead;null!==e;e=e._next)e._nextPrevious=e._next;for(e=this._changesHead;null!==e;e=e._nextChanged)e.previousValue=e.currentValue;for(e=this._additionsHead;null!=e;e=e._nextAdded)e.previousValue=e.currentValue;this._changesHead=this._changesTail=null,this._additionsHead=this._additionsTail=null,this._removalsHead=null}}_maybeAddToChanges(e,t){za(t,e.currentValue)||(e.previousValue=e.currentValue,e.currentValue=t,this._addToChanges(e))}_addToAdditions(e){null===this._additionsHead?this._additionsHead=this._additionsTail=e:(this._additionsTail._nextAdded=e,this._additionsTail=e)}_addToChanges(e){null===this._changesHead?this._changesHead=this._changesTail=e:(this._changesTail._nextChanged=e,this._changesTail=e)}_forEach(e,t){e instanceof Map?e.forEach(t):Object.keys(e).forEach(n=>t(e[n],n))}}class Pi{constructor(e){this.key=e,this.previousValue=null,this.currentValue=null,this._nextPrevious=null,this._next=null,this._prev=null,this._nextAdded=null,this._nextRemoved=null,this._nextChanged=null}}let Bi=(()=>{class e{constructor(e){this.factories=e}static create(t,n){if(null!=n){const e=n.factories.slice();t=t.concat(e)}return new e(t)}static extend(t){return{provide:e,useFactory:n=>{if(!n)throw new Error("Cannot extend IterableDiffers without a parent injector");return e.create(t,n)},deps:[[e,new Le,new Oe]]}}find(e){const t=this.factories.find(t=>t.supports(e));if(null!=t)return t;throw new Error(`Cannot find a differ supporting object '${e}' of type '${n=e,n.name||typeof n}'`);var n}}return e.\u0275prov=Be({token:e,providedIn:"root",factory:()=>new e([new Ai])}),e})(),Ui=(()=>{class e{constructor(e){this.factories=e}static create(t,n){if(n){const e=n.factories.slice();t=t.concat(e)}return new e(t)}static extend(t){return{provide:e,useFactory:n=>{if(!n)throw new Error("Cannot extend KeyValueDiffers without a parent injector");return e.create(t,n)},deps:[[e,new Le,new Oe]]}}find(e){const t=this.factories.find(t=>t.supports(e));if(t)return t;throw new Error(`Cannot find a differ supporting object '${e}'`)}}return e.\u0275prov=Be({token:e,providedIn:"root",factory:()=>new e([new Li])}),e})();const Vi=[new Li],Wi=new Bi([new Ai]),Gi=new Ui(Vi);let Hi=(()=>{class e{}return e.__NG_ELEMENT_ID__=()=>ji(e,vi),e})();const ji=function(e,t){return pa(e,t,kn(),wn())};let qi=(()=>{class e{}return e.__NG_ELEMENT_ID__=()=>Ki(e,vi),e})();const Ki=function(e,t){return fa(e,t,kn(),wn())},Xi={};class Zi extends wi{constructor(e){super(),this.ngModule=e}resolveComponentFactory(e){const t=Kt(e);return new Qi(t,this.ngModule)}}function Yi(e){const t=[];for(let n in e)e.hasOwnProperty(n)&&t.push({propName:e[n],templateName:n});return t}const Ji=new pt("SCHEDULER_TOKEN",{providedIn:"root",factory:()=>or});class Qi extends bi{constructor(e,t){super(),this.componentDef=e,this.ngModule=t,this.componentType=e.type,this.selector=e.selectors.map(Gr).join(","),this.ngContentSelectors=e.ngContentSelectors?e.ngContentSelectors:[],this.isBoundToModule=!!t}get inputs(){return Yi(this.componentDef.inputs)}get outputs(){return Yi(this.componentDef.outputs)}create(e,t,n,r){const s=(r=r||this.ngModule)?function(e,t){return{get:(n,r,s)=>{const a=e.get(n,Xi,s);return a!==Xi||r===Xi?a:t.get(n,r,s)}}}(e,r.injector):e,a=s.get(Si,on),i=s.get(Ti,null),o=a.createRenderer(null,this.componentDef),l=this.componentDef.selectors[0][0]||"div",u=n?function(e,t,n){if(an(e))return e.selectRootElement(t,n===Lt.ShadowDom);let r="string"==typeof t?e.querySelector(t):t;return r.textContent="",r}(o,n,this.componentDef.encapsulation):as(l,a.createRenderer(null,this.componentDef),function(e){const t=e.toLowerCase();return"svg"===t?"http://www.w3.org/2000/svg":"math"===t?"http://www.w3.org/1998/MathML/":null}(l)),c=this.componentDef.onPush?576:528,h="string"==typeof n&&/^#root-ng-internal-isolated-\d+/.test(n),d={components:[],scheduler:or,clean:Ds,playerHandler:null,flags:0},p=ps(0,-1,null,1,0,null,null,null,null,null),f=is(null,p,d,c,null,null,a,o,i,s);let m,g;Dn(f,null);try{const e=function(e,t,n,r,s,a){const i=n[1];n[20]=e;const o=os(i,null,0,3,null,null),l=o.mergedAttrs=t.hostAttrs;null!==l&&(Oa(o,l,!0),null!==e&&(Zn(s,e,l),null!==o.classes&&ia(s,e,o.classes),null!==o.styles&&aa(s,e,o.styles)));const u=r.createRenderer(e,t),c=is(n,ds(t),null,t.onPush?64:16,n[20],o,r,u,void 0);return i.firstCreatePass&&(gr(dr(o,n),i,t.type),ws(i,o),ks(o,n.length,1)),Es(n,c),n[20]=c}(u,this.componentDef,f,a,o);if(u)if(n)Zn(o,u,["ng-version",Ei.full]);else{const{attrs:e,classes:t}=function(e){const t=[],n=[];let r=1,s=2;for(;r<e.length;){let a=e[r];if("string"==typeof a)2===s?""!==a&&t.push(a,e[++r]):8===s&&n.push(a);else{if(!Br(s))break;s=a}r++}return{attrs:t,classes:n}}(this.componentDef.selectors[0]);e&&Zn(o,u,e),t&&t.length>0&&ia(o,u,t.join(" "))}if(g=cn(p,0),void 0!==t){const e=g.projection=[];for(let n=0;n<this.ngContentSelectors.length;n++){const r=t[n];e.push(null!=r?Array.from(r):null)}}m=function(e,t,n,r,s){const a=n[1],i=function(e,t,n){const r=kn();e.firstCreatePass&&(n.providersResolver&&n.providersResolver(n),xs(e,r,1),Ss(e,t,n));const s=vr(t,e,t.length-1,r);$r(s,t);const a=un(r,t);return a&&$r(a,t),s}(a,n,t);r.components.push(i),e[8]=i,s&&s.forEach(e=>e(i,t)),t.contentQueries&&t.contentQueries(1,i,n.length-1);const o=kn();if(a.firstCreatePass&&(null!==t.hostBindings||null!==t.hostAttrs)){Un(o.index-20);const e=n[1];gs(e,t),ys(e,n,t.hostVars),bs(t,i)}return i}(e,this.componentDef,f,d,[yi]),ls(p,f,null)}finally{Pn()}const y=new eo(this.componentType,m,da(vi,g,f),f,g);return n&&!h||(p.node.child=g),y}}class eo extends class{}{constructor(e,t,n,r,s){super(),this.location=n,this._rootLView=r,this._tNode=s,this.destroyCbs=[],this.instance=t,this.hostView=this.changeDetectorRef=new la(r),function(e,t,n,r){let s=e.node;null==s&&(e.node=s=fs(0,null,2,-1,null,null)),r[6]=s}(r[1],0,0,r),this.componentType=e}get injector(){return new Ir(this._tNode,this._rootLView)}destroy(){this.destroyCbs&&(this.destroyCbs.forEach(e=>e()),this.destroyCbs=null,!this.hostView.destroyed&&this.hostView.destroy())}onDestroy(e){this.destroyCbs&&this.destroyCbs.push(e)}}const to=void 0;var no=["en",[["a","p"],["AM","PM"],to],[["AM","PM"],to,to],[["S","M","T","W","T","F","S"],["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],["Su","Mo","Tu","We","Th","Fr","Sa"]],to,[["J","F","M","A","M","J","J","A","S","O","N","D"],["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],["January","February","March","April","May","June","July","August","September","October","November","December"]],to,[["B","A"],["BC","AD"],["Before Christ","Anno Domini"]],0,[6,0],["M/d/yy","MMM d, y","MMMM d, y","EEEE, MMMM d, y"],["h:mm a","h:mm:ss a","h:mm:ss a z","h:mm:ss a zzzz"],["{1}, {0}",to,"{1} 'at' {0}",to],[".",",",";","%","+","-","E","\xd7","\u2030","\u221e","NaN",":"],["#,##0.###","#,##0%","\xa4#,##0.00","#E0"],"USD","$","US Dollar",{},"ltr",function(e){let t=Math.floor(Math.abs(e)),n=e.toString().replace(/^[^.]*\.?/,"").length;return 1===t&&0===n?1:5}];let ro={};function so(e){return e in ro||(ro[e]=at.ng&&at.ng.common&&at.ng.common.locales&&at.ng.common.locales[e]),ro[e]}const ao=function(){var e={LocaleId:0,DayPeriodsFormat:1,DayPeriodsStandalone:2,DaysFormat:3,DaysStandalone:4,MonthsFormat:5,MonthsStandalone:6,Eras:7,FirstDayOfWeek:8,WeekendRange:9,DateFormat:10,TimeFormat:11,DateTimeFormat:12,NumberSymbols:13,NumberFormats:14,CurrencyCode:15,CurrencySymbol:16,CurrencyName:17,Currencies:18,Directionality:19,PluralCase:20,ExtraData:21};return e[e.LocaleId]="LocaleId",e[e.DayPeriodsFormat]="DayPeriodsFormat",e[e.DayPeriodsStandalone]="DayPeriodsStandalone",e[e.DaysFormat]="DaysFormat",e[e.DaysStandalone]="DaysStandalone",e[e.MonthsFormat]="MonthsFormat",e[e.MonthsStandalone]="MonthsStandalone",e[e.Eras]="Eras",e[e.FirstDayOfWeek]="FirstDayOfWeek",e[e.WeekendRange]="WeekendRange",e[e.DateFormat]="DateFormat",e[e.TimeFormat]="TimeFormat",e[e.DateTimeFormat]="DateTimeFormat",e[e.NumberSymbols]="NumberSymbols",e[e.NumberFormats]="NumberFormats",e[e.CurrencyCode]="CurrencyCode",e[e.CurrencySymbol]="CurrencySymbol",e[e.CurrencyName]="CurrencyName",e[e.Currencies]="Currencies",e[e.Directionality]="Directionality",e[e.PluralCase]="PluralCase",e[e.ExtraData]="ExtraData",e}();let io="en-US";function oo(e){var t,n;n="Expected localeId to be defined",null==(t=e)&&function(e,t,n,r){throw new Error("ASSERTION ERROR: "+e+` [Expected=> null != ${t} <=Actual]`)}(n,t),"string"==typeof e&&(io=e.toLowerCase().replace(/_/g,"-"))}const lo=new Map;class uo extends Tt{constructor(e,t){super(),this._parent=t,this._bootstrapComponents=[],this.injector=this,this.destroyCbs=[],this.componentFactoryResolver=new Zi(this);const n=Zt(e),r=e[ct]||null;r&&oo(r),this._bootstrapComponents=lr(n.bootstrap),this._r3Injector=Sa(e,t,[{provide:Tt,useValue:this},{provide:wi,useValue:this.componentFactoryResolver}],Ze(e)),this._r3Injector._resolveInjectorDefTypes(),this.instance=this.get(e)}get(e,t=Aa.THROW_IF_NOT_FOUND,n=ze.Default){return e===Aa||e===Tt||e===ft?this:this._r3Injector.get(e,t,n)}destroy(){const e=this._r3Injector;!e.destroyed&&e.destroy(),this.destroyCbs.forEach(e=>e()),this.destroyCbs=null}onDestroy(e){this.destroyCbs.push(e)}}class co extends _t{constructor(e){super(),this.moduleType=e,null!==Zt(e)&&function e(t){if(null!==t.\u0275mod.id){const e=t.\u0275mod.id;(function(e,t,n){if(t&&t!==n)throw new Error(`Duplicate module registered for ${e} - ${Ze(t)} vs ${Ze(t.name)}`)})(e,lo.get(e),t),lo.set(e,t)}let n=t.\u0275mod.imports;n instanceof Function&&(n=n()),n&&n.forEach(t=>e(t))}(e)}create(e){return new uo(this.moduleType,e)}}class ho extends re{constructor(e=!1){super(),this.__isAsync=e}emit(e){super.next(e)}subscribe(e,t,n){let r,s=e=>null,a=()=>null;e&&"object"==typeof e?(r=this.__isAsync?t=>{setTimeout(()=>e.next(t))}:t=>{e.next(t)},e.error&&(s=this.__isAsync?t=>{setTimeout(()=>e.error(t))}:t=>{e.error(t)}),e.complete&&(a=this.__isAsync?()=>{setTimeout(()=>e.complete())}:()=>{e.complete()})):(r=this.__isAsync?t=>{setTimeout(()=>e(t))}:t=>{e(t)},t&&(s=this.__isAsync?e=>{setTimeout(()=>t(e))}:e=>{t(e)}),n&&(a=this.__isAsync?()=>{setTimeout(()=>n())}:()=>{n()}));const i=super.subscribe(r,s,a);return e instanceof W&&e.add(i),i}}function po(){return this._results[La()]()}class fo{constructor(){this.dirty=!0,this._results=[],this.changes=new ho,this.length=0;const e=La(),t=fo.prototype;t[e]||(t[e]=po)}map(e){return this._results.map(e)}filter(e){return this._results.filter(e)}find(e){return this._results.find(e)}reduce(e,t){return this._results.reduce(e,t)}forEach(e){this._results.forEach(e)}some(e){return this._results.some(e)}toArray(){return this._results.slice()}toString(){return this._results.toString()}reset(e){this._results=function e(t,n){void 0===n&&(n=t);for(let r=0;r<t.length;r++){let s=t[r];Array.isArray(s)?(n===t&&(n=t.slice(0,r)),e(s,n)):n!==t&&n.push(s)}return n}(e),this.dirty=!1,this.length=this._results.length,this.last=this._results[this.length-1],this.first=this._results[0]}notifyOnChanges(){this.changes.emit(this)}setDirty(){this.dirty=!0}destroy(){this.changes.complete(),this.changes.unsubscribe()}}class mo{constructor(e){this.queryList=e,this.matches=null}clone(){return new mo(this.queryList)}setDirty(){this.queryList.setDirty()}}class go{constructor(e=[]){this.queries=e}createEmbeddedView(e){const t=e.queries;if(null!==t){const n=null!==e.contentQueries?e.contentQueries[0]:t.length,r=[];for(let e=0;e<n;e++){const n=t.getByIndex(e);r.push(this.queries[n.indexInDeclarationView].clone())}return new go(r)}return null}insertView(e){this.dirtyQueriesWithMatches(e)}detachView(e){this.dirtyQueriesWithMatches(e)}dirtyQueriesWithMatches(e){for(let t=0;t<this.queries.length;t++)null!==So(e,t).matches&&this.queries[t].setDirty()}}class yo{constructor(e,t,n,r=null){this.predicate=e,this.descendants=t,this.isStatic=n,this.read=r}}class bo{constructor(e=[]){this.queries=e}elementStart(e,t){for(let n=0;n<this.queries.length;n++)this.queries[n].elementStart(e,t)}elementEnd(e){for(let t=0;t<this.queries.length;t++)this.queries[t].elementEnd(e)}embeddedTView(e){let t=null;for(let n=0;n<this.length;n++){const r=null!==t?t.length:0,s=this.getByIndex(n).embeddedTView(e,r);s&&(s.indexInDeclarationView=n,null!==t?t.push(s):t=[s])}return null!==t?new bo(t):null}template(e,t){for(let n=0;n<this.queries.length;n++)this.queries[n].template(e,t)}getByIndex(e){return this.queries[e]}get length(){return this.queries.length}track(e){this.queries.push(e)}}class xo{constructor(e,t=-1){this.metadata=e,this.matches=null,this.indexInDeclarationView=-1,this.crossesNgTemplate=!1,this._appliesToNextNode=!0,this._declarationNodeIndex=t}elementStart(e,t){this.isApplyingToNode(t)&&this.matchTNode(e,t)}elementEnd(e){this._declarationNodeIndex===e.index&&(this._appliesToNextNode=!1)}template(e,t){this.elementStart(e,t)}embeddedTView(e,t){return this.isApplyingToNode(e)?(this.crossesNgTemplate=!0,this.addMatch(-e.index,t),new xo(this.metadata)):null}isApplyingToNode(e){if(this._appliesToNextNode&&!1===this.metadata.descendants){const t=this._declarationNodeIndex;let n=e.parent;for(;null!==n&&4===n.type&&n.index!==t;)n=n.parent;return t===(null!==n?n.index:-1)}return this._appliesToNextNode}matchTNode(e,t){if(Array.isArray(this.metadata.predicate)){const n=this.metadata.predicate;for(let r=0;r<n.length;r++)this.matchTNodeWithReadOption(e,t,wo(t,n[r]))}else{const n=this.metadata.predicate;n===Hi?0===t.type&&this.matchTNodeWithReadOption(e,t,-1):this.matchTNodeWithReadOption(e,t,wr(t,e,n,!1,!1))}}matchTNodeWithReadOption(e,t,n){if(null!==n){const r=this.metadata.read;if(null!==r)if(r===vi||r===qi||r===Hi&&0===t.type)this.addMatch(t.index,-2);else{const n=wr(t,e,r,!1,!1);null!==n&&this.addMatch(t.index,n)}else this.addMatch(t.index,n)}}addMatch(e,t){null===this.matches?this.matches=[e,t]:this.matches.push(e,t)}}function wo(e,t){const n=e.localNames;if(null!==n)for(let r=0;r<n.length;r+=2)if(n[r]===t)return n[r+1];return null}function vo(e,t,n,r){return-1===n?function(e,t){return 3===e.type||4===e.type?da(vi,e,t):0===e.type?pa(Hi,vi,e,t):null}(t,e):-2===n?function(e,t,n){return n===vi?da(vi,t,e):n===Hi?pa(Hi,vi,t,e):n===qi?fa(qi,vi,t,e):void 0}(e,t,r):vr(e,e[1],n,t)}function ko(e,t,n,r){const s=t[19].queries[r];if(null===s.matches){const r=e.data,a=n.matches,i=[];for(let e=0;e<a.length;e+=2){const s=a[e];i.push(s<0?null:vo(t,r[s],a[e+1],n.metadata.read))}s.matches=i}return s.matches}function So(e,t){return e.queries.getByIndex(t)}const Io=new pt("Application Initializer");let Co=(()=>{class e{constructor(e){this.appInits=e,this.initialized=!1,this.done=!1,this.donePromise=new Promise((e,t)=>{this.resolve=e,this.reject=t})}runInitializers(){if(this.initialized)return;const e=[],t=()=>{this.done=!0,this.resolve()};if(this.appInits)for(let n=0;n<this.appInits.length;n++){const t=this.appInits[n]();Za(t)&&e.push(t)}Promise.all(e).then(()=>{t()}).catch(e=>{this.reject(e)}),0===e.length&&t(),this.initialized=!0}}return e.\u0275fac=function(t){return new(t||e)(St(Io,8))},e.\u0275prov=Be({token:e,factory:e.\u0275fac}),e})();const No=new pt("AppId"),To={provide:No,useFactory:function(){return`${_o()}${_o()}${_o()}`},deps:[]};function _o(){return String.fromCharCode(97+Math.floor(25*Math.random()))}const Eo=new pt("Platform Initializer"),Ao=new pt("Platform ID"),Ro=new pt("appBootstrapListener");let $o=(()=>{class e{log(e){console.log(e)}warn(e){console.warn(e)}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=Be({token:e,factory:e.\u0275fac}),e})();const Fo=new pt("LocaleId"),Do=new pt("DefaultCurrencyCode");class Oo{constructor(e,t){this.ngModuleFactory=e,this.componentFactories=t}}const Mo=function(e){return new co(e)},Lo=Mo,zo=function(e){return Promise.resolve(Mo(e))},Po=function(e){const t=Mo(e),n=lr(Zt(e).declarations).reduce((e,t)=>{const n=Kt(t);return n&&e.push(new Qi(n)),e},[]);return new Oo(t,n)},Bo=Po,Uo=function(e){return Promise.resolve(Po(e))};let Vo=(()=>{class e{constructor(){this.compileModuleSync=Lo,this.compileModuleAsync=zo,this.compileModuleAndAllComponentsSync=Bo,this.compileModuleAndAllComponentsAsync=Uo}clearCache(){}clearCacheFor(e){}getModuleId(e){}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=Be({token:e,factory:e.\u0275fac}),e})();const Wo=new pt("compilerOptions"),Go=(()=>Promise.resolve(0))();function Ho(e){"undefined"==typeof Zone?Go.then(()=>{e&&e.apply(null,null)}):Zone.current.scheduleMicroTask("scheduleMicrotask",e)}class jo{constructor({enableLongStackTrace:e=!1,shouldCoalesceEventChangeDetection:t=!1}){if(this.hasPendingMacrotasks=!1,this.hasPendingMicrotasks=!1,this.isStable=!0,this.onUnstable=new ho(!1),this.onMicrotaskEmpty=new ho(!1),this.onStable=new ho(!1),this.onError=new ho(!1),"undefined"==typeof Zone)throw new Error("In this configuration Angular requires Zone.js");Zone.assertZonePatched(),this._nesting=0,this._outer=this._inner=Zone.current,Zone.wtfZoneSpec&&(this._inner=this._inner.fork(Zone.wtfZoneSpec)),Zone.TaskTrackingZoneSpec&&(this._inner=this._inner.fork(new Zone.TaskTrackingZoneSpec)),e&&Zone.longStackTraceZoneSpec&&(this._inner=this._inner.fork(Zone.longStackTraceZoneSpec)),this.shouldCoalesceEventChangeDetection=t,this.lastRequestAnimationFrameId=-1,this.nativeRequestAnimationFrame=function(){let e=at.requestAnimationFrame,t=at.cancelAnimationFrame;if("undefined"!=typeof Zone&&e&&t){const n=e[Zone.__symbol__("OriginalDelegate")];n&&(e=n);const r=t[Zone.__symbol__("OriginalDelegate")];r&&(t=r)}return{nativeRequestAnimationFrame:e,nativeCancelAnimationFrame:t}}().nativeRequestAnimationFrame,function(e){const t=!!e.shouldCoalesceEventChangeDetection&&e.nativeRequestAnimationFrame&&(()=>{!function(e){-1===e.lastRequestAnimationFrameId&&(e.lastRequestAnimationFrameId=e.nativeRequestAnimationFrame.call(at,()=>{e.lastRequestAnimationFrameId=-1,Zo(e),Xo(e)}),Zo(e))}(e)});e._inner=e._inner.fork({name:"angular",properties:{isAngularZone:!0,maybeDelayChangeDetection:t},onInvokeTask:(n,r,s,a,i,o)=>{try{return Yo(e),n.invokeTask(s,a,i,o)}finally{t&&"eventTask"===a.type&&t(),Jo(e)}},onInvoke:(t,n,r,s,a,i,o)=>{try{return Yo(e),t.invoke(r,s,a,i,o)}finally{Jo(e)}},onHasTask:(t,n,r,s)=>{t.hasTask(r,s),n===r&&("microTask"==s.change?(e._hasPendingMicrotasks=s.microTask,Zo(e),Xo(e)):"macroTask"==s.change&&(e.hasPendingMacrotasks=s.macroTask))},onHandleError:(t,n,r,s)=>(t.handleError(r,s),e.runOutsideAngular(()=>e.onError.emit(s)),!1)})}(this)}static isInAngularZone(){return!0===Zone.current.get("isAngularZone")}static assertInAngularZone(){if(!jo.isInAngularZone())throw new Error("Expected to be in Angular Zone, but it is not!")}static assertNotInAngularZone(){if(jo.isInAngularZone())throw new Error("Expected to not be in Angular Zone, but it is!")}run(e,t,n){return this._inner.run(e,t,n)}runTask(e,t,n,r){const s=this._inner,a=s.scheduleEventTask("NgZoneEvent: "+r,e,Ko,qo,qo);try{return s.runTask(a,t,n)}finally{s.cancelTask(a)}}runGuarded(e,t,n){return this._inner.runGuarded(e,t,n)}runOutsideAngular(e){return this._outer.run(e)}}function qo(){}const Ko={};function Xo(e){if(0==e._nesting&&!e.hasPendingMicrotasks&&!e.isStable)try{e._nesting++,e.onMicrotaskEmpty.emit(null)}finally{if(e._nesting--,!e.hasPendingMicrotasks)try{e.runOutsideAngular(()=>e.onStable.emit(null))}finally{e.isStable=!0}}}function Zo(e){e.hasPendingMicrotasks=!!(e._hasPendingMicrotasks||e.shouldCoalesceEventChangeDetection&&-1!==e.lastRequestAnimationFrameId)}function Yo(e){e._nesting++,e.isStable&&(e.isStable=!1,e.onUnstable.emit(null))}function Jo(e){e._nesting--,Xo(e)}class Qo{constructor(){this.hasPendingMicrotasks=!1,this.hasPendingMacrotasks=!1,this.isStable=!0,this.onUnstable=new ho,this.onMicrotaskEmpty=new ho,this.onStable=new ho,this.onError=new ho}run(e,t,n){return e.apply(t,n)}runGuarded(e,t,n){return e.apply(t,n)}runOutsideAngular(e){return e()}runTask(e,t,n,r){return e.apply(t,n)}}let el=(()=>{class e{constructor(e){this._ngZone=e,this._pendingCount=0,this._isZoneStable=!0,this._didWork=!1,this._callbacks=[],this.taskTrackingZone=null,this._watchAngularEvents(),e.run(()=>{this.taskTrackingZone="undefined"==typeof Zone?null:Zone.current.get("TaskTrackingZone")})}_watchAngularEvents(){this._ngZone.onUnstable.subscribe({next:()=>{this._didWork=!0,this._isZoneStable=!1}}),this._ngZone.runOutsideAngular(()=>{this._ngZone.onStable.subscribe({next:()=>{jo.assertNotInAngularZone(),Ho(()=>{this._isZoneStable=!0,this._runCallbacksIfReady()})}})})}increasePendingRequestCount(){return this._pendingCount+=1,this._didWork=!0,this._pendingCount}decreasePendingRequestCount(){if(this._pendingCount-=1,this._pendingCount<0)throw new Error("pending async requests below zero");return this._runCallbacksIfReady(),this._pendingCount}isStable(){return this._isZoneStable&&0===this._pendingCount&&!this._ngZone.hasPendingMacrotasks}_runCallbacksIfReady(){if(this.isStable())Ho(()=>{for(;0!==this._callbacks.length;){let e=this._callbacks.pop();clearTimeout(e.timeoutId),e.doneCb(this._didWork)}this._didWork=!1});else{let e=this.getPendingTasks();this._callbacks=this._callbacks.filter(t=>!t.updateCb||!t.updateCb(e)||(clearTimeout(t.timeoutId),!1)),this._didWork=!0}}getPendingTasks(){return this.taskTrackingZone?this.taskTrackingZone.macroTasks.map(e=>({source:e.source,creationLocation:e.creationLocation,data:e.data})):[]}addCallback(e,t,n){let r=-1;t&&t>0&&(r=setTimeout(()=>{this._callbacks=this._callbacks.filter(e=>e.timeoutId!==r),e(this._didWork,this.getPendingTasks())},t)),this._callbacks.push({doneCb:e,timeoutId:r,updateCb:n})}whenStable(e,t,n){if(n&&!this.taskTrackingZone)throw new Error('Task tracking zone is required when passing an update callback to whenStable(). Is "zone.js/dist/task-tracking.js" loaded?');this.addCallback(e,t,n),this._runCallbacksIfReady()}getPendingRequestCount(){return this._pendingCount}findProviders(e,t,n){return[]}}return e.\u0275fac=function(t){return new(t||e)(St(jo))},e.\u0275prov=Be({token:e,factory:e.\u0275fac}),e})(),tl=(()=>{class e{constructor(){this._applications=new Map,sl.addToWindow(this)}registerApplication(e,t){this._applications.set(e,t)}unregisterApplication(e){this._applications.delete(e)}unregisterAllApplications(){this._applications.clear()}getTestability(e){return this._applications.get(e)||null}getAllTestabilities(){return Array.from(this._applications.values())}getAllRootElements(){return Array.from(this._applications.keys())}findTestabilityInTree(e,t=!0){return sl.findTestabilityInTree(this,e,t)}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=Be({token:e,factory:e.\u0275fac}),e})();class nl{addToWindow(e){}findTestabilityInTree(e,t,n){return null}}let rl,sl=new nl,al=function(e,t,n){const r=e.get(Wo,[]).concat(t),s=new co(n);if(0===$a.size)return Promise.resolve(s);const a=function(e){const t=[];return e.forEach(e=>e&&t.push(...e)),t}(r.map(e=>e.providers));if(0===a.length)return Promise.resolve(s);const i=function(){const e=at.ng;if(!e||!e.\u0275compilerFacade)throw new Error("Angular JIT compilation failed: '@angular/compiler' not loaded!\n  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\n  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\n  - Alternatively provide the compiler with 'import \"@angular/compiler\";' before bootstrapping.");return e.\u0275compilerFacade}(),o=Aa.create({providers:a}).get(i.ResourceLoader);return function(e){const t=[],n=new Map;function r(e){let t=n.get(e);if(!t){const r=(e=>Promise.resolve(o.get(e)))(e);n.set(e,t=r.then(Da))}return t}return $a.forEach((e,n)=>{const s=[];e.templateUrl&&s.push(r(e.templateUrl).then(t=>{e.template=t}));const a=e.styleUrls,i=e.styles||(e.styles=[]),o=e.styles.length;a&&a.forEach((t,n)=>{i.push(""),s.push(r(t).then(r=>{i[o+n]=r,a.splice(a.indexOf(t),1),0==a.length&&(e.styleUrls=void 0)}))});const l=Promise.all(s).then(()=>function(e){Fa.delete(e)}(n));t.push(l)}),$a=new Map,Promise.all(t).then(()=>{})}().then(()=>s)};const il=new pt("AllowMultipleToken");class ol{constructor(e,t){this.name=e,this.token=t}}function ll(e,t,n=[]){const r="Platform: "+t,s=new pt(r);return(t=[])=>{let a=ul();if(!a||a.injector.get(il,!1))if(e)e(n.concat(t).concat({provide:s,useValue:!0}));else{const e=n.concat(t).concat({provide:s,useValue:!0},{provide:ya,useValue:"platform"});!function(e){if(rl&&!rl.destroyed&&!rl.injector.get(il,!1))throw new Error("There can be only one platform. Destroy the previous one to create a new one.");rl=e.get(cl);const t=e.get(Eo,null);t&&t.forEach(e=>e())}(Aa.create({providers:e,name:r}))}return function(e){const t=ul();if(!t)throw new Error("No platform exists!");if(!t.injector.get(e,null))throw new Error("A platform with a different configuration has been created. Please destroy it first.");return t}(s)}}function ul(){return rl&&!rl.destroyed?rl:null}let cl=(()=>{class e{constructor(e){this._injector=e,this._modules=[],this._destroyListeners=[],this._destroyed=!1}bootstrapModuleFactory(e,t){const n=function(e,t){let n;return n="noop"===e?new Qo:("zone.js"===e?void 0:e)||new jo({enableLongStackTrace:Rr(),shouldCoalesceEventChangeDetection:t}),n}(t?t.ngZone:void 0,t&&t.ngZoneEventCoalescing||!1),r=[{provide:jo,useValue:n}];return n.run(()=>{const t=Aa.create({providers:r,parent:this.injector,name:e.moduleType.name}),s=e.create(t),a=s.injector.get(_r,null);if(!a)throw new Error("No ErrorHandler. Is platform module (BrowserModule) included?");return s.onDestroy(()=>pl(this._modules,s)),n.runOutsideAngular(()=>n.onError.subscribe({next:e=>{a.handleError(e)}})),function(e,t,n){try{const r=n();return Za(r)?r.catch(n=>{throw t.runOutsideAngular(()=>e.handleError(n)),n}):r}catch(r){throw t.runOutsideAngular(()=>e.handleError(r)),r}}(a,n,()=>{const e=s.injector.get(Co);return e.runInitializers(),e.donePromise.then(()=>(oo(s.injector.get(Fo,"en-US")||"en-US"),this._moduleDoBootstrap(s),s))})})}bootstrapModule(e,t=[]){const n=hl({},t);return al(this.injector,n,e).then(e=>this.bootstrapModuleFactory(e,n))}_moduleDoBootstrap(e){const t=e.injector.get(dl);if(e._bootstrapComponents.length>0)e._bootstrapComponents.forEach(e=>t.bootstrap(e));else{if(!e.instance.ngDoBootstrap)throw new Error(`The module ${Ze(e.instance.constructor)} was bootstrapped, but it does not declare "@NgModule.bootstrap" components nor a "ngDoBootstrap" method. Please define one of these.`);e.instance.ngDoBootstrap(t)}this._modules.push(e)}onDestroy(e){this._destroyListeners.push(e)}get injector(){return this._injector}destroy(){if(this._destroyed)throw new Error("The platform has already been destroyed!");this._modules.slice().forEach(e=>e.destroy()),this._destroyListeners.forEach(e=>e()),this._destroyed=!0}get destroyed(){return this._destroyed}}return e.\u0275fac=function(t){return new(t||e)(St(Aa))},e.\u0275prov=Be({token:e,factory:e.\u0275fac}),e})();function hl(e,t){return Array.isArray(t)?t.reduce(hl,e):Object.assign(Object.assign({},e),t)}let dl=(()=>{class e{constructor(e,t,n,r,s,a){this._zone=e,this._console=t,this._injector=n,this._exceptionHandler=r,this._componentFactoryResolver=s,this._initStatus=a,this._bootstrapListeners=[],this._views=[],this._runningTick=!1,this._enforceNoNewChanges=!1,this._stable=!0,this.componentTypes=[],this.components=[],this._enforceNoNewChanges=Rr(),this._zone.onMicrotaskEmpty.subscribe({next:()=>{this._zone.run(()=>{this.tick()})}});const i=new J(e=>{this._stable=this._zone.isStable&&!this._zone.hasPendingMacrotasks&&!this._zone.hasPendingMicrotasks,this._zone.runOutsideAngular(()=>{e.next(this._stable),e.complete()})}),o=new J(e=>{let t;this._zone.runOutsideAngular(()=>{t=this._zone.onStable.subscribe(()=>{jo.assertNotInAngularZone(),Ho(()=>{this._stable||this._zone.hasPendingMacrotasks||this._zone.hasPendingMicrotasks||(this._stable=!0,e.next(!0))})})});const n=this._zone.onUnstable.subscribe(()=>{jo.assertInAngularZone(),this._stable&&(this._stable=!1,this._zone.runOutsideAngular(()=>{e.next(!1)}))});return()=>{t.unsubscribe(),n.unsubscribe()}});this.isStable=function(...e){let t=Number.POSITIVE_INFINITY,n=null,r=e[e.length-1];return ae(r)?(n=e.pop(),e.length>1&&"number"==typeof e[e.length-1]&&(t=e.pop())):"number"==typeof r&&(t=e.pop()),null===n&&1===e.length&&e[0]instanceof J?e[0]:Se(t)(Ie(e,n))}(i,o.pipe(e=>{return Ce()((t=Re,function(e){let n;n="function"==typeof t?t:function(){return t};const r=Object.create(e,Ee);return r.source=e,r.subjectFactory=n,r})(e));var t}))}bootstrap(e,t){if(!this._initStatus.done)throw new Error("Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.");let n;n=e instanceof bi?e:this._componentFactoryResolver.resolveComponentFactory(e),this.componentTypes.push(n.componentType);const r=n.isBoundToModule?void 0:this._injector.get(Tt),s=n.create(Aa.NULL,[],t||n.selector,r);s.onDestroy(()=>{this._unloadComponent(s)});const a=s.injector.get(el,null);return a&&s.injector.get(tl).registerApplication(s.location.nativeElement,a),this._loadComponent(s),Rr()&&this._console.log("Angular is running in the development mode. Call enableProdMode() to enable the production mode."),s}tick(){if(this._runningTick)throw new Error("ApplicationRef.tick is called recursively");try{this._runningTick=!0;for(let e of this._views)e.detectChanges();if(this._enforceNoNewChanges)for(let e of this._views)e.checkNoChanges()}catch(e){this._zone.runOutsideAngular(()=>this._exceptionHandler.handleError(e))}finally{this._runningTick=!1}}attachView(e){const t=e;this._views.push(t),t.attachToAppRef(this)}detachView(e){const t=e;pl(this._views,t),t.detachFromAppRef()}_loadComponent(e){this.attachView(e.hostView),this.tick(),this.components.push(e),this._injector.get(Ro,[]).concat(this._bootstrapListeners).forEach(t=>t(e))}_unloadComponent(e){this.detachView(e.hostView),pl(this.components,e)}ngOnDestroy(){this._views.slice().forEach(e=>e.destroy())}get viewCount(){return this._views.length}}return e.\u0275fac=function(t){return new(t||e)(St(jo),St($o),St(Aa),St(_r),St(wi),St(Co))},e.\u0275prov=Be({token:e,factory:e.\u0275fac}),e})();function pl(e,t){const n=e.indexOf(t);n>-1&&e.splice(n,1)}class fl{}class ml{}const gl={factoryPathPrefix:"",factoryPathSuffix:".ngfactory"};let yl=(()=>{class e{constructor(e,t){this._compiler=e,this._config=t||gl}load(e){return this.loadAndCompile(e)}loadAndCompile(e){let[t,r]=e.split("#");return void 0===r&&(r="default"),n("zn8P")(t).then(e=>e[r]).then(e=>bl(e,t,r)).then(e=>this._compiler.compileModuleAsync(e))}loadFactory(e){let[t,r]=e.split("#"),s="NgFactory";return void 0===r&&(r="default",s=""),n("zn8P")(this._config.factoryPathPrefix+t+this._config.factoryPathSuffix).then(e=>e[r+s]).then(e=>bl(e,t,r))}}return e.\u0275fac=function(t){return new(t||e)(St(Vo),St(ml,8))},e.\u0275prov=Be({token:e,factory:e.\u0275fac}),e})();function bl(e,t,n){if(!e)throw new Error(`Cannot find '${n}' in '${t}'`);return e}const xl=ll(null,"core",[{provide:Ao,useValue:"unknown"},{provide:cl,deps:[Aa]},{provide:tl,deps:[]},{provide:$o,deps:[]}]),wl=[{provide:dl,useClass:dl,deps:[jo,$o,Aa,_r,wi,Co]},{provide:Ji,deps:[jo],useFactory:function(e){let t=[];return e.onStable.subscribe(()=>{for(;t.length;)t.pop()()}),function(e){t.push(e)}}},{provide:Co,useClass:Co,deps:[[new Oe,Io]]},{provide:Vo,useClass:Vo,deps:[]},To,{provide:Bi,useFactory:function(){return Wi},deps:[]},{provide:Ui,useFactory:function(){return Gi},deps:[]},{provide:Fo,useFactory:function(e){return oo(e=e||"undefined"!=typeof $localize&&$localize.locale||"en-US"),e},deps:[[new De(Fo),new Oe,new Le]]},{provide:Do,useValue:"USD"}];let vl=(()=>{class e{constructor(e){}}return e.\u0275mod=Ht({type:e}),e.\u0275inj=Ue({factory:function(t){return new(t||e)(St(dl))},providers:wl}),e})();"undefined"!=typeof window&&window,"undefined"!=typeof self&&"undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope&&self,"undefined"!=typeof global&&global;let kl=null;function Sl(){return kl}const Il=new pt("DocumentToken");let Cl=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=Be({factory:Nl,token:e,providedIn:"platform"}),e})();function Nl(){return St(_l)}const Tl=new pt("Location Initialized");let _l=(()=>{class e extends Cl{constructor(e){super(),this._doc=e,this._init()}_init(){this.location=Sl().getLocation(),this._history=Sl().getHistory()}getBaseHrefFromDOM(){return Sl().getBaseHref(this._doc)}onPopState(e){Sl().getGlobalEventTarget(this._doc,"window").addEventListener("popstate",e,!1)}onHashChange(e){Sl().getGlobalEventTarget(this._doc,"window").addEventListener("hashchange",e,!1)}get href(){return this.location.href}get protocol(){return this.location.protocol}get hostname(){return this.location.hostname}get port(){return this.location.port}get pathname(){return this.location.pathname}get search(){return this.location.search}get hash(){return this.location.hash}set pathname(e){this.location.pathname=e}pushState(e,t,n){El()?this._history.pushState(e,t,n):this.location.hash=n}replaceState(e,t,n){El()?this._history.replaceState(e,t,n):this.location.hash=n}forward(){this._history.forward()}back(){this._history.back()}getState(){return this._history.state}}return e.\u0275fac=function(t){return new(t||e)(St(Il))},e.\u0275prov=Be({factory:Al,token:e,providedIn:"platform"}),e})();function El(){return!!window.history.pushState}function Al(){return new _l(St(Il))}function Rl(e,t){if(0==e.length)return t;if(0==t.length)return e;let n=0;return e.endsWith("/")&&n++,t.startsWith("/")&&n++,2==n?e+t.substring(1):1==n?e+t:e+"/"+t}function $l(e){const t=e.match(/#|\?|$/),n=t&&t.index||e.length;return e.slice(0,n-("/"===e[n-1]?1:0))+e.slice(n)}function Fl(e){return e&&"?"!==e[0]?"?"+e:e}let Dl=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=Be({factory:Ol,token:e,providedIn:"root"}),e})();function Ol(e){const t=St(Il).location;return new Ll(St(Cl),t&&t.origin||"")}const Ml=new pt("appBaseHref");let Ll=(()=>{class e extends Dl{constructor(e,t){if(super(),this._platformLocation=e,null==t&&(t=this._platformLocation.getBaseHrefFromDOM()),null==t)throw new Error("No base href set. Please provide a value for the APP_BASE_HREF token or add a base element to the document.");this._baseHref=t}onPopState(e){this._platformLocation.onPopState(e),this._platformLocation.onHashChange(e)}getBaseHref(){return this._baseHref}prepareExternalUrl(e){return Rl(this._baseHref,e)}path(e=!1){const t=this._platformLocation.pathname+Fl(this._platformLocation.search),n=this._platformLocation.hash;return n&&e?`${t}${n}`:t}pushState(e,t,n,r){const s=this.prepareExternalUrl(n+Fl(r));this._platformLocation.pushState(e,t,s)}replaceState(e,t,n,r){const s=this.prepareExternalUrl(n+Fl(r));this._platformLocation.replaceState(e,t,s)}forward(){this._platformLocation.forward()}back(){this._platformLocation.back()}}return e.\u0275fac=function(t){return new(t||e)(St(Cl),St(Ml,8))},e.\u0275prov=Be({token:e,factory:e.\u0275fac}),e})(),zl=(()=>{class e extends Dl{constructor(e,t){super(),this._platformLocation=e,this._baseHref="",null!=t&&(this._baseHref=t)}onPopState(e){this._platformLocation.onPopState(e),this._platformLocation.onHashChange(e)}getBaseHref(){return this._baseHref}path(e=!1){let t=this._platformLocation.hash;return null==t&&(t="#"),t.length>0?t.substring(1):t}prepareExternalUrl(e){const t=Rl(this._baseHref,e);return t.length>0?"#"+t:t}pushState(e,t,n,r){let s=this.prepareExternalUrl(n+Fl(r));0==s.length&&(s=this._platformLocation.pathname),this._platformLocation.pushState(e,t,s)}replaceState(e,t,n,r){let s=this.prepareExternalUrl(n+Fl(r));0==s.length&&(s=this._platformLocation.pathname),this._platformLocation.replaceState(e,t,s)}forward(){this._platformLocation.forward()}back(){this._platformLocation.back()}}return e.\u0275fac=function(t){return new(t||e)(St(Cl),St(Ml,8))},e.\u0275prov=Be({token:e,factory:e.\u0275fac}),e})(),Pl=(()=>{class e{constructor(e,t){this._subject=new ho,this._urlChangeListeners=[],this._platformStrategy=e;const n=this._platformStrategy.getBaseHref();this._platformLocation=t,this._baseHref=$l(Ul(n)),this._platformStrategy.onPopState(e=>{this._subject.emit({url:this.path(!0),pop:!0,state:e.state,type:e.type})})}path(e=!1){return this.normalize(this._platformStrategy.path(e))}getState(){return this._platformLocation.getState()}isCurrentPathEqualTo(e,t=""){return this.path()==this.normalize(e+Fl(t))}normalize(t){return e.stripTrailingSlash(function(e,t){return e&&t.startsWith(e)?t.substring(e.length):t}(this._baseHref,Ul(t)))}prepareExternalUrl(e){return e&&"/"!==e[0]&&(e="/"+e),this._platformStrategy.prepareExternalUrl(e)}go(e,t="",n=null){this._platformStrategy.pushState(n,"",e,t),this._notifyUrlChangeListeners(this.prepareExternalUrl(e+Fl(t)),n)}replaceState(e,t="",n=null){this._platformStrategy.replaceState(n,"",e,t),this._notifyUrlChangeListeners(this.prepareExternalUrl(e+Fl(t)),n)}forward(){this._platformStrategy.forward()}back(){this._platformStrategy.back()}onUrlChange(e){this._urlChangeListeners.push(e),this.subscribe(e=>{this._notifyUrlChangeListeners(e.url,e.state)})}_notifyUrlChangeListeners(e="",t){this._urlChangeListeners.forEach(n=>n(e,t))}subscribe(e,t,n){return this._subject.subscribe({next:e,error:t,complete:n})}}return e.\u0275fac=function(t){return new(t||e)(St(Dl),St(Cl))},e.normalizeQueryParams=Fl,e.joinWithSlash=Rl,e.stripTrailingSlash=$l,e.\u0275prov=Be({factory:Bl,token:e,providedIn:"root"}),e})();function Bl(){return new Pl(St(Dl),St(Cl))}function Ul(e){return e.replace(/\/index.html$/,"")}const Vl=function(){var e={Zero:0,One:1,Two:2,Few:3,Many:4,Other:5};return e[e.Zero]="Zero",e[e.One]="One",e[e.Two]="Two",e[e.Few]="Few",e[e.Many]="Many",e[e.Other]="Other",e}();class Wl{}let Gl=(()=>{class e extends Wl{constructor(e){super(),this.locale=e}getPluralCategory(e,t){switch(function(e){return function(e){const t=function(e){return e.toLowerCase().replace(/_/g,"-")}(e);let n=so(t);if(n)return n;const r=t.split("-")[0];if(n=so(r),n)return n;if("en"===r)return no;throw new Error(`Missing locale data for the locale "${e}".`)}(e)[ao.PluralCase]}(t||this.locale)(e)){case Vl.Zero:return"zero";case Vl.One:return"one";case Vl.Two:return"two";case Vl.Few:return"few";case Vl.Many:return"many";default:return"other"}}}return e.\u0275fac=function(t){return new(t||e)(St(Fo))},e.\u0275prov=Be({token:e,factory:e.\u0275fac}),e})(),Hl=(()=>{class e{constructor(e,t,n,r){this._iterableDiffers=e,this._keyValueDiffers=t,this._ngEl=n,this._renderer=r,this._iterableDiffer=null,this._keyValueDiffer=null,this._initialClasses=[],this._rawClass=null}set klass(e){this._removeClasses(this._initialClasses),this._initialClasses="string"==typeof e?e.split(/\s+/):[],this._applyClasses(this._initialClasses),this._applyClasses(this._rawClass)}set ngClass(e){this._removeClasses(this._rawClass),this._applyClasses(this._initialClasses),this._iterableDiffer=null,this._keyValueDiffer=null,this._rawClass="string"==typeof e?e.split(/\s+/):e,this._rawClass&&(Pa(this._rawClass)?this._iterableDiffer=this._iterableDiffers.find(this._rawClass).create():this._keyValueDiffer=this._keyValueDiffers.find(this._rawClass).create())}ngDoCheck(){if(this._iterableDiffer){const e=this._iterableDiffer.diff(this._rawClass);e&&this._applyIterableChanges(e)}else if(this._keyValueDiffer){const e=this._keyValueDiffer.diff(this._rawClass);e&&this._applyKeyValueChanges(e)}}_applyKeyValueChanges(e){e.forEachAddedItem(e=>this._toggleClass(e.key,e.currentValue)),e.forEachChangedItem(e=>this._toggleClass(e.key,e.currentValue)),e.forEachRemovedItem(e=>{e.previousValue&&this._toggleClass(e.key,!1)})}_applyIterableChanges(e){e.forEachAddedItem(e=>{if("string"!=typeof e.item)throw new Error("NgClass can only toggle CSS classes expressed as strings, got "+Ze(e.item));this._toggleClass(e.item,!0)}),e.forEachRemovedItem(e=>this._toggleClass(e.item,!1))}_applyClasses(e){e&&(Array.isArray(e)||e instanceof Set?e.forEach(e=>this._toggleClass(e,!0)):Object.keys(e).forEach(t=>this._toggleClass(t,!!e[t])))}_removeClasses(e){e&&(Array.isArray(e)||e instanceof Set?e.forEach(e=>this._toggleClass(e,!1)):Object.keys(e).forEach(e=>this._toggleClass(e,!1)))}_toggleClass(e,t){(e=e.trim())&&e.split(/\s+/g).forEach(e=>{t?this._renderer.addClass(this._ngEl.nativeElement,e):this._renderer.removeClass(this._ngEl.nativeElement,e)})}}return e.\u0275fac=function(t){return new(t||e)(Wa(Bi),Wa(Ui),Wa(vi),Wa(Ci))},e.\u0275dir=qt({type:e,selectors:[["","ngClass",""]],inputs:{klass:["class","klass"],ngClass:"ngClass"}}),e})(),jl=(()=>{class e{}return e.\u0275mod=Ht({type:e}),e.\u0275inj=Ue({factory:function(t){return new(t||e)},providers:[{provide:Wl,useClass:Gl}]}),e})(),ql=(()=>{class e{}return e.\u0275prov=Be({token:e,providedIn:"root",factory:()=>new Kl(St(Il),window,St(_r))}),e})();class Kl{constructor(e,t,n){this.document=e,this.window=t,this.errorHandler=n,this.offset=()=>[0,0]}setOffset(e){this.offset=Array.isArray(e)?()=>e:e}getScrollPosition(){return this.supportScrollRestoration()?[this.window.scrollX,this.window.scrollY]:[0,0]}scrollToPosition(e){this.supportScrollRestoration()&&this.window.scrollTo(e[0],e[1])}scrollToAnchor(e){if(this.supportScrollRestoration()){e=this.window.CSS&&this.window.CSS.escape?this.window.CSS.escape(e):e.replace(/(\"|\'\ |:|\.|\[|\]|,|=)/g,"\\$1");try{const t=this.document.querySelector("#"+e);if(t)return void this.scrollToElement(t);const n=this.document.querySelector(`[name='${e}']`);if(n)return void this.scrollToElement(n)}catch(t){this.errorHandler.handleError(t)}}}setHistoryScrollRestoration(e){if(this.supportScrollRestoration()){const t=this.window.history;t&&t.scrollRestoration&&(t.scrollRestoration=e)}}scrollToElement(e){const t=e.getBoundingClientRect(),n=t.left+this.window.pageXOffset,r=t.top+this.window.pageYOffset,s=this.offset();this.window.scrollTo(n-s[0],r-s[1])}supportScrollRestoration(){try{return!!this.window&&!!this.window.scrollTo}catch(e){return!1}}}class Xl extends class extends class{}{constructor(){super()}supportsDOMEvents(){return!0}}{static makeCurrent(){var e;e=new Xl,kl||(kl=e)}getProperty(e,t){return e[t]}log(e){window.console&&window.console.log&&window.console.log(e)}logGroup(e){window.console&&window.console.group&&window.console.group(e)}logGroupEnd(){window.console&&window.console.groupEnd&&window.console.groupEnd()}onAndCancel(e,t,n){return e.addEventListener(t,n,!1),()=>{e.removeEventListener(t,n,!1)}}dispatchEvent(e,t){e.dispatchEvent(t)}remove(e){return e.parentNode&&e.parentNode.removeChild(e),e}getValue(e){return e.value}createElement(e,t){return(t=t||this.getDefaultDocument()).createElement(e)}createHtmlDocument(){return document.implementation.createHTMLDocument("fakeTitle")}getDefaultDocument(){return document}isElementNode(e){return e.nodeType===Node.ELEMENT_NODE}isShadowRoot(e){return e instanceof DocumentFragment}getGlobalEventTarget(e,t){return"window"===t?window:"document"===t?e:"body"===t?e.body:null}getHistory(){return window.history}getLocation(){return window.location}getBaseHref(e){const t=Yl||(Yl=document.querySelector("base"),Yl)?Yl.getAttribute("href"):null;return null==t?null:(n=t,Zl||(Zl=document.createElement("a")),Zl.setAttribute("href",n),"/"===Zl.pathname.charAt(0)?Zl.pathname:"/"+Zl.pathname);var n}resetBaseElement(){Yl=null}getUserAgent(){return window.navigator.userAgent}performanceNow(){return window.performance&&window.performance.now?window.performance.now():(new Date).getTime()}supportsCookies(){return!0}getCookie(e){return function(e,t){t=encodeURIComponent(t);for(const n of e.split(";")){const e=n.indexOf("="),[r,s]=-1==e?[n,""]:[n.slice(0,e),n.slice(e+1)];if(r.trim()===t)return decodeURIComponent(s)}return null}(document.cookie,e)}}let Zl,Yl=null;const Jl=new pt("TRANSITION_ID"),Ql=[{provide:Io,useFactory:function(e,t,n){return()=>{n.get(Co).donePromise.then(()=>{const n=Sl();Array.prototype.slice.apply(t.querySelectorAll("style[ng-transition]")).filter(t=>t.getAttribute("ng-transition")===e).forEach(e=>n.remove(e))})}},deps:[Jl,Il,Aa],multi:!0}];class eu{static init(){var e;e=new eu,sl=e}addToWindow(e){at.getAngularTestability=(t,n=!0)=>{const r=e.findTestabilityInTree(t,n);if(null==r)throw new Error("Could not find testability for element.");return r},at.getAllAngularTestabilities=()=>e.getAllTestabilities(),at.getAllAngularRootElements=()=>e.getAllRootElements(),at.frameworkStabilizers||(at.frameworkStabilizers=[]),at.frameworkStabilizers.push(e=>{const t=at.getAllAngularTestabilities();let n=t.length,r=!1;const s=function(t){r=r||t,n--,0==n&&e(r)};t.forEach((function(e){e.whenStable(s)}))})}findTestabilityInTree(e,t,n){if(null==t)return null;const r=e.getTestability(t);return null!=r?r:n?Sl().isShadowRoot(t)?this.findTestabilityInTree(e,t.host,!0):this.findTestabilityInTree(e,t.parentElement,!0):null}}const tu=new pt("EventManagerPlugins");let nu=(()=>{class e{constructor(e,t){this._zone=t,this._eventNameToPlugin=new Map,e.forEach(e=>e.manager=this),this._plugins=e.slice().reverse()}addEventListener(e,t,n){return this._findPluginFor(t).addEventListener(e,t,n)}addGlobalEventListener(e,t,n){return this._findPluginFor(t).addGlobalEventListener(e,t,n)}getZone(){return this._zone}_findPluginFor(e){const t=this._eventNameToPlugin.get(e);if(t)return t;const n=this._plugins;for(let r=0;r<n.length;r++){const t=n[r];if(t.supports(e))return this._eventNameToPlugin.set(e,t),t}throw new Error("No event manager plugin found for event "+e)}}return e.\u0275fac=function(t){return new(t||e)(St(tu),St(jo))},e.\u0275prov=Be({token:e,factory:e.\u0275fac}),e})();class ru{constructor(e){this._doc=e}addGlobalEventListener(e,t,n){const r=Sl().getGlobalEventTarget(this._doc,e);if(!r)throw new Error(`Unsupported event target ${r} for event ${t}`);return this.addEventListener(r,t,n)}}let su=(()=>{class e{constructor(){this._stylesSet=new Set}addStyles(e){const t=new Set;e.forEach(e=>{this._stylesSet.has(e)||(this._stylesSet.add(e),t.add(e))}),this.onStylesAdded(t)}onStylesAdded(e){}getAllStyles(){return Array.from(this._stylesSet)}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=Be({token:e,factory:e.\u0275fac}),e})(),au=(()=>{class e extends su{constructor(e){super(),this._doc=e,this._hostNodes=new Set,this._styleNodes=new Set,this._hostNodes.add(e.head)}_addStylesToHost(e,t){e.forEach(e=>{const n=this._doc.createElement("style");n.textContent=e,this._styleNodes.add(t.appendChild(n))})}addHost(e){this._addStylesToHost(this._stylesSet,e),this._hostNodes.add(e)}removeHost(e){this._hostNodes.delete(e)}onStylesAdded(e){this._hostNodes.forEach(t=>this._addStylesToHost(e,t))}ngOnDestroy(){this._styleNodes.forEach(e=>Sl().remove(e))}}return e.\u0275fac=function(t){return new(t||e)(St(Il))},e.\u0275prov=Be({token:e,factory:e.\u0275fac}),e})();const iu={svg:"http://www.w3.org/2000/svg",xhtml:"http://www.w3.org/1999/xhtml",xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"},ou=/%COMP%/g;function lu(e,t,n){for(let r=0;r<t.length;r++){let s=t[r];Array.isArray(s)?lu(e,s,n):(s=s.replace(ou,e),n.push(s))}return n}function uu(e){return t=>{if("__ngUnwrap__"===t)return e;!1===e(t)&&(t.preventDefault(),t.returnValue=!1)}}let cu=(()=>{class e{constructor(e,t,n){this.eventManager=e,this.sharedStylesHost=t,this.appId=n,this.rendererByCompId=new Map,this.defaultRenderer=new hu(e)}createRenderer(e,t){if(!e||!t)return this.defaultRenderer;switch(t.encapsulation){case Lt.Emulated:{let n=this.rendererByCompId.get(t.id);return n||(n=new du(this.eventManager,this.sharedStylesHost,t,this.appId),this.rendererByCompId.set(t.id,n)),n.applyToHost(e),n}case Lt.Native:case Lt.ShadowDom:return new pu(this.eventManager,this.sharedStylesHost,e,t);default:if(!this.rendererByCompId.has(t.id)){const e=lu(t.id,t.styles,[]);this.sharedStylesHost.addStyles(e),this.rendererByCompId.set(t.id,this.defaultRenderer)}return this.defaultRenderer}}begin(){}end(){}}return e.\u0275fac=function(t){return new(t||e)(St(nu),St(au),St(No))},e.\u0275prov=Be({token:e,factory:e.\u0275fac}),e})();class hu{constructor(e){this.eventManager=e,this.data=Object.create(null)}destroy(){}createElement(e,t){return t?document.createElementNS(iu[t]||t,e):document.createElement(e)}createComment(e){return document.createComment(e)}createText(e){return document.createTextNode(e)}appendChild(e,t){e.appendChild(t)}insertBefore(e,t,n){e&&e.insertBefore(t,n)}removeChild(e,t){e&&e.removeChild(t)}selectRootElement(e,t){let n="string"==typeof e?document.querySelector(e):e;if(!n)throw new Error(`The selector "${e}" did not match any elements`);return t||(n.textContent=""),n}parentNode(e){return e.parentNode}nextSibling(e){return e.nextSibling}setAttribute(e,t,n,r){if(r){t=r+":"+t;const s=iu[r];s?e.setAttributeNS(s,t,n):e.setAttribute(t,n)}else e.setAttribute(t,n)}removeAttribute(e,t,n){if(n){const r=iu[n];r?e.removeAttributeNS(r,t):e.removeAttribute(`${n}:${t}`)}else e.removeAttribute(t)}addClass(e,t){e.classList.add(t)}removeClass(e,t){e.classList.remove(t)}setStyle(e,t,n,r){r&Ii.DashCase?e.style.setProperty(t,n,r&Ii.Important?"important":""):e.style[t]=n}removeStyle(e,t,n){n&Ii.DashCase?e.style.removeProperty(t):e.style[t]=""}setProperty(e,t,n){e[t]=n}setValue(e,t){e.nodeValue=t}listen(e,t,n){return"string"==typeof e?this.eventManager.addGlobalEventListener(e,t,uu(n)):this.eventManager.addEventListener(e,t,uu(n))}}class du extends hu{constructor(e,t,n,r){super(e),this.component=n;const s=lu(r+"-"+n.id,n.styles,[]);t.addStyles(s),this.contentAttr="_ngcontent-%COMP%".replace(ou,r+"-"+n.id),this.hostAttr=function(e){return"_nghost-%COMP%".replace(ou,e)}(r+"-"+n.id)}applyToHost(e){super.setAttribute(e,this.hostAttr,"")}createElement(e,t){const n=super.createElement(e,t);return super.setAttribute(n,this.contentAttr,""),n}}class pu extends hu{constructor(e,t,n,r){super(e),this.sharedStylesHost=t,this.hostEl=n,this.component=r,this.shadowRoot=r.encapsulation===Lt.ShadowDom?n.attachShadow({mode:"open"}):n.createShadowRoot(),this.sharedStylesHost.addHost(this.shadowRoot);const s=lu(r.id,r.styles,[]);for(let a=0;a<s.length;a++){const e=document.createElement("style");e.textContent=s[a],this.shadowRoot.appendChild(e)}}nodeOrShadowRoot(e){return e===this.hostEl?this.shadowRoot:e}destroy(){this.sharedStylesHost.removeHost(this.shadowRoot)}appendChild(e,t){return super.appendChild(this.nodeOrShadowRoot(e),t)}insertBefore(e,t,n){return super.insertBefore(this.nodeOrShadowRoot(e),t,n)}removeChild(e,t){return super.removeChild(this.nodeOrShadowRoot(e),t)}parentNode(e){return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(e)))}}let fu=(()=>{class e extends ru{constructor(e){super(e)}supports(e){return!0}addEventListener(e,t,n){return e.addEventListener(t,n,!1),()=>this.removeEventListener(e,t,n)}removeEventListener(e,t,n){return e.removeEventListener(t,n)}}return e.\u0275fac=function(t){return new(t||e)(St(Il))},e.\u0275prov=Be({token:e,factory:e.\u0275fac}),e})();const mu=["alt","control","meta","shift"],gu={"\b":"Backspace","\t":"Tab","\x7f":"Delete","\x1b":"Escape",Del:"Delete",Esc:"Escape",Left:"ArrowLeft",Right:"ArrowRight",Up:"ArrowUp",Down:"ArrowDown",Menu:"ContextMenu",Scroll:"ScrollLock",Win:"OS"},yu={A:"1",B:"2",C:"3",D:"4",E:"5",F:"6",G:"7",H:"8",I:"9",J:"*",K:"+",M:"-",N:".",O:"/","`":"0","\x90":"NumLock"},bu={alt:e=>e.altKey,control:e=>e.ctrlKey,meta:e=>e.metaKey,shift:e=>e.shiftKey};let xu=(()=>{class e extends ru{constructor(e){super(e)}supports(t){return null!=e.parseEventName(t)}addEventListener(t,n,r){const s=e.parseEventName(n),a=e.eventCallback(s.fullKey,r,this.manager.getZone());return this.manager.getZone().runOutsideAngular(()=>Sl().onAndCancel(t,s.domEventName,a))}static parseEventName(t){const n=t.toLowerCase().split("."),r=n.shift();if(0===n.length||"keydown"!==r&&"keyup"!==r)return null;const s=e._normalizeKey(n.pop());let a="";if(mu.forEach(e=>{const t=n.indexOf(e);t>-1&&(n.splice(t,1),a+=e+".")}),a+=s,0!=n.length||0===s.length)return null;const i={};return i.domEventName=r,i.fullKey=a,i}static getEventFullKey(e){let t="",n=function(e){let t=e.key;if(null==t){if(t=e.keyIdentifier,null==t)return"Unidentified";t.startsWith("U+")&&(t=String.fromCharCode(parseInt(t.substring(2),16)),3===e.location&&yu.hasOwnProperty(t)&&(t=yu[t]))}return gu[t]||t}(e);return n=n.toLowerCase()," "===n?n="space":"."===n&&(n="dot"),mu.forEach(r=>{r!=n&&(0,bu[r])(e)&&(t+=r+".")}),t+=n,t}static eventCallback(t,n,r){return s=>{e.getEventFullKey(s)===t&&r.runGuarded(()=>n(s))}}static _normalizeKey(e){switch(e){case"esc":return"escape";default:return e}}}return e.\u0275fac=function(t){return new(t||e)(St(Il))},e.\u0275prov=Be({token:e,factory:e.\u0275fac}),e})();const wu=ll(xl,"browser",[{provide:Ao,useValue:"browser"},{provide:Eo,useValue:function(){Xl.makeCurrent(),eu.init()},multi:!0},{provide:Il,useFactory:function(){return function(e){sn=e}(document),document},deps:[]}]),vu=[[],{provide:ya,useValue:"root"},{provide:_r,useFactory:function(){return new _r},deps:[]},{provide:tu,useClass:fu,multi:!0,deps:[Il,jo,Ao]},{provide:tu,useClass:xu,multi:!0,deps:[Il]},[],{provide:cu,useClass:cu,deps:[nu,au,No]},{provide:Si,useExisting:cu},{provide:su,useExisting:au},{provide:au,useClass:au,deps:[Il]},{provide:el,useClass:el,deps:[jo]},{provide:nu,useClass:nu,deps:[tu,jo]},[]];let ku=(()=>{class e{constructor(e){if(e)throw new Error("BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.")}static withServerTransition(t){return{ngModule:e,providers:[{provide:No,useValue:t.appId},{provide:Jl,useExisting:No},Ql]}}}return e.\u0275mod=Ht({type:e}),e.\u0275inj=Ue({factory:function(t){return new(t||e)(St(e,12))},providers:vu,imports:[jl,vl]}),e})();function Su(...e){let t=e[e.length-1];return ae(t)?(e.pop(),be(e,t)):Ie(e)}"undefined"!=typeof window&&window;class Iu extends re{constructor(e){super(),this._value=e}get value(){return this.getValue()}_subscribe(e){const t=super._subscribe(e);return t&&!t.closed&&e.next(this._value),t}getValue(){if(this.hasError)throw this.thrownError;if(this.closed)throw new ee;return this._value}next(e){super.next(this._value=e)}}const Cu=(()=>{function e(){return Error.call(this),this.message="no elements in sequence",this.name="EmptyError",this}return e.prototype=Object.create(Error.prototype),e})(),Nu={};class Tu{constructor(e){this.resultSelector=e}call(e,t){return t.subscribe(new _u(e,this.resultSelector))}}class _u extends fe{constructor(e,t){super(e),this.resultSelector=t,this.active=0,this.values=[],this.observables=[]}_next(e){this.values.push(Nu),this.observables.push(e)}_complete(){const e=this.observables,t=e.length;if(0===t)this.destination.complete();else{this.active=t,this.toRespond=t;for(let n=0;n<t;n++){const t=e[n];this.add(pe(this,t,t,n))}}}notifyComplete(e){0==(this.active-=1)&&this.destination.complete()}notifyNext(e,t,n,r,s){const a=this.values,i=this.toRespond?a[n]===Nu?--this.toRespond:this.toRespond:0;a[n]=t,0===i&&(this.resultSelector?this._tryResultSelector(a):this.destination.next(a.slice()))}_tryResultSelector(e){let t;try{t=this.resultSelector.apply(this,e)}catch(n){return void this.destination.error(n)}this.destination.next(t)}}const Eu=new J(e=>e.complete());function Au(e){return e?function(e){return new J(t=>e.schedule(()=>t.complete()))}(e):Eu}function Ru(e){return new J(t=>{let n;try{n=e()}catch(r){return void t.error(r)}return(n?xe(n):Au()).subscribe(t)})}function $u(){return Se(1)}function Fu(e,t){return function(n){return n.lift(new Du(e,t))}}class Du{constructor(e,t){this.predicate=e,this.thisArg=t}call(e,t){return t.subscribe(new Ou(e,this.predicate,this.thisArg))}}class Ou extends j{constructor(e,t,n){super(e),this.predicate=t,this.thisArg=n,this.count=0}_next(e){let t;try{t=this.predicate.call(this.thisArg,e,this.count++)}catch(n){return void this.destination.error(n)}t&&this.destination.next(e)}}const Mu=(()=>{function e(){return Error.call(this),this.message="argument out of range",this.name="ArgumentOutOfRangeError",this}return e.prototype=Object.create(Error.prototype),e})();function Lu(e){return function(t){return 0===e?Au():t.lift(new zu(e))}}class zu{constructor(e){if(this.total=e,this.total<0)throw new Mu}call(e,t){return t.subscribe(new Pu(e,this.total))}}class Pu extends j{constructor(e,t){super(e),this.total=t,this.ring=new Array,this.count=0}_next(e){const t=this.ring,n=this.total,r=this.count++;t.length<n?t.push(e):t[r%n]=e}_complete(){const e=this.destination;let t=this.count;if(t>0){const n=this.count>=this.total?this.total:this.count,r=this.ring;for(let s=0;s<n;s++){const s=t++%n;e.next(r[s])}}e.complete()}}function Bu(e=Wu){return t=>t.lift(new Uu(e))}class Uu{constructor(e){this.errorFactory=e}call(e,t){return t.subscribe(new Vu(e,this.errorFactory))}}class Vu extends j{constructor(e,t){super(e),this.errorFactory=t,this.hasValue=!1}_next(e){this.hasValue=!0,this.destination.next(e)}_complete(){if(this.hasValue)return this.destination.complete();{let t;try{t=this.errorFactory()}catch(e){t=e}this.destination.error(t)}}}function Wu(){return new Cu}function Gu(e=null){return t=>t.lift(new Hu(e))}class Hu{constructor(e){this.defaultValue=e}call(e,t){return t.subscribe(new ju(e,this.defaultValue))}}class ju extends j{constructor(e,t){super(e),this.defaultValue=t,this.isEmpty=!0}_next(e){this.isEmpty=!1,this.destination.next(e)}_complete(){this.isEmpty&&this.destination.next(this.defaultValue),this.destination.complete()}}function qu(e,t){const n=arguments.length>=2;return r=>r.pipe(e?Fu((t,n)=>e(t,n,r)):X,Lu(1),n?Gu(t):Bu(()=>new Cu))}function Ku(e){return function(t){const n=new Xu(e),r=t.lift(n);return n.caught=r}}class Xu{constructor(e){this.selector=e}call(e,t){return t.subscribe(new Zu(e,this.selector,this.caught))}}class Zu extends fe{constructor(e,t,n){super(e),this.selector=t,this.caught=n}error(e){if(!this.isStopped){let n;try{n=this.selector(e,this.caught)}catch(t){return void super.error(t)}this._unsubscribeAndRecycle();const r=new ie(this,void 0,void 0);this.add(r);const s=pe(this,n,void 0,void 0,r);s!==r&&this.add(s)}}}function Yu(e){return t=>0===e?Au():t.lift(new Ju(e))}class Ju{constructor(e){if(this.total=e,this.total<0)throw new Mu}call(e,t){return t.subscribe(new Qu(e,this.total))}}class Qu extends j{constructor(e,t){super(e),this.total=t,this.count=0}_next(e){const t=this.total,n=++this.count;n<=t&&(this.destination.next(e),n===t&&(this.destination.complete(),this.unsubscribe()))}}function ec(e,t){const n=arguments.length>=2;return r=>r.pipe(e?Fu((t,n)=>e(t,n,r)):X,Yu(1),n?Gu(t):Bu(()=>new Cu))}class tc{constructor(e,t,n){this.predicate=e,this.thisArg=t,this.source=n}call(e,t){return t.subscribe(new nc(e,this.predicate,this.thisArg,this.source))}}class nc extends j{constructor(e,t,n,r){super(e),this.predicate=t,this.thisArg=n,this.source=r,this.index=0,this.thisArg=n||this}notifyComplete(e){this.destination.next(e),this.destination.complete()}_next(e){let t=!1;try{t=this.predicate.call(this.thisArg,e,this.index++,this.source)}catch(n){return void this.destination.error(n)}t||this.notifyComplete(!1)}_complete(){this.notifyComplete(!0)}}function rc(e,t){return"function"==typeof t?n=>n.pipe(rc((n,r)=>xe(e(n,r)).pipe(me((e,s)=>t(n,e,r,s))))):t=>t.lift(new sc(e))}class sc{constructor(e){this.project=e}call(e,t){return t.subscribe(new ac(e,this.project))}}class ac extends fe{constructor(e,t){super(e),this.project=t,this.index=0}_next(e){let t;const n=this.index++;try{t=this.project(e,n)}catch(r){return void this.destination.error(r)}this._innerSub(t,e,n)}_innerSub(e,t,n){const r=this.innerSubscription;r&&r.unsubscribe();const s=new ie(this,t,n),a=this.destination;a.add(s),this.innerSubscription=pe(this,e,void 0,void 0,s),this.innerSubscription!==s&&a.add(this.innerSubscription)}_complete(){const{innerSubscription:e}=this;e&&!e.closed||super._complete(),this.unsubscribe()}_unsubscribe(){this.innerSubscription=null}notifyComplete(e){this.destination.remove(e),this.innerSubscription=null,this.isStopped&&super._complete()}notifyNext(e,t,n,r,s){this.destination.next(t)}}function ic(...e){return $u()(Su(...e))}function oc(e,t){let n=!1;return arguments.length>=2&&(n=!0),function(r){return r.lift(new lc(e,t,n))}}class lc{constructor(e,t,n=!1){this.accumulator=e,this.seed=t,this.hasSeed=n}call(e,t){return t.subscribe(new uc(e,this.accumulator,this.seed,this.hasSeed))}}class uc extends j{constructor(e,t,n,r){super(e),this.accumulator=t,this._seed=n,this.hasSeed=r,this.index=0}get seed(){return this._seed}set seed(e){this.hasSeed=!0,this._seed=e}_next(e){if(this.hasSeed)return this._tryNext(e);this.seed=e,this.destination.next(e)}_tryNext(e){const t=this.index++;let n;try{n=this.accumulator(this.seed,e,t)}catch(r){this.destination.error(r)}this.seed=n,this.destination.next(n)}}function cc(e,t){return we(e,t,1)}function hc(){}function dc(e,t,n){return function(r){return r.lift(new pc(e,t,n))}}class pc{constructor(e,t,n){this.nextOrObserver=e,this.error=t,this.complete=n}call(e,t){return t.subscribe(new fc(e,this.nextOrObserver,this.error,this.complete))}}class fc extends j{constructor(e,t,n,r){super(e),this._tapNext=hc,this._tapError=hc,this._tapComplete=hc,this._tapError=n||hc,this._tapComplete=r||hc,O(t)?(this._context=this,this._tapNext=t):t&&(this._context=t,this._tapNext=t.next||hc,this._tapError=t.error||hc,this._tapComplete=t.complete||hc)}_next(e){try{this._tapNext.call(this._context,e)}catch(t){return void this.destination.error(t)}this.destination.next(e)}_error(e){try{this._tapError.call(this._context,e)}catch(e){return void this.destination.error(e)}this.destination.error(e)}_complete(){try{this._tapComplete.call(this._context)}catch(e){return void this.destination.error(e)}return this.destination.complete()}}class mc{constructor(e){this.callback=e}call(e,t){return t.subscribe(new gc(e,this.callback))}}class gc extends j{constructor(e,t){super(e),this.add(new W(t))}}class yc{constructor(e,t){this.id=e,this.url=t}}class bc extends yc{constructor(e,t,n="imperative",r=null){super(e,t),this.navigationTrigger=n,this.restoredState=r}toString(){return`NavigationStart(id: ${this.id}, url: '${this.url}')`}}class xc extends yc{constructor(e,t,n){super(e,t),this.urlAfterRedirects=n}toString(){return`NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`}}class wc extends yc{constructor(e,t,n){super(e,t),this.reason=n}toString(){return`NavigationCancel(id: ${this.id}, url: '${this.url}')`}}class vc extends yc{constructor(e,t,n){super(e,t),this.error=n}toString(){return`NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`}}class kc extends yc{constructor(e,t,n,r){super(e,t),this.urlAfterRedirects=n,this.state=r}toString(){return`RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`}}class Sc extends yc{constructor(e,t,n,r){super(e,t),this.urlAfterRedirects=n,this.state=r}toString(){return`GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`}}class Ic extends yc{constructor(e,t,n,r,s){super(e,t),this.urlAfterRedirects=n,this.state=r,this.shouldActivate=s}toString(){return`GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`}}class Cc extends yc{constructor(e,t,n,r){super(e,t),this.urlAfterRedirects=n,this.state=r}toString(){return`ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`}}class Nc extends yc{constructor(e,t,n,r){super(e,t),this.urlAfterRedirects=n,this.state=r}toString(){return`ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`}}class Tc{constructor(e){this.route=e}toString(){return`RouteConfigLoadStart(path: ${this.route.path})`}}class _c{constructor(e){this.route=e}toString(){return`RouteConfigLoadEnd(path: ${this.route.path})`}}class Ec{constructor(e){this.snapshot=e}toString(){return`ChildActivationStart(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`}}class Ac{constructor(e){this.snapshot=e}toString(){return`ChildActivationEnd(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`}}class Rc{constructor(e){this.snapshot=e}toString(){return`ActivationStart(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`}}class $c{constructor(e){this.snapshot=e}toString(){return`ActivationEnd(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`}}class Fc{constructor(e,t,n){this.routerEvent=e,this.position=t,this.anchor=n}toString(){return`Scroll(anchor: '${this.anchor}', position: '${this.position?`${this.position[0]}, ${this.position[1]}`:null}')`}}let Dc=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=Ut({type:e,selectors:[["ng-component"]],decls:1,vars:0,template:function(e,t){1&e&&Xa(0,"router-outlet")},directives:function(){return[Od]},encapsulation:2}),e})();class Oc{constructor(e){this.params=e||{}}has(e){return this.params.hasOwnProperty(e)}get(e){if(this.has(e)){const t=this.params[e];return Array.isArray(t)?t[0]:t}return null}getAll(e){if(this.has(e)){const t=this.params[e];return Array.isArray(t)?t:[t]}return[]}get keys(){return Object.keys(this.params)}}function Mc(e){return new Oc(e)}function Lc(e){const t=Error("NavigationCancelingError: "+e);return t.ngNavigationCancelingError=!0,t}function zc(e,t,n){const r=n.path.split("/");if(r.length>e.length)return null;if("full"===n.pathMatch&&(t.hasChildren()||r.length<e.length))return null;const s={};for(let a=0;a<r.length;a++){const t=r[a],n=e[a];if(t.startsWith(":"))s[t.substring(1)]=n;else if(t!==n.path)return null}return{consumed:e.slice(0,r.length),posParams:s}}class Pc{constructor(e,t){this.routes=e,this.module=t}}function Bc(e,t=""){for(let n=0;n<e.length;n++){const r=e[n];Uc(r,Vc(t,r))}}function Uc(e,t){if(!e)throw new Error(`\n      Invalid configuration of route '${t}': Encountered undefined route.\n      The reason might be an extra comma.\n\n      Example:\n      const routes: Routes = [\n        { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\n        { path: 'dashboard',  component: DashboardComponent },, << two commas\n        { path: 'detail/:id', component: HeroDetailComponent }\n      ];\n    `);if(Array.isArray(e))throw new Error(`Invalid configuration of route '${t}': Array cannot be specified`);if(!e.component&&!e.children&&!e.loadChildren&&e.outlet&&"primary"!==e.outlet)throw new Error(`Invalid configuration of route '${t}': a componentless route without children or loadChildren cannot have a named outlet set`);if(e.redirectTo&&e.children)throw new Error(`Invalid configuration of route '${t}': redirectTo and children cannot be used together`);if(e.redirectTo&&e.loadChildren)throw new Error(`Invalid configuration of route '${t}': redirectTo and loadChildren cannot be used together`);if(e.children&&e.loadChildren)throw new Error(`Invalid configuration of route '${t}': children and loadChildren cannot be used together`);if(e.redirectTo&&e.component)throw new Error(`Invalid configuration of route '${t}': redirectTo and component cannot be used together`);if(e.path&&e.matcher)throw new Error(`Invalid configuration of route '${t}': path and matcher cannot be used together`);if(void 0===e.redirectTo&&!e.component&&!e.children&&!e.loadChildren)throw new Error(`Invalid configuration of route '${t}'. One of the following must be provided: component, redirectTo, children or loadChildren`);if(void 0===e.path&&void 0===e.matcher)throw new Error(`Invalid configuration of route '${t}': routes must have either a path or a matcher specified`);if("string"==typeof e.path&&"/"===e.path.charAt(0))throw new Error(`Invalid configuration of route '${t}': path cannot start with a slash`);if(""===e.path&&void 0!==e.redirectTo&&void 0===e.pathMatch)throw new Error(`Invalid configuration of route '{path: "${t}", redirectTo: "${e.redirectTo}"}': please provide 'pathMatch'. The default value of 'pathMatch' is 'prefix', but often the intent is to use 'full'.`);if(void 0!==e.pathMatch&&"full"!==e.pathMatch&&"prefix"!==e.pathMatch)throw new Error(`Invalid configuration of route '${t}': pathMatch can only be set to 'prefix' or 'full'`);e.children&&Bc(e.children,t)}function Vc(e,t){return t?e||t.path?e&&!t.path?e+"/":!e&&t.path?t.path:`${e}/${t.path}`:"":e}function Wc(e){const t=e.children&&e.children.map(Wc),n=t?Object.assign(Object.assign({},e),{children:t}):Object.assign({},e);return!n.component&&(t||n.loadChildren)&&n.outlet&&"primary"!==n.outlet&&(n.component=Dc),n}function Gc(e,t){const n=Object.keys(e),r=Object.keys(t);if(!n||!r||n.length!=r.length)return!1;let s;for(let a=0;a<n.length;a++)if(s=n[a],!Hc(e[s],t[s]))return!1;return!0}function Hc(e,t){return Array.isArray(e)&&Array.isArray(t)?e.length==t.length&&e.every(e=>t.indexOf(e)>-1):e===t}function jc(e){return Array.prototype.concat.apply([],e)}function qc(e){return e.length>0?e[e.length-1]:null}function Kc(e,t){for(const n in e)e.hasOwnProperty(n)&&t(e[n],n)}function Xc(e){return(t=e)&&"function"==typeof t.subscribe?e:Za(e)?xe(Promise.resolve(e)):Su(e);var t}function Zc(e,t,n){return n?function(e,t){return Gc(e,t)}(e.queryParams,t.queryParams)&&function e(t,n){if(!eh(t.segments,n.segments))return!1;if(t.numberOfChildren!==n.numberOfChildren)return!1;for(const r in n.children){if(!t.children[r])return!1;if(!e(t.children[r],n.children[r]))return!1}return!0}(e.root,t.root):function(e,t){return Object.keys(t).length<=Object.keys(e).length&&Object.keys(t).every(n=>Hc(e[n],t[n]))}(e.queryParams,t.queryParams)&&function e(t,n){return function t(n,r,s){if(n.segments.length>s.length)return!!eh(n.segments.slice(0,s.length),s)&&!r.hasChildren();if(n.segments.length===s.length){if(!eh(n.segments,s))return!1;for(const t in r.children){if(!n.children[t])return!1;if(!e(n.children[t],r.children[t]))return!1}return!0}{const e=s.slice(0,n.segments.length),a=s.slice(n.segments.length);return!!eh(n.segments,e)&&!!n.children.primary&&t(n.children.primary,r,a)}}(t,n,n.segments)}(e.root,t.root)}class Yc{constructor(e,t,n){this.root=e,this.queryParams=t,this.fragment=n}get queryParamMap(){return this._queryParamMap||(this._queryParamMap=Mc(this.queryParams)),this._queryParamMap}toString(){return sh.serialize(this)}}class Jc{constructor(e,t){this.segments=e,this.children=t,this.parent=null,Kc(t,(e,t)=>e.parent=this)}hasChildren(){return this.numberOfChildren>0}get numberOfChildren(){return Object.keys(this.children).length}toString(){return ah(this)}}class Qc{constructor(e,t){this.path=e,this.parameters=t}get parameterMap(){return this._parameterMap||(this._parameterMap=Mc(this.parameters)),this._parameterMap}toString(){return hh(this)}}function eh(e,t){return e.length===t.length&&e.every((e,n)=>e.path===t[n].path)}function th(e,t){let n=[];return Kc(e.children,(e,r)=>{"primary"===r&&(n=n.concat(t(e,r)))}),Kc(e.children,(e,r)=>{"primary"!==r&&(n=n.concat(t(e,r)))}),n}class nh{}class rh{parse(e){const t=new gh(e);return new Yc(t.parseRootSegment(),t.parseQueryParams(),t.parseFragment())}serialize(e){return`${"/"+function e(t,n){if(!t.hasChildren())return ah(t);if(n){const n=t.children.primary?e(t.children.primary,!1):"",r=[];return Kc(t.children,(t,n)=>{"primary"!==n&&r.push(`${n}:${e(t,!1)}`)}),r.length>0?`${n}(${r.join("//")})`:n}{const n=th(t,(n,r)=>"primary"===r?[e(t.children.primary,!1)]:[`${r}:${e(n,!1)}`]);return`${ah(t)}/(${n.join("//")})`}}(e.root,!0)}${function(e){const t=Object.keys(e).map(t=>{const n=e[t];return Array.isArray(n)?n.map(e=>`${oh(t)}=${oh(e)}`).join("&"):`${oh(t)}=${oh(n)}`});return t.length?"?"+t.join("&"):""}(e.queryParams)}${"string"==typeof e.fragment?"#"+encodeURI(e.fragment):""}`}}const sh=new rh;function ah(e){return e.segments.map(e=>hh(e)).join("/")}function ih(e){return encodeURIComponent(e).replace(/%40/g,"@").replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",")}function oh(e){return ih(e).replace(/%3B/gi,";")}function lh(e){return ih(e).replace(/\(/g,"%28").replace(/\)/g,"%29").replace(/%26/gi,"&")}function uh(e){return decodeURIComponent(e)}function ch(e){return uh(e.replace(/\+/g,"%20"))}function hh(e){return`${lh(e.path)}${t=e.parameters,Object.keys(t).map(e=>`;${lh(e)}=${lh(t[e])}`).join("")}`;var t}const dh=/^[^\/()?;=#]+/;function ph(e){const t=e.match(dh);return t?t[0]:""}const fh=/^[^=?&#]+/,mh=/^[^?&#]+/;class gh{constructor(e){this.url=e,this.remaining=e}parseRootSegment(){return this.consumeOptional("/"),""===this.remaining||this.peekStartsWith("?")||this.peekStartsWith("#")?new Jc([],{}):new Jc([],this.parseChildren())}parseQueryParams(){const e={};if(this.consumeOptional("?"))do{this.parseQueryParam(e)}while(this.consumeOptional("&"));return e}parseFragment(){return this.consumeOptional("#")?decodeURIComponent(this.remaining):null}parseChildren(){if(""===this.remaining)return{};this.consumeOptional("/");const e=[];for(this.peekStartsWith("(")||e.push(this.parseSegment());this.peekStartsWith("/")&&!this.peekStartsWith("//")&&!this.peekStartsWith("/(");)this.capture("/"),e.push(this.parseSegment());let t={};this.peekStartsWith("/(")&&(this.capture("/"),t=this.parseParens(!0));let n={};return this.peekStartsWith("(")&&(n=this.parseParens(!1)),(e.length>0||Object.keys(t).length>0)&&(n.primary=new Jc(e,t)),n}parseSegment(){const e=ph(this.remaining);if(""===e&&this.peekStartsWith(";"))throw new Error(`Empty path url segment cannot have parameters: '${this.remaining}'.`);return this.capture(e),new Qc(uh(e),this.parseMatrixParams())}parseMatrixParams(){const e={};for(;this.consumeOptional(";");)this.parseParam(e);return e}parseParam(e){const t=ph(this.remaining);if(!t)return;this.capture(t);let n="";if(this.consumeOptional("=")){const e=ph(this.remaining);e&&(n=e,this.capture(n))}e[uh(t)]=uh(n)}parseQueryParam(e){const t=function(e){const t=e.match(fh);return t?t[0]:""}(this.remaining);if(!t)return;this.capture(t);let n="";if(this.consumeOptional("=")){const e=function(e){const t=e.match(mh);return t?t[0]:""}(this.remaining);e&&(n=e,this.capture(n))}const r=ch(t),s=ch(n);if(e.hasOwnProperty(r)){let t=e[r];Array.isArray(t)||(t=[t],e[r]=t),t.push(s)}else e[r]=s}parseParens(e){const t={};for(this.capture("(");!this.consumeOptional(")")&&this.remaining.length>0;){const n=ph(this.remaining),r=this.remaining[n.length];if("/"!==r&&")"!==r&&";"!==r)throw new Error(`Cannot parse url '${this.url}'`);let s=void 0;n.indexOf(":")>-1?(s=n.substr(0,n.indexOf(":")),this.capture(s),this.capture(":")):e&&(s="primary");const a=this.parseChildren();t[s]=1===Object.keys(a).length?a.primary:new Jc([],a),this.consumeOptional("//")}return t}peekStartsWith(e){return this.remaining.startsWith(e)}consumeOptional(e){return!!this.peekStartsWith(e)&&(this.remaining=this.remaining.substring(e.length),!0)}capture(e){if(!this.consumeOptional(e))throw new Error(`Expected "${e}".`)}}class yh{constructor(e){this._root=e}get root(){return this._root.value}parent(e){const t=this.pathFromRoot(e);return t.length>1?t[t.length-2]:null}children(e){const t=bh(e,this._root);return t?t.children.map(e=>e.value):[]}firstChild(e){const t=bh(e,this._root);return t&&t.children.length>0?t.children[0].value:null}siblings(e){const t=xh(e,this._root);return t.length<2?[]:t[t.length-2].children.map(e=>e.value).filter(t=>t!==e)}pathFromRoot(e){return xh(e,this._root).map(e=>e.value)}}function bh(e,t){if(e===t.value)return t;for(const n of t.children){const t=bh(e,n);if(t)return t}return null}function xh(e,t){if(e===t.value)return[t];for(const n of t.children){const r=xh(e,n);if(r.length)return r.unshift(t),r}return[]}class wh{constructor(e,t){this.value=e,this.children=t}toString(){return`TreeNode(${this.value})`}}function vh(e){const t={};return e&&e.children.forEach(e=>t[e.value.outlet]=e),t}class kh extends yh{constructor(e,t){super(e),this.snapshot=t,_h(this,e)}toString(){return this.snapshot.toString()}}function Sh(e,t){const n=function(e,t){const n=new Nh([],{},{},"",{},"primary",t,null,e.root,-1,{});return new Th("",new wh(n,[]))}(e,t),r=new Iu([new Qc("",{})]),s=new Iu({}),a=new Iu({}),i=new Iu({}),o=new Iu(""),l=new Ih(r,s,i,o,a,"primary",t,n.root);return l.snapshot=n.root,new kh(new wh(l,[]),n)}class Ih{constructor(e,t,n,r,s,a,i,o){this.url=e,this.params=t,this.queryParams=n,this.fragment=r,this.data=s,this.outlet=a,this.component=i,this._futureSnapshot=o}get routeConfig(){return this._futureSnapshot.routeConfig}get root(){return this._routerState.root}get parent(){return this._routerState.parent(this)}get firstChild(){return this._routerState.firstChild(this)}get children(){return this._routerState.children(this)}get pathFromRoot(){return this._routerState.pathFromRoot(this)}get paramMap(){return this._paramMap||(this._paramMap=this.params.pipe(me(e=>Mc(e)))),this._paramMap}get queryParamMap(){return this._queryParamMap||(this._queryParamMap=this.queryParams.pipe(me(e=>Mc(e)))),this._queryParamMap}toString(){return this.snapshot?this.snapshot.toString():`Future(${this._futureSnapshot})`}}function Ch(e,t="emptyOnly"){const n=e.pathFromRoot;let r=0;if("always"!==t)for(r=n.length-1;r>=1;){const e=n[r],t=n[r-1];if(e.routeConfig&&""===e.routeConfig.path)r--;else{if(t.component)break;r--}}return function(e){return e.reduce((e,t)=>({params:Object.assign(Object.assign({},e.params),t.params),data:Object.assign(Object.assign({},e.data),t.data),resolve:Object.assign(Object.assign({},e.resolve),t._resolvedData)}),{params:{},data:{},resolve:{}})}(n.slice(r))}class Nh{constructor(e,t,n,r,s,a,i,o,l,u,c){this.url=e,this.params=t,this.queryParams=n,this.fragment=r,this.data=s,this.outlet=a,this.component=i,this.routeConfig=o,this._urlSegment=l,this._lastPathIndex=u,this._resolve=c}get root(){return this._routerState.root}get parent(){return this._routerState.parent(this)}get firstChild(){return this._routerState.firstChild(this)}get children(){return this._routerState.children(this)}get pathFromRoot(){return this._routerState.pathFromRoot(this)}get paramMap(){return this._paramMap||(this._paramMap=Mc(this.params)),this._paramMap}get queryParamMap(){return this._queryParamMap||(this._queryParamMap=Mc(this.queryParams)),this._queryParamMap}toString(){return`Route(url:'${this.url.map(e=>e.toString()).join("/")}', path:'${this.routeConfig?this.routeConfig.path:""}')`}}class Th extends yh{constructor(e,t){super(t),this.url=e,_h(this,t)}toString(){return Eh(this._root)}}function _h(e,t){t.value._routerState=e,t.children.forEach(t=>_h(e,t))}function Eh(e){const t=e.children.length>0?` { ${e.children.map(Eh).join(", ")} } `:"";return`${e.value}${t}`}function Ah(e){if(e.snapshot){const t=e.snapshot,n=e._futureSnapshot;e.snapshot=n,Gc(t.queryParams,n.queryParams)||e.queryParams.next(n.queryParams),t.fragment!==n.fragment&&e.fragment.next(n.fragment),Gc(t.params,n.params)||e.params.next(n.params),function(e,t){if(e.length!==t.length)return!1;for(let n=0;n<e.length;++n)if(!Gc(e[n],t[n]))return!1;return!0}(t.url,n.url)||e.url.next(n.url),Gc(t.data,n.data)||e.data.next(n.data)}else e.snapshot=e._futureSnapshot,e.data.next(e._futureSnapshot.data)}function Rh(e,t){var n,r;return Gc(e.params,t.params)&&eh(n=e.url,r=t.url)&&n.every((e,t)=>Gc(e.parameters,r[t].parameters))&&!(!e.parent!=!t.parent)&&(!e.parent||Rh(e.parent,t.parent))}function $h(e){return"object"==typeof e&&null!=e&&!e.outlets&&!e.segmentPath}function Fh(e,t,n,r,s){let a={};return r&&Kc(r,(e,t)=>{a[t]=Array.isArray(e)?e.map(e=>""+e):""+e}),new Yc(n.root===e?t:function e(t,n,r){const s={};return Kc(t.children,(t,a)=>{s[a]=t===n?r:e(t,n,r)}),new Jc(t.segments,s)}(n.root,e,t),a,s)}class Dh{constructor(e,t,n){if(this.isAbsolute=e,this.numberOfDoubleDots=t,this.commands=n,e&&n.length>0&&$h(n[0]))throw new Error("Root segment cannot have matrix parameters");const r=n.find(e=>"object"==typeof e&&null!=e&&e.outlets);if(r&&r!==qc(n))throw new Error("{outlets:{}} has to be the last command")}toRoot(){return this.isAbsolute&&1===this.commands.length&&"/"==this.commands[0]}}class Oh{constructor(e,t,n){this.segmentGroup=e,this.processChildren=t,this.index=n}}function Mh(e){return"object"==typeof e&&null!=e&&e.outlets?e.outlets.primary:""+e}function Lh(e,t,n){if(e||(e=new Jc([],{})),0===e.segments.length&&e.hasChildren())return zh(e,t,n);const r=function(e,t,n){let r=0,s=t;const a={match:!1,pathIndex:0,commandIndex:0};for(;s<e.segments.length;){if(r>=n.length)return a;const t=e.segments[s],i=Mh(n[r]),o=r<n.length-1?n[r+1]:null;if(s>0&&void 0===i)break;if(i&&o&&"object"==typeof o&&void 0===o.outlets){if(!Vh(i,o,t))return a;r+=2}else{if(!Vh(i,{},t))return a;r++}s++}return{match:!0,pathIndex:s,commandIndex:r}}(e,t,n),s=n.slice(r.commandIndex);if(r.match&&r.pathIndex<e.segments.length){const t=new Jc(e.segments.slice(0,r.pathIndex),{});return t.children.primary=new Jc(e.segments.slice(r.pathIndex),e.children),zh(t,0,s)}return r.match&&0===s.length?new Jc(e.segments,{}):r.match&&!e.hasChildren()?Ph(e,t,n):r.match?zh(e,0,s):Ph(e,t,n)}function zh(e,t,n){if(0===n.length)return new Jc(e.segments,{});{const r=function(e){return"object"!=typeof e[0]||void 0===e[0].outlets?{primary:e}:e[0].outlets}(n),s={};return Kc(r,(n,r)=>{null!==n&&(s[r]=Lh(e.children[r],t,n))}),Kc(e.children,(e,t)=>{void 0===r[t]&&(s[t]=e)}),new Jc(e.segments,s)}}function Ph(e,t,n){const r=e.segments.slice(0,t);let s=0;for(;s<n.length;){if("object"==typeof n[s]&&void 0!==n[s].outlets){const e=Bh(n[s].outlets);return new Jc(r,e)}if(0===s&&$h(n[0])){r.push(new Qc(e.segments[t].path,n[0])),s++;continue}const a=Mh(n[s]),i=s<n.length-1?n[s+1]:null;a&&i&&$h(i)?(r.push(new Qc(a,Uh(i))),s+=2):(r.push(new Qc(a,{})),s++)}return new Jc(r,{})}function Bh(e){const t={};return Kc(e,(e,n)=>{null!==e&&(t[n]=Ph(new Jc([],{}),0,e))}),t}function Uh(e){const t={};return Kc(e,(e,n)=>t[n]=""+e),t}function Vh(e,t,n){return e==n.path&&Gc(t,n.parameters)}class Wh{constructor(e,t,n,r){this.routeReuseStrategy=e,this.futureState=t,this.currState=n,this.forwardEvent=r}activate(e){const t=this.futureState._root,n=this.currState?this.currState._root:null;this.deactivateChildRoutes(t,n,e),Ah(this.futureState.root),this.activateChildRoutes(t,n,e)}deactivateChildRoutes(e,t,n){const r=vh(t);e.children.forEach(e=>{const t=e.value.outlet;this.deactivateRoutes(e,r[t],n),delete r[t]}),Kc(r,(e,t)=>{this.deactivateRouteAndItsChildren(e,n)})}deactivateRoutes(e,t,n){const r=e.value,s=t?t.value:null;if(r===s)if(r.component){const s=n.getContext(r.outlet);s&&this.deactivateChildRoutes(e,t,s.children)}else this.deactivateChildRoutes(e,t,n);else s&&this.deactivateRouteAndItsChildren(t,n)}deactivateRouteAndItsChildren(e,t){this.routeReuseStrategy.shouldDetach(e.value.snapshot)?this.detachAndStoreRouteSubtree(e,t):this.deactivateRouteAndOutlet(e,t)}detachAndStoreRouteSubtree(e,t){const n=t.getContext(e.value.outlet);if(n&&n.outlet){const t=n.outlet.detach(),r=n.children.onOutletDeactivated();this.routeReuseStrategy.store(e.value.snapshot,{componentRef:t,route:e,contexts:r})}}deactivateRouteAndOutlet(e,t){const n=t.getContext(e.value.outlet);if(n){const r=vh(e),s=e.value.component?n.children:t;Kc(r,(e,t)=>this.deactivateRouteAndItsChildren(e,s)),n.outlet&&(n.outlet.deactivate(),n.children.onOutletDeactivated())}}activateChildRoutes(e,t,n){const r=vh(t);e.children.forEach(e=>{this.activateRoutes(e,r[e.value.outlet],n),this.forwardEvent(new $c(e.value.snapshot))}),e.children.length&&this.forwardEvent(new Ac(e.value.snapshot))}activateRoutes(e,t,n){const r=e.value,s=t?t.value:null;if(Ah(r),r===s)if(r.component){const s=n.getOrCreateContext(r.outlet);this.activateChildRoutes(e,t,s.children)}else this.activateChildRoutes(e,t,n);else if(r.component){const t=n.getOrCreateContext(r.outlet);if(this.routeReuseStrategy.shouldAttach(r.snapshot)){const e=this.routeReuseStrategy.retrieve(r.snapshot);this.routeReuseStrategy.store(r.snapshot,null),t.children.onOutletReAttached(e.contexts),t.attachRef=e.componentRef,t.route=e.route.value,t.outlet&&t.outlet.attach(e.componentRef,e.route.value),Gh(e.route)}else{const n=function(e){for(let t=e.parent;t;t=t.parent){const e=t.routeConfig;if(e&&e._loadedConfig)return e._loadedConfig;if(e&&e.component)return null}return null}(r.snapshot),s=n?n.module.componentFactoryResolver:null;t.attachRef=null,t.route=r,t.resolver=s,t.outlet&&t.outlet.activateWith(r,s),this.activateChildRoutes(e,null,t.children)}}else this.activateChildRoutes(e,null,n)}}function Gh(e){Ah(e.value),e.children.forEach(Gh)}function Hh(e){return"function"==typeof e}function jh(e){return e instanceof Yc}class qh{constructor(e){this.segmentGroup=e||null}}class Kh{constructor(e){this.urlTree=e}}function Xh(e){return new J(t=>t.error(new qh(e)))}function Zh(e){return new J(t=>t.error(new Kh(e)))}function Yh(e){return new J(t=>t.error(new Error(`Only absolute redirects can have named outlets. redirectTo: '${e}'`)))}class Jh{constructor(e,t,n,r,s){this.configLoader=t,this.urlSerializer=n,this.urlTree=r,this.config=s,this.allowRedirects=!0,this.ngModule=e.get(Tt)}apply(){return this.expandSegmentGroup(this.ngModule,this.config,this.urlTree.root,"primary").pipe(me(e=>this.createUrlTree(e,this.urlTree.queryParams,this.urlTree.fragment))).pipe(Ku(e=>{if(e instanceof Kh)return this.allowRedirects=!1,this.match(e.urlTree);if(e instanceof qh)throw this.noMatchError(e);throw e}))}match(e){return this.expandSegmentGroup(this.ngModule,this.config,e.root,"primary").pipe(me(t=>this.createUrlTree(t,e.queryParams,e.fragment))).pipe(Ku(e=>{if(e instanceof qh)throw this.noMatchError(e);throw e}))}noMatchError(e){return new Error(`Cannot match any routes. URL Segment: '${e.segmentGroup}'`)}createUrlTree(e,t,n){const r=e.segments.length>0?new Jc([],{primary:e}):e;return new Yc(r,t,n)}expandSegmentGroup(e,t,n,r){return 0===n.segments.length&&n.hasChildren()?this.expandChildren(e,t,n).pipe(me(e=>new Jc([],e))):this.expandSegment(e,n,t,n.segments,r,!0)}expandChildren(e,t,n){return function(e,t){if(0===Object.keys(e).length)return Su({});const n=[],r=[],s={};return Kc(e,(e,a)=>{const i=t(a,e).pipe(me(e=>s[a]=e));"primary"===a?n.push(i):r.push(i)}),Su.apply(null,n.concat(r)).pipe($u(),qu(),me(()=>s))}(n.children,(n,r)=>this.expandSegmentGroup(e,t,r,n))}expandSegment(e,t,n,r,s,a){return Su(...n).pipe(me(i=>this.expandSegmentAgainstRoute(e,t,n,i,r,s,a).pipe(Ku(e=>{if(e instanceof qh)return Su(null);throw e}))),$u(),ec(e=>!!e),Ku((e,n)=>{if(e instanceof Cu||"EmptyError"===e.name){if(this.noLeftoversInUrl(t,r,s))return Su(new Jc([],{}));throw new qh(t)}throw e}))}noLeftoversInUrl(e,t,n){return 0===t.length&&!e.children[n]}expandSegmentAgainstRoute(e,t,n,r,s,a,i){return nd(r)!==a?Xh(t):void 0===r.redirectTo?this.matchSegmentAgainstRoute(e,t,r,s):i&&this.allowRedirects?this.expandSegmentAgainstRouteUsingRedirect(e,t,n,r,s,a):Xh(t)}expandSegmentAgainstRouteUsingRedirect(e,t,n,r,s,a){return"**"===r.path?this.expandWildCardWithParamsAgainstRouteUsingRedirect(e,n,r,a):this.expandRegularSegmentAgainstRouteUsingRedirect(e,t,n,r,s,a)}expandWildCardWithParamsAgainstRouteUsingRedirect(e,t,n,r){const s=this.applyRedirectCommands([],n.redirectTo,{});return n.redirectTo.startsWith("/")?Zh(s):this.lineralizeSegments(n,s).pipe(we(n=>{const s=new Jc(n,{});return this.expandSegment(e,s,t,n,r,!1)}))}expandRegularSegmentAgainstRouteUsingRedirect(e,t,n,r,s,a){const{matched:i,consumedSegments:o,lastChild:l,positionalParamSegments:u}=Qh(t,r,s);if(!i)return Xh(t);const c=this.applyRedirectCommands(o,r.redirectTo,u);return r.redirectTo.startsWith("/")?Zh(c):this.lineralizeSegments(r,c).pipe(we(r=>this.expandSegment(e,t,n,r.concat(s.slice(l)),a,!1)))}matchSegmentAgainstRoute(e,t,n,r){if("**"===n.path)return n.loadChildren?this.configLoader.load(e.injector,n).pipe(me(e=>(n._loadedConfig=e,new Jc(r,{})))):Su(new Jc(r,{}));const{matched:s,consumedSegments:a,lastChild:i}=Qh(t,n,r);if(!s)return Xh(t);const o=r.slice(i);return this.getChildConfig(e,n,r).pipe(we(e=>{const n=e.module,r=e.routes,{segmentGroup:s,slicedSegments:i}=function(e,t,n,r){return n.length>0&&function(e,t,n){return n.some(n=>td(e,t,n)&&"primary"!==nd(n))}(e,n,r)?{segmentGroup:ed(new Jc(t,function(e,t){const n={};n.primary=t;for(const r of e)""===r.path&&"primary"!==nd(r)&&(n[nd(r)]=new Jc([],{}));return n}(r,new Jc(n,e.children)))),slicedSegments:[]}:0===n.length&&function(e,t,n){return n.some(n=>td(e,t,n))}(e,n,r)?{segmentGroup:ed(new Jc(e.segments,function(e,t,n,r){const s={};for(const a of n)td(e,t,a)&&!r[nd(a)]&&(s[nd(a)]=new Jc([],{}));return Object.assign(Object.assign({},r),s)}(e,n,r,e.children))),slicedSegments:n}:{segmentGroup:e,slicedSegments:n}}(t,a,o,r);return 0===i.length&&s.hasChildren()?this.expandChildren(n,r,s).pipe(me(e=>new Jc(a,e))):0===r.length&&0===i.length?Su(new Jc(a,{})):this.expandSegment(n,s,r,i,"primary",!0).pipe(me(e=>new Jc(a.concat(e.segments),e.children)))}))}getChildConfig(e,t,n){return t.children?Su(new Pc(t.children,e)):t.loadChildren?void 0!==t._loadedConfig?Su(t._loadedConfig):function(e,t,n){const r=t.canLoad;return r&&0!==r.length?xe(r).pipe(me(r=>{const s=e.get(r);let a;if(function(e){return e&&Hh(e.canLoad)}(s))a=s.canLoad(t,n);else{if(!Hh(s))throw new Error("Invalid CanLoad guard");a=s(t,n)}return Xc(a)})).pipe($u(),(s=e=>!0===e,e=>e.lift(new tc(s,void 0,e)))):Su(!0);var s}(e.injector,t,n).pipe(we(n=>n?this.configLoader.load(e.injector,t).pipe(me(e=>(t._loadedConfig=e,e))):function(e){return new J(t=>t.error(Lc(`Cannot load children because the guard of the route "path: '${e.path}'" returned false`)))}(t))):Su(new Pc([],e))}lineralizeSegments(e,t){let n=[],r=t.root;for(;;){if(n=n.concat(r.segments),0===r.numberOfChildren)return Su(n);if(r.numberOfChildren>1||!r.children.primary)return Yh(e.redirectTo);r=r.children.primary}}applyRedirectCommands(e,t,n){return this.applyRedirectCreatreUrlTree(t,this.urlSerializer.parse(t),e,n)}applyRedirectCreatreUrlTree(e,t,n,r){const s=this.createSegmentGroup(e,t.root,n,r);return new Yc(s,this.createQueryParams(t.queryParams,this.urlTree.queryParams),t.fragment)}createQueryParams(e,t){const n={};return Kc(e,(e,r)=>{if("string"==typeof e&&e.startsWith(":")){const s=e.substring(1);n[r]=t[s]}else n[r]=e}),n}createSegmentGroup(e,t,n,r){const s=this.createSegments(e,t.segments,n,r);let a={};return Kc(t.children,(t,s)=>{a[s]=this.createSegmentGroup(e,t,n,r)}),new Jc(s,a)}createSegments(e,t,n,r){return t.map(t=>t.path.startsWith(":")?this.findPosParam(e,t,r):this.findOrReturn(t,n))}findPosParam(e,t,n){const r=n[t.path.substring(1)];if(!r)throw new Error(`Cannot redirect to '${e}'. Cannot find '${t.path}'.`);return r}findOrReturn(e,t){let n=0;for(const r of t){if(r.path===e.path)return t.splice(n),r;n++}return e}}function Qh(e,t,n){if(""===t.path)return"full"===t.pathMatch&&(e.hasChildren()||n.length>0)?{matched:!1,consumedSegments:[],lastChild:0,positionalParamSegments:{}}:{matched:!0,consumedSegments:[],lastChild:0,positionalParamSegments:{}};const r=(t.matcher||zc)(n,e,t);return r?{matched:!0,consumedSegments:r.consumed,lastChild:r.consumed.length,positionalParamSegments:r.posParams}:{matched:!1,consumedSegments:[],lastChild:0,positionalParamSegments:{}}}function ed(e){if(1===e.numberOfChildren&&e.children.primary){const t=e.children.primary;return new Jc(e.segments.concat(t.segments),t.children)}return e}function td(e,t,n){return(!(e.hasChildren()||t.length>0)||"full"!==n.pathMatch)&&""===n.path&&void 0!==n.redirectTo}function nd(e){return e.outlet||"primary"}class rd{constructor(e){this.path=e,this.route=this.path[this.path.length-1]}}class sd{constructor(e,t){this.component=e,this.route=t}}function ad(e,t,n){const r=e._root;return function e(t,n,r,s,a={canDeactivateChecks:[],canActivateChecks:[]}){const i=vh(n);return t.children.forEach(t=>{!function(t,n,r,s,a={canDeactivateChecks:[],canActivateChecks:[]}){const i=t.value,o=n?n.value:null,l=r?r.getContext(t.value.outlet):null;if(o&&i.routeConfig===o.routeConfig){const u=function(e,t,n){if("function"==typeof n)return n(e,t);switch(n){case"pathParamsChange":return!eh(e.url,t.url);case"pathParamsOrQueryParamsChange":return!eh(e.url,t.url)||!Gc(e.queryParams,t.queryParams);case"always":return!0;case"paramsOrQueryParamsChange":return!Rh(e,t)||!Gc(e.queryParams,t.queryParams);case"paramsChange":default:return!Rh(e,t)}}(o,i,i.routeConfig.runGuardsAndResolvers);u?a.canActivateChecks.push(new rd(s)):(i.data=o.data,i._resolvedData=o._resolvedData),e(t,n,i.component?l?l.children:null:r,s,a),u&&a.canDeactivateChecks.push(new sd(l&&l.outlet&&l.outlet.component||null,o))}else o&&od(n,l,a),a.canActivateChecks.push(new rd(s)),e(t,null,i.component?l?l.children:null:r,s,a)}(t,i[t.value.outlet],r,s.concat([t.value]),a),delete i[t.value.outlet]}),Kc(i,(e,t)=>od(e,r.getContext(t),a)),a}(r,t?t._root:null,n,[r.value])}function id(e,t,n){const r=function(e){if(!e)return null;for(let t=e.parent;t;t=t.parent){const e=t.routeConfig;if(e&&e._loadedConfig)return e._loadedConfig}return null}(t);return(r?r.module.injector:n).get(e)}function od(e,t,n){const r=vh(e),s=e.value;Kc(r,(e,r)=>{od(e,s.component?t?t.children.getContext(r):null:t,n)}),n.canDeactivateChecks.push(new sd(s.component&&t&&t.outlet&&t.outlet.isActivated?t.outlet.component:null,s))}const ld=Symbol("INITIAL_VALUE");function ud(){return rc(e=>function(...e){let t=null,n=null;return ae(e[e.length-1])&&(n=e.pop()),"function"==typeof e[e.length-1]&&(t=e.pop()),1===e.length&&B(e[0])&&(e=e[0]),Ie(e,n).lift(new Tu(t))}(...e.map(e=>e.pipe(Yu(1),function(...e){const t=e[e.length-1];return ae(t)?(e.pop(),n=>ic(e,n,t)):t=>ic(e,t)}(ld)))).pipe(oc((e,t)=>{let n=!1;return t.reduce((e,r,s)=>{if(e!==ld)return e;if(r===ld&&(n=!0),!n){if(!1===r)return r;if(s===t.length-1||jh(r))return r}return e},e)},ld),Fu(e=>e!==ld),me(e=>jh(e)?e:!0===e),Yu(1)))}function cd(e,t){return null!==e&&t&&t(new Rc(e)),Su(!0)}function hd(e,t){return null!==e&&t&&t(new Ec(e)),Su(!0)}function dd(e,t,n){const r=t.routeConfig?t.routeConfig.canActivate:null;return r&&0!==r.length?Su(r.map(r=>Ru(()=>{const s=id(r,t,n);let a;if(function(e){return e&&Hh(e.canActivate)}(s))a=Xc(s.canActivate(t,e));else{if(!Hh(s))throw new Error("Invalid CanActivate guard");a=Xc(s(t,e))}return a.pipe(ec())}))).pipe(ud()):Su(!0)}function pd(e,t,n){const r=t[t.length-1],s=t.slice(0,t.length-1).reverse().map(e=>function(e){const t=e.routeConfig?e.routeConfig.canActivateChild:null;return t&&0!==t.length?{node:e,guards:t}:null}(e)).filter(e=>null!==e).map(t=>Ru(()=>Su(t.guards.map(s=>{const a=id(s,t.node,n);let i;if(function(e){return e&&Hh(e.canActivateChild)}(a))i=Xc(a.canActivateChild(r,e));else{if(!Hh(a))throw new Error("Invalid CanActivateChild guard");i=Xc(a(r,e))}return i.pipe(ec())})).pipe(ud())));return Su(s).pipe(ud())}class fd{}class md{constructor(e,t,n,r,s,a){this.rootComponentType=e,this.config=t,this.urlTree=n,this.url=r,this.paramsInheritanceStrategy=s,this.relativeLinkResolution=a}recognize(){try{const e=bd(this.urlTree.root,[],[],this.config,this.relativeLinkResolution).segmentGroup,t=this.processSegmentGroup(this.config,e,"primary"),n=new Nh([],Object.freeze({}),Object.freeze(Object.assign({},this.urlTree.queryParams)),this.urlTree.fragment,{},"primary",this.rootComponentType,null,this.urlTree.root,-1,{}),r=new wh(n,t),s=new Th(this.url,r);return this.inheritParamsAndData(s._root),Su(s)}catch(e){return new J(t=>t.error(e))}}inheritParamsAndData(e){const t=e.value,n=Ch(t,this.paramsInheritanceStrategy);t.params=Object.freeze(n.params),t.data=Object.freeze(n.data),e.children.forEach(e=>this.inheritParamsAndData(e))}processSegmentGroup(e,t,n){return 0===t.segments.length&&t.hasChildren()?this.processChildren(e,t):this.processSegment(e,t,t.segments,n)}processChildren(e,t){const n=th(t,(t,n)=>this.processSegmentGroup(e,t,n));return function(e){const t={};e.forEach(e=>{const n=t[e.value.outlet];if(n){const t=n.url.map(e=>e.toString()).join("/"),r=e.value.url.map(e=>e.toString()).join("/");throw new Error(`Two segments cannot have the same outlet name: '${t}' and '${r}'.`)}t[e.value.outlet]=e.value})}(n),n.sort((e,t)=>"primary"===e.value.outlet?-1:"primary"===t.value.outlet?1:e.value.outlet.localeCompare(t.value.outlet)),n}processSegment(e,t,n,r){for(const a of e)try{return this.processSegmentAgainstRoute(a,t,n,r)}catch(s){if(!(s instanceof fd))throw s}if(this.noLeftoversInUrl(t,n,r))return[];throw new fd}noLeftoversInUrl(e,t,n){return 0===t.length&&!e.children[n]}processSegmentAgainstRoute(e,t,n,r){if(e.redirectTo)throw new fd;if((e.outlet||"primary")!==r)throw new fd;let s,a=[],i=[];if("**"===e.path){const a=n.length>0?qc(n).parameters:{};s=new Nh(n,a,Object.freeze(Object.assign({},this.urlTree.queryParams)),this.urlTree.fragment,vd(e),r,e.component,e,gd(t),yd(t)+n.length,kd(e))}else{const o=function(e,t,n){if(""===t.path){if("full"===t.pathMatch&&(e.hasChildren()||n.length>0))throw new fd;return{consumedSegments:[],lastChild:0,parameters:{}}}const r=(t.matcher||zc)(n,e,t);if(!r)throw new fd;const s={};Kc(r.posParams,(e,t)=>{s[t]=e.path});const a=r.consumed.length>0?Object.assign(Object.assign({},s),r.consumed[r.consumed.length-1].parameters):s;return{consumedSegments:r.consumed,lastChild:r.consumed.length,parameters:a}}(t,e,n);a=o.consumedSegments,i=n.slice(o.lastChild),s=new Nh(a,o.parameters,Object.freeze(Object.assign({},this.urlTree.queryParams)),this.urlTree.fragment,vd(e),r,e.component,e,gd(t),yd(t)+a.length,kd(e))}const o=function(e){return e.children?e.children:e.loadChildren?e._loadedConfig.routes:[]}(e),{segmentGroup:l,slicedSegments:u}=bd(t,a,i,o,this.relativeLinkResolution);if(0===u.length&&l.hasChildren()){const e=this.processChildren(o,l);return[new wh(s,e)]}if(0===o.length&&0===u.length)return[new wh(s,[])];const c=this.processSegment(o,l,u,"primary");return[new wh(s,c)]}}function gd(e){let t=e;for(;t._sourceSegment;)t=t._sourceSegment;return t}function yd(e){let t=e,n=t._segmentIndexShift?t._segmentIndexShift:0;for(;t._sourceSegment;)t=t._sourceSegment,n+=t._segmentIndexShift?t._segmentIndexShift:0;return n-1}function bd(e,t,n,r,s){if(n.length>0&&function(e,t,n){return n.some(n=>xd(e,t,n)&&"primary"!==wd(n))}(e,n,r)){const s=new Jc(t,function(e,t,n,r){const s={};s.primary=r,r._sourceSegment=e,r._segmentIndexShift=t.length;for(const a of n)if(""===a.path&&"primary"!==wd(a)){const n=new Jc([],{});n._sourceSegment=e,n._segmentIndexShift=t.length,s[wd(a)]=n}return s}(e,t,r,new Jc(n,e.children)));return s._sourceSegment=e,s._segmentIndexShift=t.length,{segmentGroup:s,slicedSegments:[]}}if(0===n.length&&function(e,t,n){return n.some(n=>xd(e,t,n))}(e,n,r)){const a=new Jc(e.segments,function(e,t,n,r,s,a){const i={};for(const o of r)if(xd(e,n,o)&&!s[wd(o)]){const n=new Jc([],{});n._sourceSegment=e,n._segmentIndexShift="legacy"===a?e.segments.length:t.length,i[wd(o)]=n}return Object.assign(Object.assign({},s),i)}(e,t,n,r,e.children,s));return a._sourceSegment=e,a._segmentIndexShift=t.length,{segmentGroup:a,slicedSegments:n}}const a=new Jc(e.segments,e.children);return a._sourceSegment=e,a._segmentIndexShift=t.length,{segmentGroup:a,slicedSegments:n}}function xd(e,t,n){return(!(e.hasChildren()||t.length>0)||"full"!==n.pathMatch)&&""===n.path&&void 0===n.redirectTo}function wd(e){return e.outlet||"primary"}function vd(e){return e.data||{}}function kd(e){return e.resolve||{}}function Sd(e,t,n,r){const s=id(e,t,r);return Xc(s.resolve?s.resolve(t,n):s(t,n))}function Id(e){return function(t){return t.pipe(rc(t=>{const n=e(t);return n?xe(n).pipe(me(()=>t)):xe([t])}))}}class Cd{shouldDetach(e){return!1}store(e,t){}shouldAttach(e){return!1}retrieve(e){return null}shouldReuseRoute(e,t){return e.routeConfig===t.routeConfig}}const Nd=new pt("ROUTES");class Td{constructor(e,t,n,r){this.loader=e,this.compiler=t,this.onLoadStartListener=n,this.onLoadEndListener=r}load(e,t){return this.onLoadStartListener&&this.onLoadStartListener(t),this.loadModuleFactory(t.loadChildren).pipe(me(n=>{this.onLoadEndListener&&this.onLoadEndListener(t);const r=n.create(e);return new Pc(jc(r.injector.get(Nd)).map(Wc),r)}))}loadModuleFactory(e){return"string"==typeof e?xe(this.loader.load(e)):Xc(e()).pipe(we(e=>e instanceof _t?Su(e):xe(this.compiler.compileModuleAsync(e))))}}class _d{shouldProcessUrl(e){return!0}extract(e){return e}merge(e,t){return e}}function Ed(e){throw e}function Ad(e,t,n){return t.parse("/")}function Rd(e,t){return Su(null)}let $d=(()=>{class e{constructor(e,t,n,r,s,a,i,o){this.rootComponentType=e,this.urlSerializer=t,this.rootContexts=n,this.location=r,this.config=o,this.lastSuccessfulNavigation=null,this.currentNavigation=null,this.navigationId=0,this.isNgZoneEnabled=!1,this.events=new re,this.errorHandler=Ed,this.malformedUriErrorHandler=Ad,this.navigated=!1,this.lastSuccessfulId=-1,this.hooks={beforePreactivation:Rd,afterPreactivation:Rd},this.urlHandlingStrategy=new _d,this.routeReuseStrategy=new Cd,this.onSameUrlNavigation="ignore",this.paramsInheritanceStrategy="emptyOnly",this.urlUpdateStrategy="deferred",this.relativeLinkResolution="legacy",this.ngModule=s.get(Tt),this.console=s.get($o);const l=s.get(jo);this.isNgZoneEnabled=l instanceof jo,this.resetConfig(o),this.currentUrlTree=new Yc(new Jc([],{}),{},null),this.rawUrlTree=this.currentUrlTree,this.browserUrlTree=this.currentUrlTree,this.configLoader=new Td(a,i,e=>this.triggerEvent(new Tc(e)),e=>this.triggerEvent(new _c(e))),this.routerState=Sh(this.currentUrlTree,this.rootComponentType),this.transitions=new Iu({id:0,currentUrlTree:this.currentUrlTree,currentRawUrl:this.currentUrlTree,extractedUrl:this.urlHandlingStrategy.extract(this.currentUrlTree),urlAfterRedirects:this.urlHandlingStrategy.extract(this.currentUrlTree),rawUrl:this.currentUrlTree,extras:{},resolve:null,reject:null,promise:Promise.resolve(!0),source:"imperative",restoredState:null,currentSnapshot:this.routerState.snapshot,targetSnapshot:null,currentRouterState:this.routerState,targetRouterState:null,guards:{canActivateChecks:[],canDeactivateChecks:[]},guardsResult:null}),this.navigations=this.setupNavigations(this.transitions),this.processNavigations()}setupNavigations(e){const t=this.events;return e.pipe(Fu(e=>0!==e.id),me(e=>Object.assign(Object.assign({},e),{extractedUrl:this.urlHandlingStrategy.extract(e.rawUrl)})),rc(e=>{let n=!1,r=!1;return Su(e).pipe(dc(e=>{this.currentNavigation={id:e.id,initialUrl:e.currentRawUrl,extractedUrl:e.extractedUrl,trigger:e.source,extras:e.extras,previousNavigation:this.lastSuccessfulNavigation?Object.assign(Object.assign({},this.lastSuccessfulNavigation),{previousNavigation:null}):null}}),rc(e=>{const n=!this.navigated||e.extractedUrl.toString()!==this.browserUrlTree.toString();if(("reload"===this.onSameUrlNavigation||n)&&this.urlHandlingStrategy.shouldProcessUrl(e.rawUrl))return Su(e).pipe(rc(e=>{const n=this.transitions.getValue();return t.next(new bc(e.id,this.serializeUrl(e.extractedUrl),e.source,e.restoredState)),n!==this.transitions.getValue()?Eu:[e]}),rc(e=>Promise.resolve(e)),(r=this.ngModule.injector,s=this.configLoader,a=this.urlSerializer,i=this.config,function(e){return e.pipe(rc(e=>function(e,t,n,r,s){return new Jh(e,t,n,r,s).apply()}(r,s,a,e.extractedUrl,i).pipe(me(t=>Object.assign(Object.assign({},e),{urlAfterRedirects:t})))))}),dc(e=>{this.currentNavigation=Object.assign(Object.assign({},this.currentNavigation),{finalUrl:e.urlAfterRedirects})}),function(e,t,n,r,s){return function(a){return a.pipe(we(a=>function(e,t,n,r,s="emptyOnly",a="legacy"){return new md(e,t,n,r,s,a).recognize()}(e,t,a.urlAfterRedirects,n(a.urlAfterRedirects),r,s).pipe(me(e=>Object.assign(Object.assign({},a),{targetSnapshot:e})))))}}(this.rootComponentType,this.config,e=>this.serializeUrl(e),this.paramsInheritanceStrategy,this.relativeLinkResolution),dc(e=>{"eager"===this.urlUpdateStrategy&&(e.extras.skipLocationChange||this.setBrowserUrl(e.urlAfterRedirects,!!e.extras.replaceUrl,e.id,e.extras.state),this.browserUrlTree=e.urlAfterRedirects)}),dc(e=>{const n=new kc(e.id,this.serializeUrl(e.extractedUrl),this.serializeUrl(e.urlAfterRedirects),e.targetSnapshot);t.next(n)}));var r,s,a,i;if(n&&this.rawUrlTree&&this.urlHandlingStrategy.shouldProcessUrl(this.rawUrlTree)){const{id:n,extractedUrl:r,source:s,restoredState:a,extras:i}=e,o=new bc(n,this.serializeUrl(r),s,a);t.next(o);const l=Sh(r,this.rootComponentType).snapshot;return Su(Object.assign(Object.assign({},e),{targetSnapshot:l,urlAfterRedirects:r,extras:Object.assign(Object.assign({},i),{skipLocationChange:!1,replaceUrl:!1})}))}return this.rawUrlTree=e.rawUrl,this.browserUrlTree=e.urlAfterRedirects,e.resolve(null),Eu}),Id(e=>{const{targetSnapshot:t,id:n,extractedUrl:r,rawUrl:s,extras:{skipLocationChange:a,replaceUrl:i}}=e;return this.hooks.beforePreactivation(t,{navigationId:n,appliedUrlTree:r,rawUrlTree:s,skipLocationChange:!!a,replaceUrl:!!i})}),dc(e=>{const t=new Sc(e.id,this.serializeUrl(e.extractedUrl),this.serializeUrl(e.urlAfterRedirects),e.targetSnapshot);this.triggerEvent(t)}),me(e=>Object.assign(Object.assign({},e),{guards:ad(e.targetSnapshot,e.currentSnapshot,this.rootContexts)})),function(e,t){return function(n){return n.pipe(we(n=>{const{targetSnapshot:r,currentSnapshot:s,guards:{canActivateChecks:a,canDeactivateChecks:i}}=n;return 0===i.length&&0===a.length?Su(Object.assign(Object.assign({},n),{guardsResult:!0})):function(e,t,n,r){return xe(e).pipe(we(e=>function(e,t,n,r,s){const a=t&&t.routeConfig?t.routeConfig.canDeactivate:null;return a&&0!==a.length?Su(a.map(a=>{const i=id(a,t,s);let o;if(function(e){return e&&Hh(e.canDeactivate)}(i))o=Xc(i.canDeactivate(e,t,n,r));else{if(!Hh(i))throw new Error("Invalid CanDeactivate guard");o=Xc(i(e,t,n,r))}return o.pipe(ec())})).pipe(ud()):Su(!0)}(e.component,e.route,n,t,r)),ec(e=>!0!==e,!0))}(i,r,s,e).pipe(we(n=>n&&"boolean"==typeof n?function(e,t,n,r){return xe(t).pipe(cc(t=>xe([hd(t.route.parent,r),cd(t.route,r),pd(e,t.path,n),dd(e,t.route,n)]).pipe($u(),ec(e=>!0!==e,!0))),ec(e=>!0!==e,!0))}(r,a,e,t):Su(n)),me(e=>Object.assign(Object.assign({},n),{guardsResult:e})))}))}}(this.ngModule.injector,e=>this.triggerEvent(e)),dc(e=>{if(jh(e.guardsResult)){const t=Lc(`Redirecting to "${this.serializeUrl(e.guardsResult)}"`);throw t.url=e.guardsResult,t}}),dc(e=>{const t=new Ic(e.id,this.serializeUrl(e.extractedUrl),this.serializeUrl(e.urlAfterRedirects),e.targetSnapshot,!!e.guardsResult);this.triggerEvent(t)}),Fu(e=>{if(!e.guardsResult){this.resetUrlToCurrentUrlTree();const n=new wc(e.id,this.serializeUrl(e.extractedUrl),"");return t.next(n),e.resolve(!1),!1}return!0}),Id(e=>{if(e.guards.canActivateChecks.length)return Su(e).pipe(dc(e=>{const t=new Cc(e.id,this.serializeUrl(e.extractedUrl),this.serializeUrl(e.urlAfterRedirects),e.targetSnapshot);this.triggerEvent(t)}),(t=this.paramsInheritanceStrategy,n=this.ngModule.injector,function(e){return e.pipe(we(e=>{const{targetSnapshot:r,guards:{canActivateChecks:s}}=e;return s.length?xe(s).pipe(cc(e=>function(e,t,n,r){return function(e,t,n,r){const s=Object.keys(e);if(0===s.length)return Su({});if(1===s.length){const a=s[0];return Sd(e[a],t,n,r).pipe(me(e=>({[a]:e})))}const a={};return xe(s).pipe(we(s=>Sd(e[s],t,n,r).pipe(me(e=>(a[s]=e,e))))).pipe(qu(),me(()=>a))}(e._resolve,e,t,r).pipe(me(t=>(e._resolvedData=t,e.data=Object.assign(Object.assign({},e.data),Ch(e,n).resolve),null)))}(e.route,r,t,n)),function(e,t){return arguments.length>=2?function(n){return Z(oc(e,t),Lu(1),Gu(t))(n)}:function(t){return Z(oc((t,n,r)=>e(t,n,r+1)),Lu(1))(t)}}((e,t)=>e),me(t=>e)):Su(e)}))}),dc(e=>{const t=new Nc(e.id,this.serializeUrl(e.extractedUrl),this.serializeUrl(e.urlAfterRedirects),e.targetSnapshot);this.triggerEvent(t)}));var t,n}),Id(e=>{const{targetSnapshot:t,id:n,extractedUrl:r,rawUrl:s,extras:{skipLocationChange:a,replaceUrl:i}}=e;return this.hooks.afterPreactivation(t,{navigationId:n,appliedUrlTree:r,rawUrlTree:s,skipLocationChange:!!a,replaceUrl:!!i})}),me(e=>{const t=function(e,t,n){const r=function e(t,n,r){if(r&&t.shouldReuseRoute(n.value,r.value.snapshot)){const s=r.value;s._futureSnapshot=n.value;const a=function(t,n,r){return n.children.map(n=>{for(const s of r.children)if(t.shouldReuseRoute(s.value.snapshot,n.value))return e(t,n,s);return e(t,n)})}(t,n,r);return new wh(s,a)}{const r=t.retrieve(n.value);if(r){const e=r.route;return function e(t,n){if(t.value.routeConfig!==n.value.routeConfig)throw new Error("Cannot reattach ActivatedRouteSnapshot created from a different route");if(t.children.length!==n.children.length)throw new Error("Cannot reattach ActivatedRouteSnapshot with a different number of children");n.value._futureSnapshot=t.value;for(let r=0;r<t.children.length;++r)e(t.children[r],n.children[r])}(n,e),e}{const r=new Ih(new Iu((s=n.value).url),new Iu(s.params),new Iu(s.queryParams),new Iu(s.fragment),new Iu(s.data),s.outlet,s.component,s),a=n.children.map(n=>e(t,n));return new wh(r,a)}}var s}(e,t._root,n?n._root:void 0);return new kh(r,t)}(this.routeReuseStrategy,e.targetSnapshot,e.currentRouterState);return Object.assign(Object.assign({},e),{targetRouterState:t})}),dc(e=>{this.currentUrlTree=e.urlAfterRedirects,this.rawUrlTree=this.urlHandlingStrategy.merge(this.currentUrlTree,e.rawUrl),this.routerState=e.targetRouterState,"deferred"===this.urlUpdateStrategy&&(e.extras.skipLocationChange||this.setBrowserUrl(this.rawUrlTree,!!e.extras.replaceUrl,e.id,e.extras.state),this.browserUrlTree=e.urlAfterRedirects)}),(a=this.rootContexts,i=this.routeReuseStrategy,o=e=>this.triggerEvent(e),me(e=>(new Wh(i,e.targetRouterState,e.currentRouterState,o).activate(a),e))),dc({next(){n=!0},complete(){n=!0}}),(s=()=>{if(!n&&!r){this.resetUrlToCurrentUrlTree();const n=new wc(e.id,this.serializeUrl(e.extractedUrl),`Navigation ID ${e.id} is not equal to the current navigation id ${this.navigationId}`);t.next(n),e.resolve(!1)}this.currentNavigation=null},e=>e.lift(new mc(s))),Ku(n=>{if(r=!0,(s=n)&&s.ngNavigationCancelingError){const r=jh(n.url);r||(this.navigated=!0,this.resetStateAndUrl(e.currentRouterState,e.currentUrlTree,e.rawUrl));const s=new wc(e.id,this.serializeUrl(e.extractedUrl),n.message);t.next(s),r?setTimeout(()=>{const t=this.urlHandlingStrategy.merge(n.url,this.rawUrlTree);return this.scheduleNavigation(t,"imperative",null,{skipLocationChange:e.extras.skipLocationChange,replaceUrl:"eager"===this.urlUpdateStrategy},{resolve:e.resolve,reject:e.reject,promise:e.promise})},0):e.resolve(!1)}else{this.resetStateAndUrl(e.currentRouterState,e.currentUrlTree,e.rawUrl);const r=new vc(e.id,this.serializeUrl(e.extractedUrl),n);t.next(r);try{e.resolve(this.errorHandler(n))}catch(a){e.reject(a)}}var s;return Eu}));var s,a,i,o}))}resetRootComponentType(e){this.rootComponentType=e,this.routerState.root.component=this.rootComponentType}getTransition(){const e=this.transitions.value;return e.urlAfterRedirects=this.browserUrlTree,e}setTransition(e){this.transitions.next(Object.assign(Object.assign({},this.getTransition()),e))}initialNavigation(){this.setUpLocationChangeListener(),0===this.navigationId&&this.navigateByUrl(this.location.path(!0),{replaceUrl:!0})}setUpLocationChangeListener(){this.locationSubscription||(this.locationSubscription=this.location.subscribe(e=>{let t=this.parseUrl(e.url);const n="popstate"===e.type?"popstate":"hashchange",r=e.state&&e.state.navigationId?e.state:null;setTimeout(()=>{this.scheduleNavigation(t,n,r,{replaceUrl:!0})},0)}))}get url(){return this.serializeUrl(this.currentUrlTree)}getCurrentNavigation(){return this.currentNavigation}triggerEvent(e){this.events.next(e)}resetConfig(e){Bc(e),this.config=e.map(Wc),this.navigated=!1,this.lastSuccessfulId=-1}ngOnDestroy(){this.dispose()}dispose(){this.locationSubscription&&(this.locationSubscription.unsubscribe(),this.locationSubscription=null)}createUrlTree(e,t={}){const{relativeTo:n,queryParams:r,fragment:s,preserveQueryParams:a,queryParamsHandling:i,preserveFragment:o}=t;Rr()&&a&&console&&console.warn&&console.warn("preserveQueryParams is deprecated, use queryParamsHandling instead.");const l=n||this.routerState.root,u=o?this.currentUrlTree.fragment:s;let c=null;if(i)switch(i){case"merge":c=Object.assign(Object.assign({},this.currentUrlTree.queryParams),r);break;case"preserve":c=this.currentUrlTree.queryParams;break;default:c=r||null}else c=a?this.currentUrlTree.queryParams:r||null;return null!==c&&(c=this.removeEmptyProps(c)),function(e,t,n,r,s){if(0===n.length)return Fh(t.root,t.root,t,r,s);const a=function(e){if("string"==typeof e[0]&&1===e.length&&"/"===e[0])return new Dh(!0,0,e);let t=0,n=!1;const r=e.reduce((e,r,s)=>{if("object"==typeof r&&null!=r){if(r.outlets){const t={};return Kc(r.outlets,(e,n)=>{t[n]="string"==typeof e?e.split("/"):e}),[...e,{outlets:t}]}if(r.segmentPath)return[...e,r.segmentPath]}return"string"!=typeof r?[...e,r]:0===s?(r.split("/").forEach((r,s)=>{0==s&&"."===r||(0==s&&""===r?n=!0:".."===r?t++:""!=r&&e.push(r))}),e):[...e,r]},[]);return new Dh(n,t,r)}(n);if(a.toRoot())return Fh(t.root,new Jc([],{}),t,r,s);const i=function(e,t,n){if(e.isAbsolute)return new Oh(t.root,!0,0);if(-1===n.snapshot._lastPathIndex)return new Oh(n.snapshot._urlSegment,!0,0);const r=$h(e.commands[0])?0:1;return function(e,t,n){let r=e,s=t,a=n;for(;a>s;){if(a-=s,r=r.parent,!r)throw new Error("Invalid number of '../'");s=r.segments.length}return new Oh(r,!1,s-a)}(n.snapshot._urlSegment,n.snapshot._lastPathIndex+r,e.numberOfDoubleDots)}(a,t,e),o=i.processChildren?zh(i.segmentGroup,i.index,a.commands):Lh(i.segmentGroup,i.index,a.commands);return Fh(i.segmentGroup,o,t,r,s)}(l,this.currentUrlTree,e,c,u)}navigateByUrl(e,t={skipLocationChange:!1}){Rr()&&this.isNgZoneEnabled&&!jo.isInAngularZone()&&this.console.warn("Navigation triggered outside Angular zone, did you forget to call 'ngZone.run()'?");const n=jh(e)?e:this.parseUrl(e),r=this.urlHandlingStrategy.merge(n,this.rawUrlTree);return this.scheduleNavigation(r,"imperative",null,t)}navigate(e,t={skipLocationChange:!1}){return function(e){for(let t=0;t<e.length;t++){const n=e[t];if(null==n)throw new Error(`The requested path contains ${n} segment at index ${t}`)}}(e),this.navigateByUrl(this.createUrlTree(e,t),t)}serializeUrl(e){return this.urlSerializer.serialize(e)}parseUrl(e){let t;try{t=this.urlSerializer.parse(e)}catch(n){t=this.malformedUriErrorHandler(n,this.urlSerializer,e)}return t}isActive(e,t){if(jh(e))return Zc(this.currentUrlTree,e,t);const n=this.parseUrl(e);return Zc(this.currentUrlTree,n,t)}removeEmptyProps(e){return Object.keys(e).reduce((t,n)=>{const r=e[n];return null!=r&&(t[n]=r),t},{})}processNavigations(){this.navigations.subscribe(e=>{this.navigated=!0,this.lastSuccessfulId=e.id,this.events.next(new xc(e.id,this.serializeUrl(e.extractedUrl),this.serializeUrl(this.currentUrlTree))),this.lastSuccessfulNavigation=this.currentNavigation,this.currentNavigation=null,e.resolve(!0)},e=>{this.console.warn("Unhandled Navigation Error: ")})}scheduleNavigation(e,t,n,r,s){const a=this.getTransition();if(a&&"imperative"!==t&&"imperative"===a.source&&a.rawUrl.toString()===e.toString())return Promise.resolve(!0);if(a&&"hashchange"==t&&"popstate"===a.source&&a.rawUrl.toString()===e.toString())return Promise.resolve(!0);if(a&&"popstate"==t&&"hashchange"===a.source&&a.rawUrl.toString()===e.toString())return Promise.resolve(!0);let i,o,l;s?(i=s.resolve,o=s.reject,l=s.promise):l=new Promise((e,t)=>{i=e,o=t});const u=++this.navigationId;return this.setTransition({id:u,source:t,restoredState:n,currentUrlTree:this.currentUrlTree,currentRawUrl:this.rawUrlTree,rawUrl:e,extras:r,resolve:i,reject:o,promise:l,currentSnapshot:this.routerState.snapshot,currentRouterState:this.routerState}),l.catch(e=>Promise.reject(e))}setBrowserUrl(e,t,n,r){const s=this.urlSerializer.serialize(e);r=r||{},this.location.isCurrentPathEqualTo(s)||t?this.location.replaceState(s,"",Object.assign(Object.assign({},r),{navigationId:n})):this.location.go(s,"",Object.assign(Object.assign({},r),{navigationId:n}))}resetStateAndUrl(e,t,n){this.routerState=e,this.currentUrlTree=t,this.rawUrlTree=this.urlHandlingStrategy.merge(this.currentUrlTree,n),this.resetUrlToCurrentUrlTree()}resetUrlToCurrentUrlTree(){this.location.replaceState(this.urlSerializer.serialize(this.rawUrlTree),"",{navigationId:this.lastSuccessfulId})}}return e.\u0275fac=function(e){Ga()},e.\u0275dir=qt({type:e}),e})();class Fd{constructor(){this.outlet=null,this.route=null,this.resolver=null,this.children=new Dd,this.attachRef=null}}class Dd{constructor(){this.contexts=new Map}onChildOutletCreated(e,t){const n=this.getOrCreateContext(e);n.outlet=t,this.contexts.set(e,n)}onChildOutletDestroyed(e){const t=this.getContext(e);t&&(t.outlet=null)}onOutletDeactivated(){const e=this.contexts;return this.contexts=new Map,e}onOutletReAttached(e){this.contexts=e}getOrCreateContext(e){let t=this.getContext(e);return t||(t=new Fd,this.contexts.set(e,t)),t}getContext(e){return this.contexts.get(e)||null}}let Od=(()=>{class e{constructor(e,t,n,r,s){this.parentContexts=e,this.location=t,this.resolver=n,this.changeDetector=s,this.activated=null,this._activatedRoute=null,this.activateEvents=new ho,this.deactivateEvents=new ho,this.name=r||"primary",e.onChildOutletCreated(this.name,this)}ngOnDestroy(){this.parentContexts.onChildOutletDestroyed(this.name)}ngOnInit(){if(!this.activated){const e=this.parentContexts.getContext(this.name);e&&e.route&&(e.attachRef?this.attach(e.attachRef,e.route):this.activateWith(e.route,e.resolver||null))}}get isActivated(){return!!this.activated}get component(){if(!this.activated)throw new Error("Outlet is not activated");return this.activated.instance}get activatedRoute(){if(!this.activated)throw new Error("Outlet is not activated");return this._activatedRoute}get activatedRouteData(){return this._activatedRoute?this._activatedRoute.snapshot.data:{}}detach(){if(!this.activated)throw new Error("Outlet is not activated");this.location.detach();const e=this.activated;return this.activated=null,this._activatedRoute=null,e}attach(e,t){this.activated=e,this._activatedRoute=t,this.location.insert(e.hostView)}deactivate(){if(this.activated){const e=this.component;this.activated.destroy(),this.activated=null,this._activatedRoute=null,this.deactivateEvents.emit(e)}}activateWith(e,t){if(this.isActivated)throw new Error("Cannot activate an already activated outlet");this._activatedRoute=e;const n=(t=t||this.resolver).resolveComponentFactory(e._futureSnapshot.routeConfig.component),r=this.parentContexts.getOrCreateContext(this.name).children,s=new Md(e,r,this.location.injector);this.activated=this.location.createComponent(n,this.location.length,s),this.changeDetector.markForCheck(),this.activateEvents.emit(this.activated.instance)}}return e.\u0275fac=function(t){return new(t||e)(Wa(Dd),Wa(qi),Wa(wi),("name",function(e,t){const n=e.attrs;if(n){const e=n.length;let t=0;for(;t<e;){const r=n[t];if(Yn(r))break;if(0===r)t+=2;else if("number"==typeof r)for(t++;t<e&&"string"==typeof n[t];)t++;else{if("name"===r)return n[t+1];t+=2}}}return null}(kn())),Wa(ma))},e.\u0275dir=qt({type:e,selectors:[["router-outlet"]],outputs:{activateEvents:"activate",deactivateEvents:"deactivate"},exportAs:["outlet"]}),e})();class Md{constructor(e,t,n){this.route=e,this.childContexts=t,this.parent=n}get(e,t){return e===Ih?this.route:e===Dd?this.childContexts:this.parent.get(e,t)}}class Ld{}class zd{preload(e,t){return Su(null)}}let Pd=(()=>{class e{constructor(e,t,n,r,s){this.router=e,this.injector=r,this.preloadingStrategy=s,this.loader=new Td(t,n,t=>e.triggerEvent(new Tc(t)),t=>e.triggerEvent(new _c(t)))}setUpPreloading(){this.subscription=this.router.events.pipe(Fu(e=>e instanceof xc),cc(()=>this.preload())).subscribe(()=>{})}preload(){const e=this.injector.get(Tt);return this.processRoutes(e,this.router.config)}ngOnDestroy(){this.subscription.unsubscribe()}processRoutes(e,t){const n=[];for(const r of t)if(r.loadChildren&&!r.canLoad&&r._loadedConfig){const e=r._loadedConfig;n.push(this.processRoutes(e.module,e.routes))}else r.loadChildren&&!r.canLoad?n.push(this.preloadConfig(e,r)):r.children&&n.push(this.processRoutes(e,r.children));return xe(n).pipe(Se(),me(e=>{}))}preloadConfig(e,t){return this.preloadingStrategy.preload(t,()=>this.loader.load(e.injector,t).pipe(we(e=>(t._loadedConfig=e,this.processRoutes(e.module,e.routes)))))}}return e.\u0275fac=function(t){return new(t||e)(St($d),St(fl),St(Vo),St(Aa),St(Ld))},e.\u0275prov=Be({token:e,factory:e.\u0275fac}),e})(),Bd=(()=>{class e{constructor(e,t,n={}){this.router=e,this.viewportScroller=t,this.options=n,this.lastId=0,this.lastSource="imperative",this.restoredId=0,this.store={},n.scrollPositionRestoration=n.scrollPositionRestoration||"disabled",n.anchorScrolling=n.anchorScrolling||"disabled"}init(){"disabled"!==this.options.scrollPositionRestoration&&this.viewportScroller.setHistoryScrollRestoration("manual"),this.routerEventsSubscription=this.createScrollEvents(),this.scrollEventsSubscription=this.consumeScrollEvents()}createScrollEvents(){return this.router.events.subscribe(e=>{e instanceof bc?(this.store[this.lastId]=this.viewportScroller.getScrollPosition(),this.lastSource=e.navigationTrigger,this.restoredId=e.restoredState?e.restoredState.navigationId:0):e instanceof xc&&(this.lastId=e.id,this.scheduleScrollEvent(e,this.router.parseUrl(e.urlAfterRedirects).fragment))})}consumeScrollEvents(){return this.router.events.subscribe(e=>{e instanceof Fc&&(e.position?"top"===this.options.scrollPositionRestoration?this.viewportScroller.scrollToPosition([0,0]):"enabled"===this.options.scrollPositionRestoration&&this.viewportScroller.scrollToPosition(e.position):e.anchor&&"enabled"===this.options.anchorScrolling?this.viewportScroller.scrollToAnchor(e.anchor):"disabled"!==this.options.scrollPositionRestoration&&this.viewportScroller.scrollToPosition([0,0]))})}scheduleScrollEvent(e,t){this.router.triggerEvent(new Fc(e,"popstate"===this.lastSource?this.store[this.restoredId]:null,t))}ngOnDestroy(){this.routerEventsSubscription&&this.routerEventsSubscription.unsubscribe(),this.scrollEventsSubscription&&this.scrollEventsSubscription.unsubscribe()}}return e.\u0275fac=function(e){Ga()},e.\u0275dir=qt({type:e}),e})();const Ud=new pt("ROUTER_CONFIGURATION"),Vd=new pt("ROUTER_FORROOT_GUARD"),Wd=[Pl,{provide:nh,useClass:rh},{provide:$d,useFactory:function(e,t,n,r,s,a,i,o={},l,u){const c=new $d(null,e,t,n,r,s,a,jc(i));if(l&&(c.urlHandlingStrategy=l),u&&(c.routeReuseStrategy=u),o.errorHandler&&(c.errorHandler=o.errorHandler),o.malformedUriErrorHandler&&(c.malformedUriErrorHandler=o.malformedUriErrorHandler),o.enableTracing){const e=Sl();c.events.subscribe(t=>{e.logGroup("Router Event: "+t.constructor.name),e.log(t.toString()),e.log(t),e.logGroupEnd()})}return o.onSameUrlNavigation&&(c.onSameUrlNavigation=o.onSameUrlNavigation),o.paramsInheritanceStrategy&&(c.paramsInheritanceStrategy=o.paramsInheritanceStrategy),o.urlUpdateStrategy&&(c.urlUpdateStrategy=o.urlUpdateStrategy),o.relativeLinkResolution&&(c.relativeLinkResolution=o.relativeLinkResolution),c},deps:[nh,Dd,Pl,Aa,fl,Vo,Nd,Ud,[class{},new Oe],[class{},new Oe]]},Dd,{provide:Ih,useFactory:function(e){return e.routerState.root},deps:[$d]},{provide:fl,useClass:yl},Pd,zd,class{preload(e,t){return t().pipe(Ku(()=>Su(null)))}},{provide:Ud,useValue:{enableTracing:!1}}];function Gd(){return new ol("Router",$d)}let Hd=(()=>{class e{constructor(e,t){}static forRoot(t,n){return{ngModule:e,providers:[Wd,Xd(t),{provide:Vd,useFactory:Kd,deps:[[$d,new Oe,new Le]]},{provide:Ud,useValue:n||{}},{provide:Dl,useFactory:qd,deps:[Cl,[new De(Ml),new Oe],Ud]},{provide:Bd,useFactory:jd,deps:[$d,ql,Ud]},{provide:Ld,useExisting:n&&n.preloadingStrategy?n.preloadingStrategy:zd},{provide:ol,multi:!0,useFactory:Gd},[Zd,{provide:Io,multi:!0,useFactory:Yd,deps:[Zd]},{provide:Qd,useFactory:Jd,deps:[Zd]},{provide:Ro,multi:!0,useExisting:Qd}]]}}static forChild(t){return{ngModule:e,providers:[Xd(t)]}}}return e.\u0275mod=Ht({type:e}),e.\u0275inj=Ue({factory:function(t){return new(t||e)(St(Vd,8),St($d,8))}}),e})();function jd(e,t,n){return n.scrollOffset&&t.setOffset(n.scrollOffset),new Bd(e,t,n)}function qd(e,t,n={}){return n.useHash?new zl(e,t):new Ll(e,t)}function Kd(e){if(e)throw new Error("RouterModule.forRoot() called twice. Lazy loaded modules should use RouterModule.forChild() instead.");return"guarded"}function Xd(e){return[{provide:Ra,multi:!0,useValue:e},{provide:Nd,multi:!0,useValue:e}]}let Zd=(()=>{class e{constructor(e){this.injector=e,this.initNavigation=!1,this.resultOfPreactivationDone=new re}appInitializer(){return this.injector.get(Tl,Promise.resolve(null)).then(()=>{let e=null;const t=new Promise(t=>e=t),n=this.injector.get($d),r=this.injector.get(Ud);if(this.isLegacyDisabled(r)||this.isLegacyEnabled(r))e(!0);else if("disabled"===r.initialNavigation)n.setUpLocationChangeListener(),e(!0);else{if("enabled"!==r.initialNavigation)throw new Error(`Invalid initialNavigation options: '${r.initialNavigation}'`);n.hooks.afterPreactivation=()=>this.initNavigation?Su(null):(this.initNavigation=!0,e(!0),this.resultOfPreactivationDone),n.initialNavigation()}return t})}bootstrapListener(e){const t=this.injector.get(Ud),n=this.injector.get(Pd),r=this.injector.get(Bd),s=this.injector.get($d),a=this.injector.get(dl);e===a.components[0]&&(this.isLegacyEnabled(t)?s.initialNavigation():this.isLegacyDisabled(t)&&s.setUpLocationChangeListener(),n.setUpPreloading(),r.init(),s.resetRootComponentType(a.componentTypes[0]),this.resultOfPreactivationDone.next(null),this.resultOfPreactivationDone.complete())}isLegacyEnabled(e){return"legacy_enabled"===e.initialNavigation||!0===e.initialNavigation||void 0===e.initialNavigation}isLegacyDisabled(e){return"legacy_disabled"===e.initialNavigation||!1===e.initialNavigation}}return e.\u0275fac=function(t){return new(t||e)(St(Aa))},e.\u0275prov=Be({token:e,factory:e.\u0275fac}),e})();function Yd(e){return e.appInitializer.bind(e)}function Jd(e){return e.bootstrapListener.bind(e)}const Qd=new pt("Router Initializer"),ep=[];let tp=(()=>{class e{}return e.\u0275mod=Ht({type:e}),e.\u0275inj=Ue({factory:function(t){return new(t||e)},imports:[[Hd.forRoot(ep)],Hd]}),e})();function np(e,t,n,r){return new(n||(n=Promise))((function(s,a){function i(e){try{l(r.next(e))}catch(t){a(t)}}function o(e){try{l(r.throw(e))}catch(t){a(t)}}function l(e){var t;e.done?s(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}l((r=r.apply(e,t||[])).next())}))}class rp{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class sp{refCount(e){return ap("refCount")}incRef(e){return ap("incRef")}timerAvailable(){return!0}time(e){return ap("time")}read(e){return ap("read")}readSync(e){return ap("readSync")}numDataIds(){return ap("numDataIds")}disposeData(e,t){return ap("disposeData")}write(e,t,n){return ap("write")}move(e,t,n,r,s){return ap("move")}memory(){return ap("memory")}floatPrecision(){return ap("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return ap("dispose")}}function ap(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function ip(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,cp(e,t,n)}function op(e,t){if(e.length!==t.length)throw new Error("Array sizes must match to be shuffled together First array length was "+e.length+"Second array length was "+t.length);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,cp(e,n,r),cp(t,n,r)}function lp(e,t,n){return Math.max(e,Math.min(t,n))}function up(e){return e%2==0?e:e+1}function cp(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function hp(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function dp(e,t){const n=Math.random();return t*n+(1-n)*e}function pp(e,t){let n=0;for(let r=0;r<e.length;r++){const s=Number(e[r])-Number(t[r]);n+=s*s}return n}function fp(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function mp(e,t,n=""){fp(wp(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function gp(e){fp(null!=e,()=>"The input to the tensor constructor must be a non-null value.")}function yp(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||Op(e)&&!n)for(let r=0;r<e.length;++r)yp(e[r],t,n);else t.push(e);return t}function bp(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function xp(e){return 0===e.length}function wp(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function vp(e){return e%1==0}function kp(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function Sp(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function Ip(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return ip(t),t}function Cp(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function Np(e,t=(e=>0),n){return new Promise((r,s)=>{let a=0;const i=()=>{if(e())return void r();a++;const o=t(a);null!=n&&a>=n?s():setTimeout(i,o)};i()})}function Tp(e,t){let n=1,r=-1;for(let a=0;a<e.length;++a)if(e[a]>=0)n*=e[a];else if(-1===e[a]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${a}`);r=a}else if(e[a]<0)throw Error(`Shapes can not be < 0. Found ${e[a]} at dim ${a}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const s=e.slice();return s[r]=t/n,s}function _p(e,t){const n=t.length;return fp((e=null==e?t.map((e,t)=>t):[].concat(e)).every(e=>e>=-n&&e<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis `+e),fp(e.every(e=>vp(e)),()=>"All values in axis param must be integers but got axis "+e),e.map(e=>e<0?n+e:e)}function Ep(e,t){const n=[],r=[],s=null!=t&&Array.isArray(t)&&0===t.length,a=null==t||s?null:_p(t,e).sort();let i=0;for(let o=0;o<e.length;++o){if(null!=a){if(a[i]===o&&1!==e[o])throw new Error(`Can't squeeze axis ${o} since its dim '${e[o]}' is not 1`);(null==a[i]||a[i]>o)&&1===e[o]&&(n.push(e[o]),r.push(o)),a[i]<=o&&i++}1!==e[o]&&(n.push(e[o]),r.push(o))}return{newShape:n,keptDims:r}}function Ap(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error("Unknown data type "+e);n=new Uint8Array(t)}return n}function Rp(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error("Unknown data type "+e);n=new Array(t)}return n}function $p(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function Fp(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function Dp(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function Op(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function Mp(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error("Unknown dtype "+e)}function Lp(e){if(null==e)return 0;let t=0;return e.forEach(e=>t+=e.length),t}function zp(e){return"string"==typeof e||e instanceof String}function Pp(e){return"boolean"==typeof e}function Bp(e){return"number"==typeof e}function Up(e){return Array.isArray(e)?Up(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":Bp(e)?"float32":zp(e)?"string":Pp(e)?"bool":"float32"}function Vp(e){return!!(e&&e.constructor&&e.call&&e.apply)}function Wp(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function Gp(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function Hp(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce((e,t)=>e*t)*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return function e(t,n,r,s=!1){const a=new Array;if(1===n.length){const e=n[0]*(s?2:1);for(let n=0;n<e;n++)a[n]=r[t+n]}else{const i=n[0],o=n.slice(1),l=o.reduce((e,t)=>e*t)*(s?2:1);for(let n=0;n<i;n++)a[n]=e(t+n*l,o,r,s)}return a}(0,e,t,n)}function jp(e,t){const n=qp(e,t);for(let r=0;r<n.length;r++)n[r]=1;return n}function qp(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error("Unknown data type "+t)}function Kp(e,t){const n=e.reduce((e,t)=>e*t,1);if(null==t||"float32"===t)return Hp(e,new Float32Array(n));if("int32"===t)return Hp(e,new Int32Array(n));if("bool"===t)return Hp(e,new Uint8Array(n));throw new Error("Unknown data type "+t)}function Xp(e){e.forEach(t=>{fp(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function Zp(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let s=0;s<e.length-1;++s)r+=n[s]*e[s];return r}function Yp(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let s=0;s<r.length-1;++s)r[s]=Math.floor(e/n[s]),e-=r[s]*n[s];return r[r.length-1]=e,r}function Jp(e){return e&&e.then&&"function"==typeof e.then}class Qp{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=ef,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(tf().getBool("IS_TEST")||tf().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];tf().getBool("IS_TEST")||tf().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Jp(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);"tfjsflags"in e&&e.tfjsflags.split(",").forEach(e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)})}}function ef(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("="))),t}function tf(){return rf}let nf,rf=null;function sf(){if(null==nf){let e;if("undefined"!=typeof window)e=window;else if("undefined"!=typeof global)e=global;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}nf=e}return nf}function af(e,t){const n=function(){const e=sf();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}function of(...e){tf().getBool("IS_TEST")||tf().getBool("PROD")||console.warn(...e)}function lf(...e){tf().getBool("IS_TEST")||tf().getBool("PROD")||console.log(...e)}const uf=af("kernelRegistry",()=>new Map),cf=af("gradRegistry",()=>new Map);function hf(e,t){const n=gf(e,t);return uf.get(n)}function df(e){return cf.get(e)}function pf(e){const t=uf.entries(),n=[];for(;;){const{done:r,value:s}=t.next();if(r)break;const[a,i]=s,[o]=a.split("_");o===e&&n.push(i)}return n}function ff(e){const{kernelName:t,backendName:n}=e,r=gf(t,n);uf.has(r)&&of(`The kernel '${t}' for backend '${n}' is already registered`),uf.set(r,e)}function mf(e){const{kernelName:t}=e;cf.has(t)&&tf().getBool("DEBUG")&&of(`Overriding the gradient for '${t}'`),cf.set(t,e)}function gf(e,t){return`${t}_${e}`}var yf=n("2lpH");const bf=n.n(yf).a||yf;function xf(e){return bf.fromString(e,!0,16)}const wf=xf("c3a5c85c97cb3127"),vf=xf("b492b66fbe98f273"),kf=xf("9ae16a3b2f90404f");function Sf(e){return e.xor(e.shru(47))}function If(e,t,n){const r=e.slice(t,t+n);return bf.fromBytes(Array.from(r),!0,!0)}function Cf(e,t){return If(e,t,8)}function Nf(e,t){return If(e,t,4)}function Tf(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function _f(e,t,n=xf("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let s=t.xor(r).mul(n);return s=s.xor(s.shru(47)),s=s.mul(n),s}function Ef(e,t,n,r){return function(e,t,n,r,s,a){s=s.add(e),a=Tf(a.add(s).add(r),21);const i=s;return s=(s=s.add(t)).add(n),a=a.add(Tf(s,44)),[s.add(r),a.add(i)]}(Cf(e,t),Cf(e,t+8),Cf(e,t+16),Cf(e,t+24),n,r)}function Af(e,t=e.length){const n=bf.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=kf.add(2*t),r=Cf(e,0).add(kf),s=Cf(e,t-8);return _f(Tf(s,37).mul(n).add(r),Tf(r,25).add(s).mul(n),n)}if(t>=4){const n=kf.add(2*t);return _f(Nf(e,0).shl(3).add(t),Nf(e,t-4),n)}if(t>0){const n=t+(e[t-1]<<2);return Sf(kf.mul(e[0]+(e[t>>1]<<8)).xor(wf.mul(n))).mul(kf)}return kf}(e,t):function(e,t=e.length){const n=kf.add(2*t),r=Cf(e,0).mul(vf),s=Cf(e,8),a=Cf(e,t-8).mul(n),i=Cf(e,t-16).mul(kf);return _f(Tf(r.add(s),43).add(Tf(a,30)).add(i),r.add(Tf(s.add(kf),18)).add(a),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=kf.add(2*t),r=Cf(e,0).mul(kf),s=Cf(e,8),a=Cf(e,t-8).mul(n),i=Cf(e,t-16).mul(kf),o=Tf(r.add(s),43).add(Tf(a,30)).add(i),l=_f(o,r.add(Tf(s.add(kf),18)).add(a),n),u=Cf(e,16).mul(n),c=Cf(e,24),h=o.add(Cf(e,t-32)).mul(n),d=l.add(Cf(e,t-24)).mul(n);return _f(Tf(u.add(c),43).add(Tf(h,30)).add(d),u.add(Tf(c.add(r),18)).add(h),n)}(e,t);let r=n,s=n.mul(vf).add(113),a=Sf(s.mul(kf).add(113)).mul(kf),i=[bf.UZERO,bf.UZERO],o=[bf.UZERO,bf.UZERO];r=r.mul(kf).add(Cf(e,0));let l=0;const u=64*(t-1>>6),c=u+(t-1&63)-63;do{r=Tf(r.add(s).add(i[0]).add(Cf(e,l+8)),37).mul(vf),s=Tf(s.add(i[1]).add(Cf(e,l+48)),42).mul(vf),r=r.xor(o[1]),s=s.add(i[0]).add(Cf(e,l+40)),a=Tf(a.add(o[0]),33).mul(vf),i=Ef(e,l,i[1].mul(vf),r.add(o[0])),o=Ef(e,l+32,a.add(o[1]),s.add(Cf(e,l+16))),[a,r]=[r,a],l+=64}while(l!==u);const h=vf.add(a.and(255).shl(1));return l=c,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),r=Tf(r.add(s).add(i[0]).add(Cf(e,l+8)),37).mul(h),s=Tf(s.add(i[1]).add(Cf(e,l+48)),42).mul(h),r=r.xor(o[1].mul(9)),s=s.add(i[0].mul(9).add(Cf(e,l+40))),a=Tf(a.add(o[0]),33).mul(h),i=Ef(e,l,i[1].mul(h),r.add(o[0])),o=Ef(e,l+32,a.add(o[1]),s.add(Cf(e,l+16))),[a,r]=[r,a],_f(_f(i[0],o[0],h).add(Sf(s).mul(wf)).add(a),_f(i[1],o[1],h).add(r),h)}function Rf(e,t){return"string"===t?Of(e):$f([e],t)}function $f(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=yp(e)),tf().getBool("DEBUG")&&$p(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error("Unknown data type "+t)}function Ff(){return tf().platform.now()}function Df(e,t){return tf().platform.fetch(e,t)}function Of(e,t="utf-8"){return t=t||"utf-8",tf().platform.encode(e,t)}function Mf(e,t="utf-8"){return t=t||"utf-8",tf().platform.decode(e,t)}class Lf{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new Pf)}profileKernel(e,t,n){let r;const s=()=>{r=n()};let a;const i=Ff();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(s);else{s();for(const e of r)e.dataSync();a=Promise.resolve({kernelMs:Ff()-i})}if(tf().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let o=0;o<r.length;o++){const t=r[o];t.data().then(n=>{zf(n,t.dtype,e)})}return{kernelName:e,outputs:r,inputs:t,timeMs:a.then(e=>e.kernelMs),extraInfo:a.then(e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:s,extraInfo:a}=e;n.forEach(e=>{Promise.all([e.data(),r,a]).then(n=>{this.logger.logKernelProfile(t,e,n[0],n[1],s,n[2])})})}}function zf(e,t,n){if("float32"!==t)return!1;for(let r=0;r<e.length;r++){const t=e[r];if(isNaN(t)||!isFinite(t))return console.warn(`Found ${t} in the result of '${n}'`),!0}return!1}class Pf{logKernelProfile(e,t,n,r,s,a){const i="number"==typeof r?Cp(r+"ms",9):r.error,o=Cp(e,25),l=t.rank,u=t.size,c=Cp(t.shape.toString(),14);let h="";for(const d in s){const e=s[d];if(null!=e){const n=e.shape||t.shape,r=n.length;h+=`${d}: ${r}D ${r>0?n:""} `}}console.log(`%c${o}\t%c${i}\t%c${l}D ${c}\t%c${u}\t%c${h}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function Bf(e,t,n){let r;return r=Array.isArray(e)?parseFloat(e[0].toFixed(7))+" + "+parseFloat(e[1].toFixed(7))+"j":zp(e)?`'${e}'`:"bool"===n?Uf(e):parseFloat(e.toFixed(7)).toString(),Cp(r,t)}function Uf(e){return 0===e?"false":"true"}function Vf(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class Wf{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=bp(e),null!=n){const e=n.length;fp(e===this.size,()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`)}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||Rp(t,this.size),this.strides=Gp(e)}set(e,...t){0===t.length&&(t=[0]),fp(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const r of e){if(r<0||r>=this.shape[t])throw new Error(`Requested out of range element at ${e}.   Buffer shape=`+this.shape);t++}let n=e[e.length-1];for(let r=0;r<e.length-1;++r)n+=this.strides[r]*e[r];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Gf().makeTensor(this.values,this.shape,this.dtype)}}let Gf=null,Hf=null,jf=null;class qf{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=bp(e),this.strides=Gp(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return Hf.buffer(this.shape,this.dtype,e)}bufferSync(){return Hf.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Hp(this.shape,e,"complex64"===this.dtype)}arraySync(){return Hp(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=Gf().read(this.dataId);if("string"===this.dtype){const n=await e;try{return n.map(e=>Mf(e))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();const e=Gf().readSync(this.dataId);if("string"===this.dtype)try{return e.map(e=>Mf(e))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await Gf().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Gf().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Hf.print(this,e)}clone(){return this.throwIfDisposed(),Hf.clone(this)}toString(e=!1){return function(e,t,n,r){const s=Gp(t),a=function(e,t,n,r){const s=bp(t),a=r[r.length-1],i=new Array(a).fill(0),o=t.length,l="complex64"===n?Vf(e):e;if(o>1)for(let u=0;u<s/a;u++){const e=u*a;for(let t=0;t<a;t++)i[t]=Math.max(i[t],Bf(l[e+t],0,n).length)}return i}(e,t,n,s),i=t.length,o=function e(t,n,r,s,a,i=!0){const o="complex64"===r?2:1,l=n[0],u=n.length;if(0===u)return"complex64"===r?[Bf(Vf(t)[0],0,r)]:"bool"===r?[Uf(t[0])]:[t[0].toString()];if(1===u){if(l>20){let e=Array.from(t.slice(0,3*o)),n=Array.from(t.slice((l-3)*o,l*o));return"complex64"===r&&(e=Vf(e),n=Vf(n)),["["+e.map((e,t)=>Bf(e,a[t],r)).join(", ")+", ..., "+n.map((e,t)=>Bf(e,a[l-3+t],r)).join(", ")+"]"]}return["["+("complex64"===r?Vf(t):Array.from(t)).map((e,t)=>Bf(e,a[t],r)).join(", ")+"]"]}const c=n.slice(1),h=s.slice(1),d=s[0]*o,p=[];if(l>20){for(let n=0;n<3;n++){const s=n*d;p.push(...e(t.slice(s,s+d),c,r,h,a,!1))}p.push("...");for(let n=l-3;n<l;n++){const s=n*d;p.push(...e(t.slice(s,s+d),c,r,h,a,n===l-1))}}else for(let g=0;g<l;g++){const n=g*d;p.push(...e(t.slice(n,n+d),c,r,h,a,g===l-1))}const f=2===u?",":"";p[0]="["+p[0]+f;for(let g=1;g<p.length-1;g++)p[g]=" "+p[g]+f;let m=",\n";for(let g=2;g<u;g++)m+="\n";return p[p.length-1]=" "+p[p.length-1]+"]"+(i?"":m),p}(e,t,n,s,a),l=["Tensor"];return r&&(l.push("  dtype: "+n),l.push("  rank: "+i),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map(e=>"    "+e).join("\n")),l.join("\n")}(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Hf.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Gf().makeVariable(this,e,t,n)}}function Kf(){return af("Tensor",()=>qf)}Object.defineProperty(qf,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),Kf();class Xf extends qf{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!wp(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Gf().disposeTensor(this),this.dataId=e.dataId,Gf().incRef(this,null)}dispose(){Gf().disposeVariable(this),this.isDisposedInternal=!0}}var Zf,Yf,Jf,Qf,em;Object.defineProperty(Xf,Symbol.hasInstance,{value:e=>e instanceof qf&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(Zf||(Zf={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(Yf||(Yf={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(Jf||(Jf={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(Qf||(Qf={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(em||(em={}));const tm={float32:Qf,int32:Yf,bool:Jf,complex64:em};function nm(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return tm[e][t]}function rm(e){return nm(e,"int32")}function sm(e,t){if(e.dtype===t.dtype)return[e,t];const n=nm(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function am(e,t){fp(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`)}function im(e,t){return t.some(t=>t.id===e.id)}function om(e){const t=[];return function e(t,n,r){if(null==t)return;if(t instanceof qf)return void n.push(t);if(s=t,!Array.isArray(s)&&"object"!=typeof s)return;var s;const a=t;for(const i in a){const t=a[i];r.has(t)||(r.add(t),e(t,n,r))}}(e,t,new Set),t}function lm(e){return null!=e.kernelName}class um{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class cm{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new um}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then(()=>{});if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void(await this.setBackend(n))}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(of(e+" backend was already registered. Reusing existing backend factory."),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Lf(this.backendInstance),!0}setupRegisteredKernels(){pf(this.backendName).forEach(e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){pf(e).forEach(t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])})}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof sp||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then(n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0))).catch(n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,of(`Initialization of backend ${e} failed`),of(n.stack||n.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(n){return of(`Initialization of backend ${e} failed`),of(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(e+" backend not found in registry");this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,s=this.readSync(t),a=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,s,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun(()=>this.startScope(r),()=>this.endScope(n),()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(r){throw t(),r}}nextTensorId(){return cm.nextTensorId++}nextVariableId(){return cm.nextVariableId++}clone(e){const t=dm.runKernel("Identity",{x:e});return this.addTapeNode(this.state.activeScope.name,{x:e},[t],e=>({x:()=>dm.runKernel("Cast",{x:e},{dtype:"float32"})}),[],{}),t}runKernel(e,t,n){if(null==hf(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let s=0;n.forEach(e=>{s+="complex64"===e.dtype?3:1});const a=r-t-s-this.state.numDataMovesStack[this.state.numDataMovesStack.length-1];if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),s=this.state.numBytes,a=this.state.numTensors;let i,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);const l=lm(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(lm(e)){const{kernelName:t,inputs:s,attrs:a}=e,l=hf(t,this.backendName);fp(null!=l,()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`),i=()=>{const e=this.backend.numDataIds();o=l.kernelFunc({inputs:s,attrs:a,backend:this.backend});const i=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const u=i.map(e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)});if(r){const e=this.getTensorsForGradient(t,s,u);n=this.saveTensorsForBackwardMode(e)}return u}}else{const{forwardFunc:t}=e,s=e=>{r&&(n=e.map(e=>this.keep(this.clone(e))))};i=()=>{const e=this.backend.numDataIds();o=this.tidy(()=>t(this.backend,s));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:u,attrs:c}=e,h=lm(e)?null:e.backwardsFunc;let d;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(d=this.profiler.profileKernel(l,u,()=>i()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs):t=i()}),r&&this.addTapeNode(l,u,t,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map(e=>null!=u[e]?u[e].shape:null),outputShapes:t.map(e=>e.shape),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(e=>this.keep(this.clone(e)))}getTensorsForGradient(e,t,n){const r=df(e);if(null!=r){const e=r.inputsToSave||[],s=r.outputsToSave||[];let a;r.saveAllInputs?(fp(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),a=Object.keys(t).map(e=>t[e])):a=e.map(e=>t[e]);const i=n.filter((e,t)=>s[t]);return a.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");r=r||this.backend;let s=e;"string"===(n=n||"float32")&&zp(e[0])&&(s=e.map(e=>Of(e)));const a=r.write(s,t,n),i=new qf(t,n,a,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){const e=this.state.tensorInfo.get(a),t=Lp(s);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){const s=new qf(t,n=n||"float32",e,this.nextTensorId());return this.trackTensor(s,r),s}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const s=new Xf(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*Mp(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Xf||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*Mp(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables)this.disposeVariable(this.state.registeredVariables[e])}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(e=>e.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,s,a){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},o=df(e);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=e=>(e=e.map((e,t)=>{if(null==e){const e=n[t],r=qp(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e}),r(e.length>1?e:e[0],s,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=om(e),n=new Set(t.map(e=>e.id));for(let s=0;s<this.state.activeScope.track.length;s++){const e=this.state.activeScope.track[s];e.kept||n.has(e.id)||e.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(e=>{e.kept||e.scopeId!==r.id||this.track(e)})}gradients(e,t,n,r=!1){if(fp(t.length>0,()=>"gradients() received an empty list of xs."),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));fp(s instanceof qf,()=>"The result y returned by f() must be a tensor.");const a=function(e,t,n){const r={},s={};for(let l=0;l<t.length;l++)r[t[l].id]=!0;for(let l=0;l<e.length;l++){const n=e[l],a=n.inputs;for(const e in a){const i=a[e];let o=!1;for(let e=0;e<t.length;e++)if(r[i.id]){n.outputs.forEach(e=>r[e.id]=!0),o=!0,s[n.id]=!0;break}if(o)break}}const a={};a[n.id]=!0;const i={};for(let l=e.length-1;l>=0;l--){const t=e[l],n=t.inputs;for(let e=0;e<t.outputs.length;e++)if(a[t.outputs[e].id]){for(const e in n)a[n[e].id]=!0,i[t.id]=!0;break}}const o=[];for(let l=0;l<e.length;l++){const t=e[l];if(s[t.id]&&i[t.id]){const e={};for(const s in t.inputs){const n=t.inputs[s];r[n.id]&&(e[s]=n)}const n=Object.assign({},t);n.inputs=e,n.outputs=t.outputs,o.push(n)}}return o}(this.state.activeTape,t,s);if(!r&&0===a.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const e={};e[s.id]=null==n?function(e){const t=jp(bp(e),"float32");return dm.makeTensor(t,e,"float32")}(s.shape):n,function(e,t,n,r){for(let s=t.length-1;s>=0;s--){const a=t[s],i=[];if(a.outputs.forEach(t=>{const n=e[t.id];i.push(null!=n?n:null)}),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const o=a.gradient(i);for(const t in a.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const s=n(()=>o[t]());if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${s.dtype}'`);const i=a.inputs[t];if(!wp(s.shape,i.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${t}' has shape '${s.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=s;else{const t=e[i.id];e[i.id]=r(t,s),t.dispose()}}}}(e,a,e=>this.tidy(e),pm);const r=t.map(t=>e[t.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(e=>{for(const t of e.saved)t.dispose()}),this.state.activeTape=null),{value:s,grads:r}})}customGrad(e){return fp(Vp(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{let n;fp(t.every(e=>e instanceof qf),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");const r={};return t.forEach((e,t)=>{r[t]=e}),this.runKernelFunc({forwardFunc:(r,s)=>(n=e(...t,s),fp(n.value instanceof qf,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),fp(Vp(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),backwardsFunc:(e,r)=>{const s=n.gradFunc(e,r),a=Array.isArray(s)?s:[s];fp(a.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),fp(a.every(e=>e instanceof qf),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const i={};return a.forEach((e,t)=>{i[t]=()=>e}),i},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){const t=Ff(),n=await this.backend.time(e);return n.wallMs=Ff()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new um;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function hm(){const e=sf();if(null==e._tfengine){const t=new Qp(e);e._tfengine=new cm(t)}return rf=e._tfengine.ENV,Gf=()=>e._tfengine,e._tfengine}cm.nextTensorId=0,cm.nextVariableId=0;const dm=hm();function pm(e,t){return dm.runKernel("Add",{a:e,b:t})}let fm;function mm(e){fm=e}function gm(e){if(void 0!==fm)return fm;if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function ym(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const bm=tf();function xm(e,t){let n=e;if(Op(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||Op(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&tf().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&function e(t,n,r){if(r=r||[],!Array.isArray(t)&&!Op(t))return void fp(0===n.length,()=>`Element arr[${r.join("][")}] is a primitive, but should be an array/TypedArray of ${n[0]} elements`);fp(n.length>0,()=>`Element arr[${r.join("][")}] should be a primitive, but is an array of ${t.length} elements`),fp(t.length===n[0],()=>`Element arr[${r.join("][")}] should have ${n[0]} elements, but has ${t.length} elements`);const s=n.slice(1);for(let a=0;a<t.length;++a)e(t[a],s,r.concat(a))}(e,r,[]),r}function wm(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function vm(e,t,n,r="numeric"){if(e instanceof qf)return wm(r,e.dtype,t,n),e;let s=Up(e);if("string"!==s&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),wm(r,s,t,n),null==e||!Op(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${null==e?"null":e.constructor.name}'`);const a=xm(e,s);Op(e)||Array.isArray(e)||(e=[e]);const i="string"!==s?$f(e,s):yp(e,[],!0);return dm.makeTensor(i,a,s)}function km(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((e,s)=>vm(e,`${t}[${s}]`,n,r))}function Sm(e){const t=Object.keys(e);if(1!==t.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+t.length+" keys.");let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const s=(...e)=>{dm.startScope(n);try{const t=r(...e);return Jp(t)&&console.error("Cannot return a Promise inside of tidy."),dm.endScope(t),t}catch(t){throw dm.endScope(null),t}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}bm.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),bm.registerFlag("IS_BROWSER",()=>ym()),bm.registerFlag("IS_NODE",()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node),bm.registerFlag("IS_CHROME",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),bm.registerFlag("PROD",()=>!1),bm.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>bm.getBool("DEBUG")),bm.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),bm.registerFlag("IS_TEST",()=>!1),bm.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0),bm.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);const Im=Sm({complex_:function(e,t){const n=vm(e,"real","complex"),r=vm(t,"imag","complex");return mp(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`),dm.runKernel("Complex",{real:n,imag:r})}});function Cm(e,t,n,r){if(null==r&&(r=Up(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Op(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Xp(t);const e=bp(t),r=bp(n);fp(e===r,()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`);for(let s=0;s<n.length;++s){const e=n[s],r=s!==n.length-1||e!==bp(t.slice(s));fp(n[s]===t[s]||!r,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `)}}return Op(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?$f(e,r):yp(e,[],!0),dm.makeTensor(e,t,r)}function Nm(e,t,n){return Cm(e,t,xm(e,n),n)}const Tm={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function _m(e,t){const n=[],r=[],s=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);for(let a=0;a<s.length;++a){const i=s[a],o=Array.isArray(e)?e[a].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const l={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise(async e=>{const t=await o.bytes(),n=t.reduce((e,t)=>e+t.length,0)+4*t.length,r=new Uint8Array(n);let s=0;for(let a=0;a<t.length;a++){const e=t[a],n=new Uint8Array(new Uint32Array([e.length]).buffer);r.set(n,s),s+=4,r.set(e,s),s+=e.length}e(r)});r.push(e)}else r.push(o.data());null!=t&&(l.group=t),n.push(l)}return{data:Am(await Promise.all(r)),specs:n}}function Em(e,t){const n={};let r,s=0;for(const a of t){const t=a.name,i=a.dtype,o=a.shape,l=bp(o);let u;if("quantization"in a){const n=a.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${a.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${a.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==i)throw new Error(`Weight ${a.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${i}.`)}const o=Tm[n.dtype],c=e.slice(s,s+l*o),h="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===i)if("uint8"===n.dtype||"uint16"===n.dtype){u=new Float32Array(h.length);for(let e=0;e<h.length;e++)u[e]=h[e]*n.scale+n.min}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=zm()),u=r(h)}else{if("int32"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);u=new Int32Array(h.length);for(let e=0;e<h.length;e++)u[e]=Math.round(h[e]*n.scale+n.min)}s+=l*o}else if("string"===i){const t=bp(a.shape);u=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(s,s+4))[0];s+=4;const n=new Uint8Array(e.slice(s,s+t));u.push(n),s+=t}}else{const r=Tm[i],a=e.slice(s,s+l*r);if("float32"===i)u=new Float32Array(a);else if("int32"===i)u=new Int32Array(a);else if("bool"===i)u=new Uint8Array(a);else{if("complex64"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);{u=new Float32Array(a);const e=new Float32Array(u.length/2),r=new Float32Array(u.length/2);for(let t=0;t<e.length;t++)e[t]=u[2*t],r[t]=u[2*t+1];const s=Nm(e,o,"float32"),i=Nm(r,o,"float32");n[t]=Im(s,i),s.dispose(),i.dispose()}}s+=l*r}"complex64"!==i&&(n[t]=Nm(u,o,i))}return n}function Am(e){if(null===e)throw new Error("Invalid input value: "+JSON.stringify(e));let t=0;const n=[];e.forEach(e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: "+e.constructor.name)});const r=new Uint8Array(t);let s=0;return n.forEach(e=>{r.set(new Uint8Array(e.buffer),s),s+=e.byteLength}),r.buffer}const Rm="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function $m(e){return Rm?Buffer.byteLength(e):new Blob([e]).size}function Fm(e){if(1===e.length)return e[0];let t=0;e.forEach(e=>{t+=e.byteLength});const n=new Uint8Array(t);let r=0;return e.forEach(e=>{n.set(new Uint8Array(e),r),r+=e.byteLength}),n.buffer}function Dm(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function Om(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}async function Mm(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),null!=e.weightsManifest){const[r,s]=await t(e.weightsManifest);n.weightSpecs=r,n.weightData=s}return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),n}function Lm(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:$m(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:$m(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function zm(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const s=new ArrayBuffer(4*r.length),a=new Uint32Array(s);for(let i=0;i<r.length;i++){const s=r[i];a[i]=e[n[s>>10]+(1023&s)]+t[s>>10]}return new Float32Array(s)}}class Pm{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Pm.instance&&(Pm.instance=new Pm),Pm.instance}static registerSaveRouter(e){Pm.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Pm.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Pm.getHandlers(e,"save")}static getLoadHandlers(e,t){return Pm.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?Pm.getInstance().loadRouters:Pm.getInstance().saveRouters).forEach(t=>{const s=t(e,n);null!==s&&r.push(s)}),r}}const Bm=e=>Pm.registerSaveRouter(e),Um=e=>Pm.registerLoadRouter(e),Vm=e=>Pm.getSaveHandlers(e),Wm=(e,t)=>Pm.getLoadHandlers(e,t);function Gm(){if(!tf().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Hm(e){const t=e.result;t.createObjectStore("models_store",{keyPath:"modelPath"}),t.createObjectStore("model_info_store",{keyPath:"modelPath"})}class jm{constructor(e){if(this.indexedDB=Gm(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((e,n)=>{const r=this.indexedDB.open("tensorflowjs",1);r.onupgradeneeded=()=>Hm(r),r.onsuccess=()=>{const s=r.result;if(null==t){const t=s.transaction("models_store","readonly"),r=t.objectStore("models_store").get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(s.close(),n(r.error)),t.oncomplete=()=>s.close()}else{const r=Lm(t),a=s.transaction("model_info_store","readwrite");let i=a.objectStore("model_info_store");const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:r});let l;o.onsuccess=()=>{l=s.transaction("models_store","readwrite");const o=l.objectStore("models_store").put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});o.onsuccess=()=>e({modelArtifactsInfo:r}),o.onerror=e=>{i=a.objectStore("model_info_store");const t=i.delete(this.modelPath);t.onsuccess=()=>(s.close(),n(o.error)),t.onerror=e=>(s.close(),n(o.error))}},o.onerror=e=>(s.close(),n(o.error)),a.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}}},r.onerror=e=>n(r.error)})}}jm.URL_SCHEME="indexeddb://";const qm=e=>{return tf().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(jm.URL_SCHEME)?(t=e.slice(jm.URL_SCHEME.length),new jm(t)):null;var t};Pm.registerSaveRouter(qm),Pm.registerLoadRouter(qm);class Km{constructor(){this.indexedDB=Gm()}async listModels(){return new Promise((e,t)=>{const n=this.indexedDB.open("tensorflowjs",1);n.onupgradeneeded=()=>Hm(n),n.onsuccess=()=>{const r=n.result,s=r.transaction("model_info_store","readonly"),a=s.objectStore("model_info_store").getAll();a.onsuccess=()=>{const t={};for(const e of a.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},a.onerror=e=>(r.close(),t(a.error)),s.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)})}async removeModel(e){var t;return e=(t=e).startsWith(jm.URL_SCHEME)?t.slice(jm.URL_SCHEME.length):t,new Promise((t,n)=>{const r=this.indexedDB.open("tensorflowjs",1);r.onupgradeneeded=()=>Hm(r),r.onsuccess=()=>{const s=r.result,a=s.transaction("model_info_store","readwrite"),i=a.objectStore("model_info_store"),o=i.get(e);let l;o.onsuccess=()=>{if(null==o.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=i.delete(e),a=()=>{l=s.transaction("models_store","readwrite");const r=l.objectStore("models_store").delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=a,r.onerror=e=>(a(),s.close(),n(o.error))}},o.onerror=e=>(s.close(),n(o.error)),a.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)})}}const Xm="tensorflowjs_models",Zm="info",Ym="model_topology",Jm="weight_specs",Qm="weight_data",eg="model_metadata";function tg(e){return{info:[Xm,e,Zm].join("/"),topology:[Xm,e,Ym].join("/"),weightSpecs:[Xm,e,Jm].join("/"),weightData:[Xm,e,Qm].join("/"),modelMetadata:[Xm,e,eg].join("/")}}function ng(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function rg(e){const t=e.split("/");if(t.length<3)throw new Error("Invalid key format: "+e);return t.slice(1,t.length-1).join("/")}class sg{constructor(e){if(!tf().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=tg(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(e.modelTopology),r=JSON.stringify(e.weightSpecs),s=Lm(e);try{return this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,function(e){if(Rm)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let r=0,s=t.length;r<s;r++)n+=String.fromCharCode(t[r]);return btoa(n)}(e.weightData)),this.LS.setItem(this.keys.modelMetadata,JSON.stringify({format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0})),{modelArtifactsInfo:s}}catch(t){throw ng(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const e=JSON.parse(s);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(Rm){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let r=0;r<t.length;++r)n.set([t.charCodeAt(r)],r);return n.buffer}(a),t}}sg.URL_SCHEME="localstorage://";const ag=e=>{return tf().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(sg.URL_SCHEME)?(t=e.slice(sg.URL_SCHEME.length),new sg(t)):null;var t};Pm.registerSaveRouter(ag),Pm.registerLoadRouter(ag);class ig{constructor(){fp(tf().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),fp("undefined"==typeof window||void 0!==window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=Xm+"/",n="/"+Zm;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);s.startsWith(t)&&s.endsWith(n)&&(e[rg(s)]=JSON.parse(this.LS.getItem(s)))}return e}async removeModel(e){var t;const n=tg(e=(t=e).startsWith(sg.URL_SCHEME)?t.slice(sg.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return ng(n),r}}class og{constructor(){this.managers={}}static getInstance(){return null==og.instance&&(og.instance=new og),og.instance}static registerManager(e,t){fp(null!=e,()=>"scheme must not be undefined or null."),e.endsWith("://")&&(e=e.slice(0,e.indexOf("://"))),fp(e.length>0,()=>"scheme must not be an empty string.");const n=og.getInstance();fp(null==n.managers[e],()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}function lg(e){if(-1===e.indexOf("://"))throw new Error("The url string provided does not contain a scheme. Supported schemes are: "+og.getSchemes().join(","));return{scheme:e.split("://")[0],path:e.split("://")[1]}}async function ug(e,t,n=!1){fp(e!==t,()=>`Old path and new path are the same: '${e}'`);const r=Pm.getLoadHandlers(e);fp(r.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`),fp(r.length<2,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`);const s=r[0],a=Pm.getSaveHandlers(t);fp(a.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),fp(a.length<2,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`);const i=a[0],o=lg(e).scheme,l=lg(e).path,u=o===lg(e).scheme,c=await s.load();n&&u&&await og.getManager(o).removeModel(l);const h=await i.save(c);return n&&!u&&await og.getManager(o).removeModel(l),h.modelArtifactsInfo}async function cg(){const e=og.getSchemes(),t={};for(const n of e){const e=await og.getManager(n).listModels();for(const r in e)t[n+"://"+r]=e[r]}return t}async function hg(e){const t=lg(e);return og.getManager(t.scheme).removeModel(t.path)}async function dg(e,t){return ug(e,t,!1)}async function pg(e,t){return ug(e,t,!0)}class fg{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Browser's encoder only supports utf-8, but got "+t);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(tf().get("IS_BROWSER")){tf().setPlatform("browser",new fg);try{og.registerManager(sg.URL_SCHEME,new ig)}catch(dG){}try{og.registerManager(jm.URL_SCHEME,new Km)}catch(dG){}}let mg;function gg(e,t="float32",n){return t=t||"float32",Xp(e),new Wf(e,t,n)}tf().get("IS_NODE")&&tf().setPlatform("node",new class{constructor(){this.util=n(2),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=tf().global.fetch?tf().global.fetch(e,t):(null==mg&&(mg=n(1)),mg(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Node built-in encoder only supports utf-8, but got "+t);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});const yg=Sm({cast_:function(e,t){const n=vm(e,"x","cast");if(!Fp(t))throw new Error("Failed to cast to unknown dtype "+t);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");return dm.runKernel("Cast",{x:n},{dtype:t})}}),bg=Sm({clone_:function(e){const t=vm(e,"x","clone","string_or_numeric");return dm.runKernel("Identity",{x:t})}});function xg(e){return new Promise(e=>setTimeout(e)).then(e)}hm(),Hf={buffer:gg,cast:yg,clone:bg,print:function(e,t=!1){console.log(e.toString(t))}};class wg{constructor(e){if(!tf().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(wg.URL_SCHEME)&&(e=e.slice(wg.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=Om(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),s=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(s.download=this.modelJsonFileName,s.href=r,await xg(()=>s.dispatchEvent(new MouseEvent("click"))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await xg(()=>e.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Lm(e)}}}}wg.URL_SCHEME="downloads://";class vg{constructor(e){if(null==e||e.length<1)throw new Error("When calling browserFiles, at least 1 file is required, but received "+e);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{const n=new FileReader;n.onload=n=>{const r=JSON.parse(n.target.result),s=r.modelTopology;if(null==s)return void t(new Error("modelTopology field is missing from file "+this.jsonFile.name));if(null==r.weightsManifest)return void t(new Error("weightManifest field is missing from file "+this.jsonFile.name));if(0===this.weightsFiles.length)return void e({modelTopology:s});const a=Mm(r,e=>this.loadWeights(e));e(a)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)})}loadWeights(e){const t=[],n=[];for(const a of e)t.push(...a.weights),n.push(...a.paths);const r=this.checkManifestAndWeightFiles(e),s=n.map(e=>this.loadWeightsFile(e,r[e]));return Promise.all(s).then(e=>[t,Fm(e)])}loadWeightsFile(e,t){return new Promise((n,r)=>{const s=new FileReader;s.onload=e=>{n(e.target.result)},s.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),s.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map(e=>Dm(e.name)),r={};for(const s of e)s.paths.forEach(e=>{const s=Dm(e);if(-1!==t.indexOf(s))throw new Error(`Duplicate file basename found in weights manifest: '${s}'`);if(t.push(s),-1===n.indexOf(s))throw new Error(`Weight file with basename '${s}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(s)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}function kg(e){return new vg(e)}function Sg(e,t,n,r){!function(e){fp(null!=e&&Array.isArray(e)&&e.length>0,()=>"promises must be a none empty array")}(e),function(e,t){fp(e>=0&&e<=1,()=>"Progress fraction must be in range [0, 1], but got startFraction "+e),fp(t>=0&&t<=1,()=>"Progress fraction must be in range [0, 1], but got endFraction "+t),fp(t>=e,()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction `+t)}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(e.map(a=>(a.then(a=>{const i=n+ ++s/e.length*(r-n);return t(i),a}),a)))}async function Ig(e,t){null==t&&(t={});const n=null==t.fetchFunc?tf().platform.fetch:t.fetchFunc,r=e.map(e=>n(e,t.requestInit,{isBinary:!0})),s=(null==t.onProgress?await Promise.all(r):await Sg(r,t.onProgress,0,.5)).map(e=>e.arrayBuffer());return null==t.onProgress?await Promise.all(s):await Sg(s,t.onProgress,.5,1)}async function Cg(e,t="",n,r){return Ng(e=>Ig(e,{requestInit:r}))(e,t,n)}function Ng(e){return async(t,n="",r)=>{const s=t.map(()=>!1),a={},i=null!=r?r.map(()=>!1):[],o=[];if(t.forEach((e,t)=>{let n=0;e.weights.forEach(e=>{const l=Tm["quantization"in e?e.quantization.dtype:e.dtype]*bp(e.shape),u=()=>{s[t]=!0,null==a[t]&&(a[t]=[]),a[t].push({manifestEntry:e,groupOffset:n,sizeBytes:l})};null!=r?r.forEach((t,n)=>{t===e.name&&(u(),i[n]=!0)}):u(),o.push(e.name),n+=l})}),!i.every(e=>e)){const e=r.filter((e,t)=>!i[t]);throw new Error("Could not find weights in manifest with names: "+e.join(", ")+". \nManifest JSON has weights with names: "+o.join(", ")+".")}const l=s.reduce((e,t,n)=>(t&&e.push(n),e),[]),u=[];l.forEach(e=>{t[e].paths.forEach(e=>{const t=n+(n.endsWith("/")?"":"/")+e;u.push(t)})});const c=await e(u),h={};let d=0;return l.forEach(e=>{const n=t[e].paths.length;let r=0;for(let t=0;t<n;t++)r+=c[d+t].byteLength;const s=new ArrayBuffer(r),i=new Uint8Array(s);let o=0;for(let t=0;t<n;t++){const e=new Uint8Array(c[d+t]);i.set(e,o),o+=e.byteLength}a[e].forEach(e=>{const t=Em(s.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const n in t)h[n]=t[n]}),d+=n}),h}}Pm.registerSaveRouter(e=>tf().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(wg.URL_SCHEME)?function(e="model"){return new wg(e)}(e.slice(wg.URL_SCHEME.length)):null);class Tg{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(fp("function"==typeof t.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=tf().platform.fetch,fp(null!=e&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&fp(2===e.length,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=Om(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:Lm(e),responses:[r]};throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+r.status+".")}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code `+e.status+". Please verify this URL points to the model JSON of the model to load.");let t;try{t=await e.json()}catch(n){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}if(null==t.modelTopology&&null==t.weightsManifest)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Mm(t,e=>this.loadWeights(e))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),s=this.weightPathPrefix||n,a=[];for(const l of e)a.push(...l.weights);const i=[],o=[];for(const l of e)for(const e of l.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(s+e+r);return this.weightUrlConverter&&i.push(...await Promise.all(o)),[a,Fm(await Ig(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function _g(e){return null!=e.match(Tg.URL_SCHEME_REGEX)}Tg.URL_SCHEME_REGEX=/^https?:\/\//;const Eg=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every(e=>_g(e)):_g(e),n)return Ag(e,t)}return null};function Ag(e,t){return new Tg(e,t)}function Rg(e,t){return Ag(e,t)}Pm.registerSaveRouter(Eg),Pm.registerLoadRouter(Eg);class $g{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}}class Fg{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}}function Dg(e,t,n,r){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new $g(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new $g({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new $g({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r}))}function Og(e){return new Fg(e)}function Mg(e,t){const n=e.length,r=[];for(let s=0;s<n;s++){const a=n-1-s,i=e[a]||1;(t[t.length-1-s]||1)>1&&1===i&&r.unshift(a)}return r}function Lg(e,t){const n=[];for(let r=0;r<t.length;r++){const s=e[e.length-r-1],a=t.length-r-1,i=t[a];(null==s||1===s&&i>1)&&n.unshift(a)}return n}function zg(e,t){const n=[],r=Math.max(e.length,t.length);for(let s=0;s<r;s++){let r=e[e.length-s-1];null==r&&(r=1);let a=t[t.length-s-1];if(null==a&&(a=1),1===r)n.unshift(a);else if(1===a)n.unshift(r);else{if(r!==a)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(r)}}return n}let Pg;function Bg(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,s=!1,a=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)s=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)a=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was "+e.constructor.name);o=!0}if(s){const t=2;if(s&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=hf("FromPixels",dm.backendName))return dm.runKernel("FromPixels",{pixels:e},{numChannels:t});const[l,u]=s?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,h;if(i)c=e.getContext("2d").getImageData(0,0,l,u).data;else if(r||n)c=e.data;else if(a||s||o){if(null==Pg)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");Pg=new OffscreenCanvas(1,1).getContext("2d")}else Pg=document.createElement("canvas").getContext("2d");Pg.canvas.width=l,Pg.canvas.height=u,Pg.drawImage(e,0,0,l,u),c=Pg.getImageData(0,0,l,u).data}if(4===t)h=new Int32Array(c);else{const e=l*u;h=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)h[n*t+e]=c[4*n+e]}return function(e,t,n){if(gp(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=xm(e,"int32");if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Cm(e,t,r,"int32")}(h,[u,l,t])}async function Ug(e,t=3){let n=null;if(tf().getBool("WRAP_TO_IMAGEBITMAP")&&function(e){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(r){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return Bg(n,t)}async function Vg(e,t){let n=vm(e,"img","toPixels");if(!(e instanceof qf)){const e=n;n=yg(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,s]=n.shape.slice(0,2),a=2===n.rank?1:n.shape[2];if(a>4||2===a)throw new Error("toPixels only supports depth of size 1, 3 or 4 but got "+a);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const i=await n.data(),o="float32"===n.dtype?255:1,l=new Uint8ClampedArray(s*r*4);for(let u=0;u<r*s;++u){const e=[0,0,0,255];for(let r=0;r<a;r++){const t=i[u*a+r];if("float32"===n.dtype){if(t<0||t>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${t}.`)}else if("int32"===n.dtype&&(t<0||t>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${t}.`);1===a?(e[0]=t*o,e[1]=t*o,e[2]=t*o):e[r]=t*o}const t=4*u;l[t+0]=Math.round(e[0]),l[t+1]=Math.round(e[1]),l[t+2]=Math.round(e[2]),l[t+3]=Math.round(e[3])}if(null!=t){t.width=s,t.height=r;const e=t.getContext("2d"),n=new ImageData(l,s,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),l}const Wg=Sm({fromPixels_:Bg});function Gg(e,t,n){const r=e.shape.length;fp(r===t.length,()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`),fp(r===n.length,()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`);for(let s=0;s<r;++s)fp(t[s]+n[s]<=e.shape[s],()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${t[s]+n[s]}) would overflow input.shape[${s}] (${e.shape[s]})`)}function Hg(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function jg(e,t,n){const r=[];for(let s=0;s<e.length;s++)r[s]=Math.ceil((t[s]-e[s])/n[s]);return r}function qg(e,t,n,r){const s=[...e];for(let a=s.length;a<r.length;a++)s.push(1);for(let a=0;a<n;a++)0===a?s[t]=1:(s.splice(t,0,1),s.pop());return s}function Kg(e,t,n){return n<=e?n:n-(t-1)}function Xg(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function Zg(e,t,n,r,s,a,i,o,l){const u=e.length;let c=new Array(u),h=new Array(u),d=new Array(u);if(t.length&&n>0){const l=t[0],u=n+1;c=Yg(i,l,u,r,e),h=Jg(o,l,u,s,e),d=qg(a,l,u,e)}else for(let p=0;p<u;p++)c[p]=ey(i,r,a,e,p,l),h[p]=ty(o,s,a,e,p,l),d[p]=Qg(a,p,l);return{begin:c,end:h,strides:d}}function Yg(e,t,n,r,s){const a=[...s],i=Xg(n,t);for(let o=0;o<a.length;o++)if(i.indexOf(o)>-1)a[o]=0;else{const s=Kg(t,n,o);let i=r[s];e&1<<s&&(i=0),a[o]=i}return a}function Jg(e,t,n,r,s){const a=[...s],i=Xg(n,t);for(let o=0;o<a.length;o++)if(i.indexOf(o)>-1)a[o]=Number.MAX_SAFE_INTEGER;else{const s=Kg(t,n,o);let i=r[s];e&1<<s&&(i=Number.MAX_SAFE_INTEGER),a[o]=i}for(let o=0;o<a.length;o++){const e=s[o];a[o]<0&&(a[o]+=e),a[o]=lp(0,a[o],s[o])}return a}function Qg(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function ey(e,t,n,r,s,a){let i=t[s];(e&1<<s||a&1<<s||null==i)&&(i=(n[s]||1)>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const o=r[s];return i<0&&(i+=o),i=lp(0,i,o-1),i}function ty(e,t,n,r,s,a){let i=t[s];const o=n[s]||1;(e&1<<s||a&1<<s||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=r[s];return i<0&&(i+=l),i=o>0?lp(0,i,l):lp(-1,i,l-1),i}function ny(e,t,n){let r=n.length;for(let s=0;s<n.length;s++)if(n[s]>1){r=s;break}for(let s=r+1;s<n.length;s++)if(t[s]>0||n[s]!==e[s])return!1;return!0}function ry(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function sy(e,t,n){let r;const s=e.shape.length;let a;return r="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach(e=>{fp(-1!==e,()=>"slice() does not support negative begin indexing.")}),a=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,a=a.map((t,n)=>t>=0?t:(fp(-1===t,()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`),e.shape[n]-r[n])),[r,a]}function ay(e,t,n,r,s,a,i,o,l){let u;if(null==r?(u=new Array(t.length),u.fill(1)):u=r,null!=i&&0!=(i&i-1))throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:u.slice(),beginMask:s,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};for(let b=0;b<h.dims;b++)c&&0!=(1<<b&o)&&h.numAddAxisAfterEllipsis++,1<<b&i&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){const s=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<s;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(-2),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(-1),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(h,d);let p=!0,f=!0,m=!0;const g=[],y=[];for(let b=0;b<e.length;++b){if(0===d.strides[b])throw Error(`strides[${b}] must be non-zero`);const t=!!(d.shrinkAxisMask&1<<b),n=e[b];if(-1===n){g.push(t?1:-1);continue}const r=[d.beginMask&1<<b,d.endMask&1<<b],s=[d.strides[b]>0?0:-1,d.strides[b]>0?n:n-1];if(t&&d.strides[b]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===d.strides[b];const a=!!(d.beginMask&1<<b&&d.endMask&1<<b);if(d.beginValid&&d.endValid){if(t){const e=d.begin[b]<0?n+d.begin[b]:d.begin[b];if(d.begin[b]=e,d.end[b]=d.begin[b]+1,e<0||e>=n)throw Error(`slice index ${d.begin[b]} of dimension ${b} out of bounds.`)}else d.begin[b]=iy(d.begin[b],0,d.strides[b],n,r,s),d.end[b]=iy(d.end[b],1,d.strides[b],n,r,s);const e=1===d.strides[b]&&0===d.begin[b]&&d.end[b]===n;p=p&&e,f=f&&(0===b&&1===d.strides[b]||e)}else p=p&&1===d.strides[b]&&a,f=f&&(0===b&&1===d.strides[b]||a);let i,o=!1;if(d.beginValid&&d.endValid?(i=d.end[b]-d.begin[b],o=!0):t?(i=1,o=!0):a&&n>=0&&(i=d.strides[b]<0?-n:n,o=!0),o){let e;e=0===i||i<0!=d.strides[b]<0?0:Math.trunc(i/d.strides[b])+(i%d.strides[b]!=0?1:0),g.push(e)}else g.push(-1)}for(let b=0;b<d.finalShapeGatherIndices.length;++b){const e=d.finalShapeGatherIndices[b];e>=0?y.push(g[e]):-2===e&&y.push(1)}return{finalShapeSparse:y.filter((e,t)=>-2!==d.finalShapeGatherIndices[t]),finalShape:y,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function iy(e,t,n,r,s,a){if(s[t])return n>0?a[t]:a[t+1&1];{const t=e<0?r+e:e;return t<a[0]?a[0]:t>a[1]?a[1]:t}}class oy{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class ly{constructor(){this.classNameMap={}}static getMap(){return null==ly.instance&&(ly.instance=new ly),ly.instance}static register(e){ly.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function uy(e){fp(null!=e.className,()=>"Class being registered does not have the static className property defined."),fp("string"==typeof e.className,()=>"className is required to be a string, but got type "+typeof e.className),fp(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),ly.register(e)}function cy(){return dm}function hy(){return dm.memory()}function dy(e,t){return dm.tidy(e,t)}function py(e){om(e).forEach(e=>e.dispose())}function fy(e){return dm.keep(e)}function my(e,t,n=1){return dm.registerBackend(e,t,n)}function gy(e){return dm.customGrad(e)}function yy(e,t){if((Op(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&Op(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Cm(e,[],[],t)}jf=function(e){tf().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")};class by extends oy{minimize(e,t=!1,n){const{value:r,grads:s}=this.computeGradients(e,n);if(null!=n){const e=n.map(e=>({name:e.name,tensor:s[e.name]}));this.applyGradients(e)}else this.applyGradients(s);return py(s),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return function(e,t){fp(Vp(e),()=>"The f passed in variableGrads(f) must be a function"),fp(null==t||Array.isArray(t)&&t.every(e=>e instanceof Xf),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const n=null!=t;if(!n){t=[];for(const e in dm.registeredVariables)t.push(dm.registeredVariables[e])}const r=n?t.filter(e=>!e.trainable):null,s=t.length;fp((t=t.filter(e=>e.trainable)).length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`);const{value:a,grads:i}=dm.gradients(e,t,null,!0);fp(i.some(e=>null!=e),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),fp(0===a.rank,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`);const o={};return t.forEach((e,t)=>{null!=i[t]&&(o[e.name]=i[t])}),null!=r&&r.forEach(e=>o[e.name]=null),{value:a,grads:o}}(e,t)}dispose(){null!=this.iterations_&&py(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:yy(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for this optimizer class "+this.getClassName())}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(by,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});const xy=Sm({abs_:function(e){const t=vm(e,"x","abs");return dm.runKernel("complex64"===t.dtype?"ComplexAbs":"Abs",{x:t})}}),wy=Sm({add_:function(e,t){let n=vm(e,"a","add"),r=vm(t,"b","add");return[n,r]=sm(n,r),dm.runKernel("Add",{a:n,b:r})}}),vy=Sm({all_:function(e,t=null,n=!1){const r=vm(e,"x","all","bool");return dm.runKernel("All",{x:r},{axis:t,keepDims:n})}}),ky=Sm({any_:function(e,t=null,n=!1){const r=vm(e,"x","any","bool");return dm.runKernel("Any",{x:r},{axis:t,keepDims:n})}}),Sy=Sm({argMax_:function(e,t=0){const n=vm(e,"x","argMax");return dm.runKernel("ArgMax",{x:n},{axis:t})}});function Iy(e,t,n,r,s="NHWC",a){return Ty(e,[...t,e[3]],n,a,r,null,null,My(s))}function Cy(e,t,n,r,s,a,i="channelsLast"){const[o,l]=Ay(t);let u;if("channelsLast"===i)u=[o,l,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat "+i);u=[o,l,e[1],e[1]]}return Ty(e,u,n,r,s,a,!1,i)}function Ny(e,t,n,r,s,a,i="NDHWC"){const[o,l,u]=Ry(t);let c,h;if("NDHWC"===i)h="channelsLast",c=[o,l,u,e[4],e[4]];else{if("NCDHW"!==i)throw new Error("Unknown dataFormat "+i);h="channelsFirst",c=[o,l,u,e[1],e[1]]}return _y(e,c,n,r,s,!1,h,a)}function Ty(e,t,n,r,s,a,i=!1,o="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,c,h]=e;else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat "+o);[l,h,u,c]=e}const[d,p,,f]=t,[m,g]=Ay(n),[y,b]=Ay(r),x=$y(d,y),w=$y(p,b),{padInfo:v,outHeight:k,outWidth:S}=function(e,t,n,r,s,a,i,o,l){let u,c,h;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,s){null==r&&(r=Ey(e,t,n));const a=e[1];return[Fy((e[0]-t+2*r)/n+1,s),Fy((a-t+2*r)/n+1,s)]}([t,n],a,r,e,o);c=s[0],h=s[1]}else if("same"===e){c=Math.ceil(t/r),h=Math.ceil(n/s);const e=Math.max(0,(c-1)*r+a-t),o=Math.max(0,(h-1)*s+i-n),l=Math.floor(e/2),d=e-l,p=Math.floor(o/2);u={top:l,bottom:d,left:p,right:o-p,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-a+1)/r),h=Math.ceil((n-i+1)/s);else{if("object"!=typeof e)throw Error("Unknown padding parameter: "+e);{const d="channelsLast"===l?e[1][0]:e[2][0],p="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],m="channelsLast"===l?e[2][1]:e[3][1];u={top:d,bottom:p,left:f,right:m,type:0===d&&0===p&&0===f&&0===m?"VALID":"EXPLICIT"},c=Fy((t-a+d+p)/r+1,o),h=Fy((n-i+f+m)/s+1,o)}}return{padInfo:u,outHeight:c,outWidth:h}}(s,u,c,m,g,x,w,a,o),I=i?f*h:f;let C;return"channelsFirst"===o?C=[l,I,k,S]:"channelsLast"===o&&(C=[l,k,S,I]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:c,inChannels:h,outHeight:k,outWidth:S,outChannels:I,padInfo:v,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:x,effectiveFilterWidth:w,dilationHeight:y,dilationWidth:b,inShape:e,outShape:C,filterShape:t}}function _y(e,t,n,r,s,a=!1,i="channelsLast",o){let[l,u,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,u,c,h,d]=e;else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat "+i);[l,d,u,c,h]=e}const[p,f,m,,g]=t,[y,b,x]=Ry(n),[w,v,k]=Ry(r),S=$y(p,w),I=$y(f,v),C=$y(m,k),{padInfo:N,outDepth:T,outHeight:_,outWidth:E}=function(e,t,n,r,s,a,i,o,l,u,c){let h,d,p,f;if("number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,s,a){null==s&&(s=Ey(e,t,r));const i=e[1],o=e[2];return[Fy((e[0]-t+2*s)/r+1,a),Fy((i-t+2*s)/r+1,a),Fy((o-t+2*s)/r+1,a),1]}([t,n,r,1],o,0,s,e,c);d=a[0],p=a[1],f=a[2]}else if("same"===e){d=Math.ceil(t/s),p=Math.ceil(n/a),f=Math.ceil(r/i);const e=(d-1)*s+o-t,c=(p-1)*a+l-n,m=(f-1)*i+u-r,g=Math.floor(e/2),y=e-g,b=Math.floor(c/2),x=c-b,w=Math.floor(m/2);h={top:b,bottom:x,left:w,right:m-w,front:g,back:y,type:"SAME"}}else{if("valid"!==e)throw Error("Unknown padding parameter: "+e);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((t-o+1)/s),p=Math.ceil((n-l+1)/a),f=Math.ceil((r-u+1)/i)}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(s,u,c,h,y,b,x,S,I,C,o),A=a?g*d:g;let R;return"channelsFirst"===i?R=[l,A,T,_,E]:"channelsLast"===i&&(R=[l,T,_,E,A]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:c,inWidth:h,inChannels:d,outDepth:T,outHeight:_,outWidth:E,outChannels:A,padInfo:N,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:S,effectiveFilterHeight:I,effectiveFilterWidth:C,dilationDepth:w,dilationHeight:v,dilationWidth:k,inShape:e,outShape:R,filterShape:t}}function Ey(e,t,n,r=1){const s=$y(t,r);return Math.floor((e[0]*(n-1)-n+s)/2)}function Ay(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function Ry(e){return"number"==typeof e?[e,e,e]:e}function $y(e,t){return t<=1?e:e+(e-1)*(t-1)}function Fy(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error("Unknown roundingMode "+t)}}function Dy(e){const[t,n,r]=Ay(e);return 1===t&&1===n&&1===r}function Oy(e,t){return Dy(e)||Dy(t)}function My(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error("Unknown dataFormat "+e)}function Ly(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)fp(vp(t),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach(t=>{t.forEach(t=>{fp(vp(t),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`)})})}}}const zy=Sm({reshape_:function(e,t){const n=vm(e,"x","reshape","string_or_numeric");return dm.runKernel("Reshape",{x:n},{shape:t})}}),Py=Sm({avgPool_:function(e,t,n,r,s){const a=vm(e,"x","avgPool","float32");fp(Oy(n,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`);let i=a,o=!1;3===a.rank&&(o=!0,i=zy(a,[1,a.shape[0],a.shape[1],a.shape[2]])),fp(4===i.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),Ly("avgPool",r,s);let l=dm.runKernel("AvgPool",{x:i},{filterSize:t,strides:n,pad:r,dimRoundingMode:s});return l=yg(l,a.dtype),o?zy(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),By=Sm({avgPool3d_:function(e,t,n,r,s,a="NDHWC"){const i=vm(e,"x","avgPool3d","float32");let o=i,l=!1;4===i.rank&&(l=!0,o=zy(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),fp(5===o.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`),fp("NDHWC"===a,()=>"Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of "+a),Ly("avgPool3d",r,s);let u=dm.runKernel("AvgPool3D",{x:o},{filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a});return u=yg(u,o.dtype),l?zy(u,[u.shape[1],u.shape[2],u.shape[3],u.shape[4]]):u}}),Uy=Sm({batchNorm_:function(e,t,n,r,s,a){null==a&&(a=.001);const i=vm(e,"x","batchNorm"),o=vm(t,"mean","batchNorm"),l=vm(n,"variance","batchNorm");let u,c;null!=s&&(u=vm(s,"scale","batchNorm")),null!=r&&(c=vm(r,"offset","batchNorm")),fp(o.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),fp(null==c||o.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),fp(null==u||o.rank===u.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const h=function(e){let t;return t=0===e.rank||1===e.rank?zy(e,[1,1,1,e.size]):2===e.rank?zy(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?zy(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(i),d=dm.runKernel("FusedBatchNorm",{x:h,scale:u,offset:c,mean:o,variance:l},{varianceEpsilon:a});return zy(d,i.shape)}}),Vy=Sm({batchNorm2d_:function(e,t,n,r,s,a){const i=vm(e,"x","batchNorm"),o=vm(t,"mean","batchNorm"),l=vm(n,"variance","batchNorm");let u,c;return null!=s&&(u=vm(s,"scale","batchNorm")),null!=r&&(c=vm(r,"offset","batchNorm")),fp(2===i.rank,()=>"Error in batchNorm2D: x must be rank 2 but got rank "+i.rank+"."),fp(2===o.rank||1===o.rank,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`),fp(2===l.rank||1===l.rank,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),null!=u&&fp(2===u.rank||1===u.rank,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),null!=c&&fp(2===c.rank||1===c.rank,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),Uy(i,o,l,c,u,a)}}),Wy=Sm({batchNorm3d_:function(e,t,n,r,s,a){const i=vm(e,"x","batchNorm"),o=vm(t,"mean","batchNorm"),l=vm(n,"variance","batchNorm");let u,c;return null!=s&&(u=vm(s,"scale","batchNorm")),null!=r&&(c=vm(r,"offset","batchNorm")),fp(3===i.rank,()=>"Error in batchNorm3D: x must be rank 3 but got rank "+i.rank+"."),fp(3===o.rank||1===o.rank,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`),fp(3===l.rank||1===l.rank,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),null!=u&&fp(3===u.rank||1===u.rank,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),null!=c&&fp(3===c.rank||1===c.rank,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),Uy(i,o,l,c,u,a)}}),Gy=Sm({batchNorm4d_:function(e,t,n,r,s,a){const i=vm(e,"x","batchNorm"),o=vm(t,"mean","batchNorm"),l=vm(n,"variance","batchNorm");let u,c;return null!=s&&(u=vm(s,"scale","batchNorm")),null!=r&&(c=vm(r,"offset","batchNorm")),fp(4===i.rank,()=>"Error in batchNorm4D: x must be rank 4 but got rank "+i.rank+"."),fp(4===o.rank||1===o.rank,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`),fp(4===l.rank||1===l.rank,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),null!=u&&fp(4===u.rank||1===u.rank,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),null!=c&&fp(4===c.rank||1===c.rank,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),Uy(i,o,l,c,u,a)}}),Hy=Sm({clipByValue_:function(e,t,n){const r=vm(e,"x","clipByValue");return fp(t<=n,()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`),dm.runKernel("ClipByValue",{x:r},{clipValueMin:t,clipValueMax:n})}}),jy=Sm({concat_:function(e,t=0){fp(e.length>=1,()=>"Pass at least one tensor to concat");const n=km(e,"tensors","concat","string_or_numeric");return"complex64"===n[0].dtype&&n.forEach(e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)}),1===n.length?bg(n[0]):dm.runKernel("Concat",n,{axis:t})}}),qy=Sm({concat1d_:function(e){return jy(e,0)}}),Ky=Sm({concat2d_:function(e,t){return jy(e,t)}}),Xy=Sm({concat3d_:function(e,t){return jy(e,t)}}),Zy=Sm({concat4d_:function(e,t){return jy(e,t)}}),Yy=Sm({conv2d_:function(e,t,n,r,s="NHWC",a=[1,1],i){const o=vm(e,"x","conv2d","float32"),l=vm(t,"filter","conv2d","float32");let u=o,c=!1;3===o.rank&&(c=!0,u=zy(o,[1,o.shape[0],o.shape[1],o.shape[2]])),fp(4===u.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),fp(4===l.rank,()=>"Error in conv2d: filter must be rank 4, but got rank "+l.rank+"."),Ly("conv2d",r,i);const h="NHWC"===s?u.shape[3]:u.shape[1];fp(h===l.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`),fp(Oy(n,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`);const d=dm.runKernel("Conv2D",{x:u,filter:l},{strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i});return c?zy(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),Jy=Sm({conv1d_:function(e,t,n,r,s="NWC",a=1,i){const o=vm(e,"x","conv1d"),l=vm(t,"filter","conv1d");let u=o,c=!1;2===o.rank&&(c=!0,u=zy(o,[1,o.shape[0],o.shape[1]])),fp(3===u.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),fp(3===l.rank,()=>"Error in conv1d: filter must be rank 3, but got rank "+l.rank+"."),Ly("conv1d",r,i),fp(u.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`),fp(Oy(n,a),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`),fp("NWC"===s,()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`);const h=zy(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=zy(u,[u.shape[0],1,u.shape[1],u.shape[2]]),p=Yy(d,h,[1,n],r,"NHWC",[1,a],i);return zy(p,c?[p.shape[2],p.shape[3]]:[p.shape[0],p.shape[2],p.shape[3]])}}),Qy=Sm({conv2DBackpropInput_:function(e,t,n,r,s,a="NHWC",i){fp(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let o=e,l=t,u=!1;3===t.rank&&(u=!0,l=zy(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),fp(4===o.length,()=>"Error in conv2dDerInput: inShape must be length 4, but got length "+o.length+"."),fp(4===l.rank,()=>"Error in conv2dDerInput: dy must be rank 4, but got rank "+l.rank),fp(4===n.rank,()=>"Error in conv2dDerInput: filter must be rank 4, but got rank "+n.rank);const c="NHWC"===a?o[3]:o[1],h="NHWC"===a?l.shape[3]:l.shape[1];fp(c===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`),fp(h===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`),Ly("conv2dDerInput",s,i);const d=dm.runKernel("Conv2DBackpropInput",{dy:l,filter:n},{strides:r,pad:s,dataFormat:a,dimRoundingMode:i,inputShape:o});return u?zy(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),eb=Sm({conv2dTranspose_:function(e,t,n,r,s,a){const i=vm(e,"x","conv2dTranspose"),o=vm(t,"filter","conv2dTranspose");return Qy(n,i,o,r,s,"NHWC",a)}}),tb=Sm({conv3d_:function(e,t,n,r,s="NDHWC",a=[1,1,1]){const i=vm(e,"x","conv3d"),o=vm(t,"filter","conv3d");let l=i,u=!1;4===i.rank&&(u=!0,l=zy(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),fp(5===l.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),fp(5===o.rank,()=>"Error in conv3d: filter must be rank 5, but got rank "+o.rank+"."),fp(l.shape[4]===o.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`),fp(Oy(n,a),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),fp("NDHWC"===s,()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`);const c=dm.runKernel("Conv3D",{x:l,filter:o},{strides:n,pad:r,dataFormat:s,dilations:a});return u?zy(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}}),nb=Sm({conv3DBackpropInput_:function(e,t,n,r,s){fp(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let a=e,i=t,o=!1;4===t.rank&&(o=!0,i=zy(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,e[0],e[1],e[2],e[3]]);const l=a[4],u=i.shape[4];fp(5===a.length,()=>"Error in conv3dDerInput: inShape must be length 5, but got length "+a.length+"."),fp(5===i.rank,()=>"Error in conv3dDerInput: dy must be rank 5, but got rank "+i.rank),fp(5===n.rank,()=>"Error in conv3dDerInput: filter must be rank 5, but got rank "+n.rank),fp(l===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`),fp(u===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`);const c=dm.runKernel("Conv3DBackpropInputV2",{dy:i,filter:n},{pad:s,strides:r,inputShape:a});return o?zy(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}}),rb=Sm({conv3dTranspose_:function(e,t,n,r,s){const a=vm(e,"x","conv3dTranspose"),i=vm(t,"filter","conv3dTranspose");return nb(n,a,i,r,s)}}),sb=Sm({depthwiseConv2d_:function(e,t,n,r,s="NHWC",a=[1,1],i){const o=vm(e,"x","depthwiseConv2d","float32"),l=vm(t,"filter","depthwiseConv2d","float32");let u=o,c=!1;3===o.rank&&(c=!0,u=zy(o,[1,o.shape[0],o.shape[1],o.shape[2]])),fp(4===u.rank,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),fp(4===l.rank,()=>"Error in depthwiseConv2d: filter must be rank 4, but got rank "+l.rank+"."),fp(u.shape[3]===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`),Ly("depthwiseConv2d",r,i);const h=dm.runKernel("DepthwiseConv2dNative",{x:u,filter:l},{strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i});return c?zy(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),ab=Sm({floorDiv_:function(e,t){let n=vm(e,"a","floorDiv"),r=vm(t,"b","floorDiv");return[n,r]=sm(n,r),dm.runKernel("FloorDiv",{a:n,b:r})}}),ib=Sm({div_:function(e,t){let n=vm(e,"a","div"),r=vm(t,"b","div");return[n,r]=sm(n,r),"int32"===n.dtype&&"int32"===r.dtype?ab(n,r):dm.runKernel("RealDiv",{a:n,b:r},{})}}),ob=Sm({elu_:function(e){const t=vm(e,"x","elu","float32");return dm.runKernel("Elu",{x:t})}}),lb=Sm({equal_:function(e,t){let n=vm(e,"a","equal","string_or_numeric"),r=vm(t,"b","equal","string_or_numeric");return[n,r]=sm(n,r),zg(n.shape,r.shape),dm.runKernel("Equal",{a:n,b:r})}}),ub=Sm({exp_:function(e){const t=vm(e,"x","exp");return dm.runKernel("Exp",{x:t})}}),cb=Sm({expandDims_:function(e,t=0){const n=vm(e,"x","expandDims","string_or_numeric");return fp(t<=n.rank,()=>"Axis must be <= rank of the tensor"),dm.runKernel("ExpandDims",{input:n},{dim:t})}}),hb=Sm({tile_:function(e,t){const n=vm(e,"x","tile","string_or_numeric");return fp(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`),dm.runKernel("Tile",{x:n},{reps:t})}}),db=Sm({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const s=gg([e,t],r),a=e<=t?e:t;for(let o=0;o<a;++o)s.set(1,o,o);const i=zy(s.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return hb(cb(i,0),[n[0],1,1]);if(2===n.length)return hb(cb(cb(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return hb(cb(cb(cb(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});function pb(e,t,n){return dm.runKernel("Fill",{},{shape:e,value:t,dtype:n})}const fb=Sm({floor_:function(e){const t=vm(e,"x","floor","float32");return dm.runKernel("Floor",{x:t})}}),mb=Sm({gather_:function(e,t,n=0,r=0){const s=vm(e,"x","gather"),a=vm(t,"indices","gather","int32");return dm.runKernel("GatherV2",{x:s,indices:a},{axis:n,batchDims:r})}}),gb=Sm({greater_:function(e,t){let n=vm(e,"a","greater","string_or_numeric"),r=vm(t,"b","greater","string_or_numeric");return[n,r]=sm(n,r),zg(n.shape,r.shape),dm.runKernel("Greater",{a:n,b:r})}}),yb=Sm({greaterEqual_:function(e,t){let n=vm(e,"a","greaterEqual","string_or_numeric"),r=vm(t,"b","greaterEqual","string_or_numeric");return[n,r]=sm(n,r),zg(n.shape,r.shape),dm.runKernel("GreaterEqual",{a:n,b:r})}}),bb=Sm({leakyRelu_:function(e,t=.2){const n=vm(e,"x","leakyRelu");return dm.runKernel("LeakyRelu",{x:n},{alpha:t})}}),xb=Sm({log_:function(e){const t=vm(e,"x","log","float32");return dm.runKernel("Log",{x:t})}}),wb=Sm({log1p_:function(e){const t=vm(e,"x","log1p");return dm.runKernel("Log1p",{x:t})}}),vb=Sm({max_:function(e,t=null,n=!1){const r=vm(e,"x","max");return dm.runKernel("Max",{x:r},{reductionIndices:t,keepDims:n})}}),kb=Sm({mul_:function(e,t){let n=vm(e,"a","mul"),r=vm(t,"b","mul");return[n,r]=sm(n,r),dm.runKernel("Multiply",{a:n,b:r})}}),Sb=Sm({sub_:function(e,t){let n=vm(e,"a","sub"),r=vm(t,"b","sub");return[n,r]=sm(n,r),dm.runKernel("Sub",{a:n,b:r})}}),Ib=Sm({sum_:function(e,t=null,n=!1){let r=vm(e,"x","sum");return"bool"===r.dtype&&(r=yg(r,"int32")),dm.runKernel("Sum",{x:r},{axis:t,keepDims:n})}}),Cb=Sm({logSoftmax_:function(e,t=-1){const n=vm(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return gy((e,n)=>{const r=vb(e,t,!0),s=Sb(e,r),a=Sb(yg(s,"float32"),xb(Ib(ub(s),t,!0)));return n([a]),{value:a,gradFunc:(e,n)=>{const[r]=n,s=ub(r);return Sb(e,kb(Ib(e,t,!0),s))}}})(n)}}),Nb=Sm({logicalAnd_:function(e,t){const n=vm(e,"a","logicalAnd","bool"),r=vm(t,"b","logicalAnd","bool");return zg(n.shape,r.shape),dm.runKernel("LogicalAnd",{a:n,b:r})}}),Tb=Sm({matMul_:function(e,t,n=!1,r=!1){let s=vm(e,"a","matMul"),a=vm(t,"b","matMul");return[s,a]=sm(s,a),dm.runKernel("BatchMatMul",{a:s,b:a},{transposeA:n,transposeB:r})}}),_b=Sm({maxPool_:function(e,t,n,r,s){const a=vm(e,"x","maxPool");let i=a,o=!1;3===a.rank&&(o=!0,i=zy(a,[1,a.shape[0],a.shape[1],a.shape[2]])),fp(4===i.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),fp(Oy(n,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`),Ly("maxPool",r,s);const l=dm.runKernel("MaxPool",{x:i},{filterSize:t,strides:n,pad:r,dimRoundingMode:s});return o?zy(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),Eb=Sm({maxPool3d_:function(e,t=[1,1,1],n,r,s,a="NDHWC"){const i=vm(e,"x","maxPool3d");let o=i,l=!1;4===i.rank&&(l=!0,o=zy(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),fp(5===o.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`),fp("NDHWC"===a,()=>"Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of "+a),Ly("maxPool3d",r,s);const u=dm.runKernel("MaxPool3D",{x:o},{filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a});return l?zy(u,[u.shape[1],u.shape[2],u.shape[3],u.shape[4]]):u}}),Ab=Sm({maximum_:function(e,t){let n=vm(e,"a","maximum"),r=vm(t,"b","maximum");return[n,r]=sm(n,r),"bool"===n.dtype&&(n=yg(n,"int32"),r=yg(r,"int32")),zg(n.shape,r.shape),dm.runKernel("Maximum",{a:n,b:r})}}),Rb=Sm({mean_:function(e,t=null,n=!1){const r=vm(e,"x","mean");return dm.runKernel("Mean",{x:r},{axis:t,keepDims:n})}}),$b=Sm({minimum_:function(e,t){let n=vm(e,"a","minimum"),r=vm(t,"b","minimum");return[n,r]=sm(n,r),"bool"===n.dtype&&(n=yg(n,"int32"),r=yg(r,"int32")),zg(n.shape,r.shape),dm.runKernel("Minimum",{a:n,b:r})}});function Fb(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Db(e,t,n){const r=e.length+t.length,s=[];let a=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?s.push(e[a++]):s.push(t[i++]);return s}function Ob(e,t){const n=[],r=e.length;for(let s=0;s<r;s++)-1===t.indexOf(s)&&n.push(e[s]);return[n,t.map(t=>e[t])]}function Mb(e,t){return Db(e,t.map(e=>1),t)}function Lb(e,t,n){fp(Fb(t,n),()=>e+" supports only inner-most axes for now. "+`Got axes ${t} and rank-${n} input.`)}function zb(e,t){if(Fb(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach(e=>n.push(e)),n}function Pb(e){return e.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function Bb(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}const Ub=Sm({square_:function(e){const t=vm(e,"x","square");return dm.runKernel("Square",{x:t},{})}}),Vb=Sm({moments_:function(e,t=null,n=!1){const r=_p(t,(e=vm(e,"x","moments")).shape),s=Rb(e,r,n);let a=s.shape;n||(a=Mb(s.shape,r));const i=Ub(Sb(yg(e,"float32"),zy(s,a)));return{mean:s,variance:Rb(i,r,n)}}}),Wb=Sm({neg_:function(e){const t=vm(e,"x","neg");return dm.runKernel("Neg",{x:t})}}),Gb=Sm({notEqual_:function(e,t){let n=vm(e,"a","notEqual","string_or_numeric"),r=vm(t,"b","notEqual","string_or_numeric");return[n,r]=sm(n,r),zg(n.shape,r.shape),dm.runKernel("NotEqual",{a:n,b:r})}}),Hb=Sm({oneHot_:function(e,t,n=1,r=0){if(t<2)throw new Error("Error in oneHot: depth must be >=2, but it is "+t);const s=vm(e,"indices","oneHot","int32");return dm.runKernel("OneHot",{indices:s},{depth:t,onValue:n,offValue:r})}});function jb(e,t="float32"){if("complex64"===t){const t=jb(e,"float32"),n=jb(e,"float32");return Im(t,n)}const n=qp(bp(e),t);return dm.makeTensor(n,e,t)}function qb(e,t="float32"){if("complex64"===t){const t=qb(e,"float32"),n=jb(e,"float32");return Im(t,n)}const n=jp(bp(e),t);return dm.makeTensor(n,e,t)}const Kb=Sm({onesLike_:function(e){const t=vm(e,"x","onesLike");return dm.runKernel("OnesLike",{x:t})}}),Xb=Sm({pad_:function(e,t,n=0){const r=vm(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");return dm.runKernel("PadV2",{x:r},{paddings:t,constantValue:n})}}),Zb=Sm({pow_:function(e,t){let n=vm(e,"base","pow"),r=vm(t,"exp","pow");return[n,r]=sm(n,r),dm.runKernel("Pow",{a:n,b:r})}}),Yb=Sm({prelu_:function(e,t){const n=vm(e,"x","prelu"),r=vm(t,"alpha","prelu");return dm.runKernel("Prelu",{x:n,alpha:r})}});var Jb=n("YSVl");class Qb{constructor(e,t,n,r,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=s||Math.random();this.random=Jb.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,s,a;do{r=2*this.random()-1,s=2*this.random()-1,a=r*r+s*s}while(a>=1||0===a);const i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*s*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class ex{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Jb.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const tx=Sm({randomNormal_:function(e,t=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error("Unsupported data type "+r);const a=new Qb(t,n,r,!1,s),i=gg(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=a.nextValue();return i.toTensor()}}),nx=Sm({randomUniform_:function(e,t=0,n=1,r="float32",s){const a=gg(e,r),i=new ex(t,n,null,s);for(let o=0;o<a.values.length;o++)a.values[o]=i.nextValue();return a.toTensor()}}),rx=Sm({relu_:function(e){const t=vm(e,"x","relu");return dm.runKernel("Relu",{x:t})}}),sx=Sm({reverse_:function(e,t){const n=vm(e,"x","reverse");return dm.runKernel("Reverse",{x:n},{dims:t})}}),ax=Sm({selu_:function(e){const t=vm(e,"x","selu");return dm.runKernel("Selu",{x:t})}}),ix=Sm({separableConv2d_:function(e,t,n,r,s,a=[1,1],i="NHWC"){const o=vm(e,"x","separableConv2d"),l=vm(t,"depthwiseFilter","separableConv2d"),u=vm(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=zy(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");fp(4===c.rank,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),fp(4===l.rank,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),fp(4===u.rank,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),fp(1===u.shape[0],()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),fp(1===u.shape[1],()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);const d=l.shape[2],p=l.shape[3];fp(u.shape[2]===d*p,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${u.shape[2]}.`);const f=sb(c,l,r,s,i,a),m=Yy(f,u,1,"valid",i);return h?zy(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),ox=Sm({sigmoid_:function(e){const t=vm(e,"x","sigmoid","float32");return dm.runKernel("Sigmoid",{x:t})}}),lx=Sm({slice_:function(e,t,n){const r=vm(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");return dm.runKernel("Slice",{x:r},{begin:t,size:n})}}),ux=Sm({slice1d_:function(e,t,n){const r=vm(e,"x","slice1d");return fp(1===r.rank,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),lx(r,[t],[n])}}),cx=Sm({slice2d_:function(e,t,n){const r=vm(e,"x","slice2d");return fp(2===r.rank,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),lx(r,t,n)}}),hx=Sm({slice3d_:function(e,t,n){const r=vm(e,"x","slice3d");return fp(3===r.rank,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),lx(r,t,n)}}),dx=Sm({slice4d_:function(e,t,n){const r=vm(e,"x","slice4d");return fp(4===r.rank,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),lx(r,t,n)}}),px=Sm({softmax_:function(e,t=-1){const n=vm(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);return dm.runKernel("Softmax",{logits:n},{dim:t})}}),fx=Sm({softplus_:function(e){const t=vm(e,"x","softplus");return dm.runKernel("Softplus",{x:t})}}),mx=Sm({split_:function(e,t,n=0){const r=vm(e,"x","split");return dm.runKernel("SplitV",{x:r},{numOrSizeSplits:t,axis:n})}}),gx=Sm({sqrt_:function(e){const t=vm(e,"x","sqrt","float32");return dm.runKernel("Sqrt",{x:t})}}),yx=Sm({squeeze_:function(e,t){const n=vm(e,"x","squeeze");return zy(n,Ep(n.shape,t).newShape)}}),bx=Sm({stack_:function(e,t=0){const n=km(e,"tensors","stack","string_or_numeric");return fp(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&fp(t<=n[0].rank,()=>"Axis must be <= rank of the tensor"),dm.runKernel("Pack",n,{axis:t})}}),xx=Sm({tanh_:function(e){const t=vm(e,"x","tanh","float32");return dm.runKernel("Tanh",{x:t})}});function wx(e,t){gp(e);const n=xm(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Cm(e,null,n,t)}function vx(e,t,n){if(gp(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=xm(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Cm(e,t,r,n)}const kx=Sm({truncatedNormal_:function(e,t=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const a=new Qb(t,n,r,!0,s),i=gg(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=a.nextValue();return i.toTensor()}}),Sx=Sm({unstack_:function(e,t=0){const n=vm(e,"x","unstack","string_or_numeric");return fp(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`),dm.runKernel("Unpack",{value:n},{axis:t})}}),Ix=Sm({broadcastTo_:function(e,t){let n=vm(e,"broadcastTo","x");const r=n.shape;if(t.some(e=>!(e>0)||e%1!=0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=zy(n,e)}const s=n.shape,a=Array.from(t);for(let i=t.length-1;i>=0;i--)if(s[i]===t[i])a[i]=1;else if(1!==n.shape[i])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);return 0===a.map((e,t)=>e>1?t:-1).filter(e=>e>=0).length?bg(n):dm.runKernel("Tile",{x:n},{reps:a})}}),Cx=Sm({where_:function(e,t,n){const r=vm(t,"a","where"),s=vm(n,"b","where"),a=vm(e,"condition","where","bool"),i=zg(zg(a.shape,r.shape),s.shape),o=Ix(a,i),l=Ix(r,i),u=Ix(s,i);return dm.runKernel("Select",{condition:o,t:l,e:u})}}),Nx=Sm({zerosLike_:function(e){const t=vm(e,"x","zerosLike");return dm.runKernel("ZerosLike",{x:t})}}),Tx=Sm({transpose_:function(e,t){const n=vm(e,"x","transpose");return null==t&&(t=n.shape.map((e,t)=>t).reverse()),fp(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`),t.forEach(e=>{fp(e>=0&&e<n.rank,()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+" but got "+t)}),n.rank<=1?n.clone():dm.runKernel("Transpose",{x:n},{perm:t})}}),_x=Sm({dropout_:function(e,t,n,r){const s=vm(e,"x","dropout");if(fp("float32"===s.dtype,()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`),fp(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),0===t)return e instanceof qf?s.clone():s;const a=function(e,t){if(null==t)return e.shape.slice();if(wp(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)n.push(null==t[r]&&null!=e.shape[r]?e.shape[r]:t[r]);return n}return t}(s,n),i=1-t,o=ib(fb(wy(nx(a,0,1,"float32",r),i)),i);return kb(s,o)}}),Ex=Sm({imag_:function(e){const t=vm(e,"input","imag");return dm.runKernel("Imag",{input:t})}}),Ax=Sm({real_:function(e){const t=vm(e,"input","real");return dm.runKernel("Real",{input:t})}}),Rx=Sm({fft_:function(e){return fp("complex64"===e.dtype,()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`),dm.runKernel("FFT",{input:e})}}),$x=Sm({rfft_:function(e,t){fp("float32"===e.dtype,()=>"The dtype for rfft() must be real value but got "+e.dtype);let n=e.shape[e.shape.length-1];const r=e.size/n;let s;if(null!=t&&t<n){const r=e.shape.map(e=>0),a=e.shape.map(e=>e);a[e.shape.length-1]=t,s=lx(e,r,a),n=t}else if(null!=t&&t>n){const r=e.shape.map(e=>e);r[e.shape.length-1]=t-n,s=jy([e,jb(r)],e.shape.length-1),n=t}else s=e;const a=Nx(s),i=zy(Im(s,a),[r,n]),o=Rx(i),l=Math.floor(n/2)+1,u=Ax(o),c=Ex(o),h=mx(u,[l,n-l],u.shape.length-1),d=mx(c,[l,n-l],c.shape.length-1),p=s.shape.slice();return p[s.shape.length-1]=l,zy(Im(h[0],d[0]),p)}}),Fx=Sm({ifft_:function(e){return fp("complex64"===e.dtype,()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`),dm.runKernel("IFFT",{input:e})}}),Dx=Sm({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const s=zy(e,[n,t]);r=Fx(s)}else{const s=[n,2*(t-1)],a=zy(Ax(e),[n,t]),i=zy(Ex(e),[n,t]),o=sx(lx(a,[0,1],[n,t-2]),1),l=kb(sx(lx(i,[0,1],[n,t-2]),1),yy(-1)),u=jy([a,o],1),c=jy([i,l],1),h=zy(Im(u,c),[s[0],s[1]]);r=Fx(h)}if(r=Ax(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=zy(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}}),Ox=Sm({conv2DBackpropFilter_:function(e,t,n,r,s,a="NHWC",i){let o=e;3===e.rank&&(o=zy(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=zy(t,[1,t.shape[0],t.shape[1],t.shape[2]])),fp(4===o.rank,()=>"Error in conv2dDerFilter: input must be rank 4, but got shape "+o.shape+"."),fp(4===l.rank,()=>"Error in conv2dDerFilter: dy must be rank 4, but got shape "+l.shape+"."),fp(4===n.length,()=>"Error in conv2dDerFilter: filterShape must be length 4, but got "+n+".");const u="NHWC"===a?o.shape[3]:o.shape[1],c="NHWC"===a?l.shape[3]:l.shape[1];return fp(u===n[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`),fp(c===n[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`),Ly("conv2dDerFilter",s,i),dm.runKernel("Conv2DBackpropFilter",{x:o,dy:l},{strides:r,pad:s,dataFormat:a,dimRoundingMode:i,filterShape:n})}}),Mx=Sm({relu6_:function(e){const t=vm(e,"x","relu6");return dm.runKernel("Relu6",{x:t})}}),Lx=Sm({step_:function(e,t=0){const n=vm(e,"x","step");return dm.runKernel("Step",{x:n},{alpha:t})}});function zx(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return kb(e,Lx(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Px(e,t){let n=t;const r=Lg(e.shape,t.shape);return r.length>0&&(n=Ib(n,r)),zy(n,e.shape)}function Bx(e,t,n,r){if("linear"===t)return e;if("relu"===t)return rx(e);if("elu"===t)return ob(e);if("relu6"===t)return Mx(e);if("prelu"===t)return Yb(e,n);if("leakyrelu"===t)return bb(e,r);if("sigmoid"===t)return ox(e);throw new Error(`Unknown fused activation ${t}.`)}const Ux=(e,t)=>!(e>0)||"linear"===t,Vx=Sm({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(!1===Ux(dm.state.gradientDepth,l=l||"linear")){let h=Yy(e,t,n,r,s,a,i);return null!=o&&(h=wy(h,o)),Bx(h,l,u,c)}const h=vm(e,"x","conv2d","float32"),d=vm(t,"filter","conv2d","float32");let p=h,f=!1;3===h.rank&&(f=!0,p=zy(h,[1,h.shape[0],h.shape[1],h.shape[2]])),fp(4===p.rank,()=>"Error in fused conv2d: input must be rank 4, but got rank "+p.rank+"."),fp(4===d.rank,()=>"Error in fused conv2d: filter must be rank 4, but got rank "+d.rank+"."),Ly("fused conv2d",r,i),fp(p.shape[3]===d.shape[2],()=>`Error in conv2d: depth of input (${p.shape[3]}) must match input depth for filter ${d.shape[2]}.`),fp(Oy(n,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),fp("NHWC"===s,()=>`Error in conv2d: got dataFormat of ${s} but only NHWC is currently supported.`);const m=Ty(p.shape,d.shape,n,a,r,i);let g,y;null!=o&&(g=vm(o,"bias","fused conv2d"),[g]=sm(g,h),zg(m.outShape,g.shape)),null!=u&&(y=vm(u,"prelu weights","fused conv2d"));const b=(e,t)=>{const[s,i,o,u]=t,c=zx(e,o,l);fp(Dy(a),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`);const h=[Qy(i.shape,c,s,n,r),Ox(i,c,s.shape,n,r)];if(null!=u){const e=Px(u,c);h.push(e)}return h},x={x:p,filter:d,bias:g,preluActivationWeights:y},w={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i,activation:l,leakyreluAlpha:c};return null==o?gy((e,t,n)=>{let r=dm.runKernel("FusedConv2D",x,w);return n([t,e,r]),f&&(r=zy(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}})(p,d):gy((e,t,n,r)=>{let s=dm.runKernel("FusedConv2D",x,w);return r([t,e,s,n]),f&&(s=zy(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:b}})(p,d,g)}}),Wx=Sm({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,s,a=[1,1],i){let o=e;3===e.rank&&(o=zy(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;return 3===l.rank&&(l=zy(t,[1,t.shape[0],t.shape[1],t.shape[2]])),dm.runKernel("DepthwiseConv2dNativeBackpropFilter",{x:o,dy:l},{strides:r,pad:s,dimRoundingMode:i,dilations:a,filterShape:n})}}),Gx=Sm({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,s,a=[1,1],i){let o=t,l=!1;3===t.rank&&(l=!0,o=zy(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u=dm.runKernel("DepthwiseConv2dNativeBackpropInput",{dy:o,filter:n},{strides:r,pad:s,dimRoundingMode:i,dilations:a,inputShape:e});return l?zy(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),Hx=Sm({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(!1===Ux(dm.state.gradientDepth,l)){let h=sb(e,t,n,r,s,a,i);return null!=o&&(h=wy(h,o)),Bx(h,l,u,c)}const h=vm(e,"x","depthwiseConv2d","float32"),d=vm(t,"filter","depthwiseConv2d","float32");let p=h,f=!1;3===h.rank&&(f=!0,p=zy(h,[1,h.shape[0],h.shape[1],h.shape[2]])),fp(4===p.rank,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`),fp(4===d.rank,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`),fp(p.shape[3]===d.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`),null==a&&(a=[1,1]),fp(Oy(n,a),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),Ly("fused depthwiseConv2d",r,i);const m=Ty(p.shape,d.shape,n,a,r,i,!0);let g,y;null!=o&&(g=vm(o,"bias","fused conv2d"),[g]=sm(g,h),zg(m.outShape,g.shape)),null!=u&&(y=vm(u,"prelu weights","fused depthwiseConv2d"));const b=(e,t)=>{fp(Dy(a),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);const[s,o,u,c]=t,h=zx(e,u,l),d=Gx(o.shape,h,s,n,r,a,i),p=Wx(o,h,s.shape,n,r,a,i);return null!=c?[d,p,Px(g,h)]:[d,p]},x={x:p,filter:d,bias:g,preluActivationWeights:y},w={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i,activation:l,leakyreluAlpha:c};return null==o?gy((e,t,n)=>{let r=dm.runKernel("FusedDepthwiseConv2D",x,w);return n([t,e,r]),f&&(r=zy(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}})(p,d):gy((e,t,n,r)=>{let s=dm.runKernel("FusedDepthwiseConv2D",x,w);return r([t,e,s,n]),f&&(s=zy(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:b}})(p,d,g)}}),jx=Sm({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:s,activation:a="linear",preluActivationWeights:i,leakyreluAlpha:o}){if(!1===Ux(dm.state.gradientDepth,a)){let l=Tb(e,t,n,r);return null!=s&&(l=wy(l,s)),Bx(l,a,i,o)}let l=vm(e,"a","fused matMul"),u=vm(t,"b","fused matMul");[l,u]=sm(l,u);const c=n?l.shape[l.rank-2]:l.shape[l.rank-1],h=r?u.shape[u.rank-1]:u.shape[u.rank-2],d=n?l.shape[l.rank-1]:l.shape[l.rank-2],p=r?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),m=u.shape.slice(0,-2),g=bp(f),y=bp(m);fp(c===h,()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${r} must match.`);const b=zg(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([d,p]),x=zy(l,n?[g,c,d]:[g,d,c]),w=zy(u,r?[y,p,h]:[y,h,p]);let v,k;null!=s&&(v=vm(s,"bias","fused matMul"),[v]=sm(v,l),zg(b,v.shape)),null!=i&&(k=vm(i,"prelu weights","fused matMul"));const S=(e,t)=>{const[i,o,l,u]=t,c=zx(zy(e,l.shape),l,a);let h,d;return n||r?!n&&r?(h=Tb(c,o,!1,!1),d=Tb(c,i,!0,!1)):n&&!r?(h=Tb(o,c,!1,!0),d=Tb(i,c,!1,!1)):(h=Tb(o,c,!0,!0),d=Tb(c,i,!0,!0)):(h=Tb(c,o,!1,!0),d=Tb(i,c,!0,!1)),null!=s?[h,d,Px(u,c)]:[h,d]},I={a:x,b:w,bias:v,preluActivationWeights:k},C={transposeA:n,transposeB:r,activation:a,leakyreluAlpha:o};return null==s?gy((e,t,n)=>{const r=dm.runKernel("_FusedMatMul",I,C);return n([e,t,r]),{value:zy(r,b),gradFunc:S}})(x,w):gy((e,t,n,r)=>{const s=dm.runKernel("_FusedMatMul",I,C);return r([e,t,s,n]),{value:zy(s,b),gradFunc:S}})(x,w,v)}});function qx(e,t,n){const r=1-e%2,s=new Float32Array(e);for(let a=0;a<e;++a){const i=2*Math.PI*a/(e+r-1);s[a]=t-n*Math.cos(i)}return wx(s,"float32")}Sm({hammingWindow_:function(e){return qx(e,.54,.46)}});const Kx=Sm({hannWindow_:function(e){return qx(e,.5,.5)}}),Xx=Sm({frame_:function(e,t,n,r=!1,s=0){let a=0;const i=[];for(;a+t<=e.size;)i.push(lx(e,a,t)),a+=n;if(r)for(;a<e.size;){const r=a+t-e.size,o=jy([lx(e,a,t-r),pb([r],s)]);i.push(o),a+=n}return 0===i.length?vx([],[0,t]):zy(jy(i),[i.length,t])}});Sm({stft_:function(e,t,n,r,s=Kx){null==r&&(r=Math.floor(Math.pow(2,Math.ceil(Math.log(t)/Math.log(2)))));const a=Xx(e,t,n),i=kb(a,s(t));return $x(i,r)}});const Zx=Sm({cropAndResize_:function(e,t,n,r,s="bilinear",a=0){const i=vm(e,"image","cropAndResize"),o=vm(t,"boxes","cropAndResize","float32"),l=vm(n,"boxInd","cropAndResize","int32"),u=o.shape[0];return fp(4===i.rank,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),fp(2===o.rank&&4===o.shape[1],()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`),fp(1===l.rank&&l.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`),fp(2===r.length,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),fp(r[0]>=1&&r[1]>=1,()=>"cropSize must be atleast [1,1], but was "+r),fp("bilinear"===s||"nearest"===s,()=>"method must be bilinear or nearest, but was "+s),dm.runKernel("CropAndResize",{image:i,boxes:o,boxInd:l},{method:s,extrapolationValue:a,cropSize:r})}}),Yx=Sm({flipLeftRight_:function(e){const t=vm(e,"image","flipLeftRight","float32");return fp(4===t.rank,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`),dm.runKernel("FlipLeftRight",{image:t},{})}}),Jx=Sm({grayscaleToRGB_:function(e){const t=vm(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];fp(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),fp(1===r,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`);const s=new Array(t.rank);return s.fill(1,0,n),s[n]=3,hb(t,s)}}),Qx=Sm({rotateWithOffset_:function(e,t,n=0,r=.5){const s=vm(e,"image","rotateWithOffset","float32");return fp(4===s.rank,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`),dm.runKernel("RotateWithOffset",{image:s},{radians:t,fillValue:n,center:r})}});function ew(e,t,n,r,s,a){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==a&&(a=0);const i=e.shape[0];return n=Math.min(n,i),fp(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),fp(2===e.rank,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),fp(4===e.shape[1],()=>"boxes must have 4 columns, but 2nd dimension was "+e.shape[1]),fp(1===t.rank,()=>"scores must be a 1D tensor"),fp(t.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was `+t.shape[0]),fp(0<=a&&a<=1,()=>`softNmsSigma must be in [0, 1], but was '${a}'`),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:a}}const tw=Sm({nonMaxSuppression_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=vm(e,"boxes","nonMaxSuppression","float32"),i=vm(t,"scores","nonMaxSuppression","float32"),o=ew(a,i,n,r,s);return dm.runKernel("NonMaxSuppressionV3",{boxes:a,scores:i},{maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:s=o.scoreThreshold})}});function nw(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,s=e.length,a=0,i=!1;for(;r<s;){a=r+(s-r>>>1);const o=n(t,e[a]);o>0?r=a+1:(s=a,i=!o)}return i?r:-r-1}(e,t,n||rw)}(e,t,n);e.splice(r<0?-(r+1):r,0,t)}function rw(e,t){return e>t?1:e<t?-1:0}function sw(e,t,n,r,s){return ow(e,t,n,r,s,0)}function aw(e,t,n,r,s,a){return ow(e,t,n,r,s,0,!1,a,!0)}function iw(e,t,n,r,s,a){return ow(e,t,n,r,s,a,!0)}function ow(e,t,n,r,s,a,i=!1,o=!1,l=!1){const u=[];for(let g=0;g<t.length;g++)t[g]>s&&u.push({score:t[g],boxIndex:g,suppressBeginIndex:0});u.sort(cw);const c=a>0?-.5/a:0,h=[],d=[];for(;h.length<n&&u.length>0;){const t=u.pop(),{score:n,boxIndex:a,suppressBeginIndex:i}=t;if(n<s)break;let o=!1;for(let l=h.length-1;l>=i;--l){const n=lw(e,a,h[l]);if(n>=r){o=!0;break}if(t.score=t.score*uw(r,c,n),t.score<=s)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(a),d.push(t.score)):t.score>s&&nw(u,t,cw))}const p=h.length,f=n-p;o&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:h};return i&&(m.selectedScores=d),l&&(m.validOutputs=p),m}function lw(e,t,n){const r=e.subarray(4*t,4*t+4),s=e.subarray(4*n,4*n+4),a=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),d=Math.max(s[1],s[3]),p=(o-a)*(l-i),f=(h-u)*(d-c);if(p<=0||f<=0)return 0;const m=Math.max(a,u),g=Math.max(i,c),y=Math.min(o,h),b=Math.min(l,d),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(p+f-x)}function uw(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function cw(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const hw=Sm({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const i=vm(e,"boxes","nonMaxSuppression"),o=vm(t,"scores","nonMaxSuppression"),l=ew(i,o,n,r,s,a),u=dm.runKernel("NonMaxSuppressionV5",{boxes:i,scores:o},{maxOutputSize:n=l.maxOutputSize,iouThreshold:r=l.iouThreshold,scoreThreshold:s=l.scoreThreshold,softNmsSigma:a=l.softNmsSigma});return{selectedIndices:u[0],selectedScores:u[1]}}}),dw=Sm({nonMaxSuppressionPadded_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const i=vm(e,"boxes","nonMaxSuppression"),o=vm(t,"scores","nonMaxSuppression"),l=ew(i,o,n,r,s,null),u=dm.runKernel("NonMaxSuppressionV4",{boxes:i,scores:o},{maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:a});return{selectedIndices:u[0],validOutputs:u[1]}}}),pw=Sm({resizeBilinear_:function(e,t,n=!1,r=!1){const s=vm(e,"images","resizeBilinear");fp(3===s.rank||4===s.rank,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`),fp(2===t.length,()=>"Error in resizeBilinear: new shape must 2D, but got shape "+t+"."),fp(!1===r||!1===n,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let a=s,i=!1;3===s.rank&&(i=!0,a=zy(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,o=dm.runKernel("ResizeBilinear",{images:a},{alignCorners:n,halfPixelCenters:r,size:t});return i?zy(o,[o.shape[1],o.shape[2],o.shape[3]]):o}}),fw=Sm({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const s=vm(e,"images","resizeNearestNeighbor");fp(3===s.rank||4===s.rank,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`),fp(2===t.length,()=>"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+t+"."),fp("float32"===s.dtype||"int32"===s.dtype,()=>"`images` must have `int32` or `float32` as dtype"),fp(!1===r||!1===n,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let a=s,i=!1;3===s.rank&&(i=!0,a=zy(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,o=dm.runKernel("ResizeNearestNeighbor",{images:a},{alignCorners:n,halfPixelCenters:r,size:t});return i?zy(o,[o.shape[1],o.shape[2],o.shape[3]]):o}}),mw=Sm({bincount_:function(e,t,n){const r=vm(e,"x","bincount"),s=vm(t,"weights","bincount");return fp("int32"===r.dtype,()=>"Error in bincount: input dtype must be int32, but got "+r.dtype),fp(n>=0,()=>`size must be non-negative, but got ${n}.`),fp(s.size===r.size||0===s.size,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: `+s.shape+"."),dm.runKernel("Bincount",{x:r,weights:s},{size:n})}}),gw=Sm({lessEqual_:function(e,t){let n=vm(e,"a","lessEqual","string_or_numeric"),r=vm(t,"b","lessEqual","string_or_numeric");return[n,r]=sm(n,r),zg(n.shape,r.shape),dm.runKernel("LessEqual",{a:n,b:r})}}),yw=Sm({round_:function(e){const t=vm(e,"x","round");return dm.runKernel("Round",{x:t})}});function bw(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");return dm.runKernel("Range",{},{start:e,stop:t,step:n,dtype:r})}const xw=Sm({threshold_:function(e,t="binary",n=!1,r=.5){const s=vm(e,"image","threshold"),a=s.shape[0]*s.shape[1];let i,o,l,u,c=kb(wx([r]),255);if(fp(3===s.rank,()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`),fp(3===s.shape[2]||1===s.shape[2],()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`),fp("int32"===s.dtype||"float32"===s.dtype,()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`),fp("otsu"===t||"binary"===t,()=>"Method must be binary or otsu, but was "+t),3===s.shape[2]){[i,o,l]=mx(s,[1,1,1],-1);const e=kb(i,.2989),t=kb(o,.587),n=kb(l,.114);u=wy(wy(e,t),n)}else u=e;"otsu"===t&&(c=function(e,t){let n,r,s,a,i,o,l=wx([-1]),u=wx([0]),c=wx([0]);for(let h=0;h<e.size-1;h++){n=lx(e,0,h+1),r=lx(e,h+1),i=ib(Ib(n),t),o=ib(Ib(r),t);const d=Ib(kb(n,bw(0,n.size)));s=ib(d,Ib(n));const p=pb(r.shape,n.size),f=wy(bw(0,r.size),p),m=kb(r,f);a=ib(Ib(m),Ib(r));const g=Sb(s,a),y=Sb(s,a),b=kb(i,o);c=kb(kb(b,g),y);const x=gb(c,u);u=Cx(x,c,u),l=Cx(x,wx([h]),l)}return l}(mw(yg(yw(u),"int32"),Nm([]),256),a));const h=n?gw(u,c):gb(u,c);return yg(kb(h,255),"int32")}}),ww=Sm({transform_:function(e,t,n="nearest",r="constant",s=0,a){const i=vm(e,"image","transform","float32"),o=vm(t,"transforms","transform","float32");return fp(4===i.rank,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),fp(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),fp(null==a||2===a.length,()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`),dm.runKernel("Transform",{image:i,transforms:o},{interpolation:n,fillMode:r,fillValue:s,outputShape:a})}}),vw=Sm({bandPart_:function(e,t,n){fp(t%1==0,()=>`bandPart(): numLower must be an integer, got ${t}.`),fp(n%1==0,()=>`bandPart(): numUpper must be an integer, got ${n}.`);const r=vm(e,"a","bandPart");fp(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);const s=r.shape,[a,i]=r.shape.slice(-2);if(!(t<=a))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=a),n<0&&(n=i);const o=zy(bw(0,a,1,"int32"),[-1,1]),l=bw(0,i,1,"int32"),u=Sb(o,l),c=Nb(gw(u,yy(+t,"int32")),yb(u,yy(-n,"int32"))),h=jb([a,i],r.dtype);return zy(bx(Sx(zy(r,[-1,a,i])).map(e=>Cx(c,e,h))),s)}}),kw=Sm({min_:function(e,t=null,n=!1){const r=vm(e,"x","min");return dm.runKernel("Min",{x:r},{axis:t,keepDims:n})}}),Sw=Sm({norm_:function(e,t="euclidean",n=null,r=!1){const s=function e(t,n,r=null){if(0===t.rank)return xy(t);if(1!==t.rank&&null===r)return e(zy(t,[-1]),n,r);if(1===t.rank||"number"==typeof r||Array.isArray(r)&&1===r.length){if(1===n)return Ib(xy(t),r);if(n===1/0)return vb(xy(t),r);if(n===-1/0)return kw(xy(t),r);if("euclidean"===n||2===n)return gx(Ib(Zb(xy(t),yy(2,"int32")),r));throw new Error("Error in norm: invalid ord value: "+n)}if(Array.isArray(r)&&2===r.length){if(1===n)return vb(Ib(xy(t),r[0]),r[1]-1);if(n===1/0)return vb(Ib(xy(t),r[1]),r[0]);if(n===-1/0)return kw(Ib(xy(t),r[1]),r[0]);if("fro"===n||"euclidean"===n)return gx(Ib(Ub(t),r));throw new Error("Error in norm: invalid ord value: "+n)}throw new Error("Error in norm: invalid axis: "+r)}(e=vm(e,"x","norm"),t,n);let a=s.shape;if(r){const t=_p(n,e.shape);a=Mb(s.shape,t)}return zy(s,a)}}),Iw=Sm({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,fp(null!=e&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const n=e[0].shape[0];for(let t=1;t<e.length;++t)fp(e[t].shape[0]===n,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`)}else t=!0,e=mx(e,e.shape[0],0).map(e=>yx(e,[0]));fp(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);const n=[],r=e;for(let s=0;s<e.length;++s)n.push(dm.tidy(()=>{let e=r[s];if(s>0)for(let t=0;t<s;++t){const r=kb(Ib(kb(n[t],e)),n[t]);e=Sb(e,r)}return ib(e,Sw(e,"euclidean"))}));return t?bx(n,0):n}});function Cw(e,t=!1){return dm.tidy(()=>{fp(2===e.shape.length,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);const n=e.shape[0],r=e.shape[1];let s=db(n),a=bg(e);const i=vx([[1]],[1,1]);let o=bg(i);const l=n>=r?r:n;for(let e=0;e<l;++e){const t=a,l=o,u=s;[o,a,s]=dm.tidy(()=>{const t=lx(a,[e,e],[n-e,1]),l=Sw(t),u=lx(a,[e,e],[1,1]),c=Cx(gb(u,0),vx([[-1]]),vx([[1]])),h=Sb(u,kb(c,l)),d=ib(t,h);o=1===d.shape[0]?bg(i):jy([i,lx(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=Wb(ib(Tb(c,h),l)),f=lx(a,[e,0],[n-e,r]),m=kb(p,o),g=Tx(o);if(0===e)a=Sb(f,Tb(m,Tb(g,f)));else{const t=Sb(f,Tb(m,Tb(g,f)));a=jy([lx(a,[0,0],[e,r]),t],0)}const y=Tx(m),b=lx(s,[0,e],[n,s.shape[1]-e]);if(0===e)s=Sb(b,Tb(Tb(b,o),y));else{const t=Sb(b,Tb(Tb(b,o),y));s=jy([lx(s,[0,0],[n,e]),t],1)}return[o,a,s]}),py([t,l,u])}return!t&&n>r&&(s=lx(s,[0,0],[n,r]),a=lx(a,[0,0],[r,r])),[s,a]})}const Nw=Sm({qr_:function(e,t=!1){if(fp(e.rank>=2,()=>"qr() requires input tensor to have a rank >= 2, but got rank "+e.rank),2===e.rank)return Cw(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce((e,t)=>e*t),r=Sx(zy(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),s=[],a=[];return r.forEach(e=>{const[n,r]=Cw(e,t);s.push(n),a.push(r)}),[zy(bx(s,0),e.shape),zy(bx(a,0),e.shape)]}}});var Tw;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(Tw||(Tw={}));const _w=Sm({computeWeightedLoss_:function(e,t,n=Tw.SUM_BY_NONZERO_WEIGHTS){const r=vm(e,"losses","computeWeightedLoss");let s=null;null!=t&&(s=vm(t,"weights","computeWeightedLoss"));const a=null==s?r:kb(r,s);if(n===Tw.NONE)return a;if(n===Tw.SUM)return Ib(a);if(n===Tw.MEAN){if(null==s)return Rb(a);{const e=r.size/s.size,t=ib(Ib(a),Ib(s));return e>1?ib(t,yy(e)):t}}if(n===Tw.SUM_BY_NONZERO_WEIGHTS){if(null==s)return ib(Ib(a),yy(r.size));{const e=kb(s,qb(r.shape)),t=yg(Ib(Gb(e,yy(0))),"float32");return ib(Ib(a),t)}}throw Error("Unknown reduction: "+n)}});Sm({absoluteDifference_:function(e,t,n,r=Tw.SUM_BY_NONZERO_WEIGHTS){const s=vm(e,"labels","absoluteDifference"),a=vm(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=vm(n,"weights","absoluteDifference")),mp(s.shape,a.shape,"Error in absoluteDifference: ");const o=xy(Sb(s,a));return _w(o,i,r)}}),Sm({cosineDistance_:function(e,t,n,r,s=Tw.SUM_BY_NONZERO_WEIGHTS){const a=vm(e,"labels","cosineDistance"),i=vm(t,"predictions","cosineDistance");let o=null;null!=r&&(o=vm(r,"weights","cosineDistance")),mp(a.shape,i.shape,"Error in cosineDistance: ");const l=yy(1),u=Sb(l,Ib(kb(a,i),n,!0));return _w(u,o,s)}}),Sm({hingeLoss_:function(e,t,n,r=Tw.SUM_BY_NONZERO_WEIGHTS){let s=vm(e,"labels","hingeLoss");const a=vm(t,"predictions","hingeLoss");let i=null;null!=n&&(i=vm(n,"weights","hingeLoss")),mp(s.shape,a.shape,"Error in hingeLoss: ");const o=yy(1);s=Sb(kb(yy(2),s),o);const l=rx(Sb(o,kb(s,a)));return _w(l,i,r)}}),Sm({huberLoss_:function(e,t,n,r=1,s=Tw.SUM_BY_NONZERO_WEIGHTS){const a=vm(e,"labels","huberLoss"),i=vm(t,"predictions","huberLoss");let o=null;null!=n&&(o=vm(n,"weights","huberLoss")),mp(a.shape,i.shape,"Error in huberLoss: ");const l=yy(r),u=xy(Sb(i,a)),c=$b(u,l),h=Sb(u,c),d=wy(kb(yy(.5),Ub(c)),kb(l,h));return _w(d,o,s)}}),Sm({logLoss_:function(e,t,n,r=1e-7,s=Tw.SUM_BY_NONZERO_WEIGHTS){const a=vm(e,"labels","logLoss"),i=vm(t,"predictions","logLoss");let o=null;null!=n&&(o=vm(n,"weights","logLoss")),mp(a.shape,i.shape,"Error in logLoss: ");const l=yy(1),u=yy(r),c=Wb(kb(a,xb(wy(i,u)))),h=kb(Sb(l,a),xb(wy(Sb(l,i),u))),d=Sb(c,h);return _w(d,o,s)}});const Ew=Sm({squaredDifference_:function(e,t){let n=vm(e,"a","squaredDifference"),r=vm(t,"b","squaredDifference");return[n,r]=sm(n,r),zg(n.shape,r.shape),dm.runKernel("SquaredDifference",{a:n,b:r},{})}});Sm({meanSquaredError_:function(e,t,n,r=Tw.SUM_BY_NONZERO_WEIGHTS){const s=vm(e,"labels","meanSquaredError"),a=vm(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=vm(n,"weights","meanSquaredError")),mp(s.shape,a.shape,"Error in meanSquaredError: ");const o=Ew(s,a);return _w(o,i,r)}}),Sm({sigmoidCrossEntropy_:function(e,t,n,r=0,s=Tw.SUM_BY_NONZERO_WEIGHTS){let a=vm(e,"multiClassLabels","sigmoidCrossEntropy");const i=vm(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=vm(n,"weights","sigmoidCrossEntropy")),mp(a.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=yy(r),t=yy(1),n=yy(.5);a=wy(kb(a,Sb(t,e)),kb(n,e))}const l=function(e,t){const n=vm(e,"labels","sigmoidCrossEntropyWithLogits"),r=vm(t,"logits","sigmoidCrossEntropyWithLogits");mp(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=rx(r),a=kb(r,n),i=wb(ub(Wb(xy(r))));return wy(Sb(s,a),i)}(a,i);return _w(l,o,s)}});const Aw=Sm({logSumExp_:function(e,t=null,n=!1){const r=vm(e,"x","logSumExp"),s=_p(t,r.shape),a=vb(r,s,!0),i=Sb(r,a),o=ub(i),l=Ib(o,s),u=xb(l),c=wy(zy(a,u.shape),u);if(n){const e=Mb(c.shape,s);return zy(c,e)}return c}});Sm({softmaxCrossEntropy_:function(e,t,n,r=0,s=Tw.SUM_BY_NONZERO_WEIGHTS){let a=vm(e,"onehotLabels","softmaxCrossEntropy");const i=vm(t,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=vm(n,"weights","softmaxCrossEntropy")),mp(a.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const e=yy(r),t=yy(1),n=yy(a.shape[1]);a=wy(kb(a,Sb(t,e)),ib(e,n))}const l=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was `+n);return gy((e,t,r)=>{const s=Aw(t,[n],!0),a=Sb(yg(t,"float32"),s);r([e,a]);const i=Wb(kb(a,e));return{value:Ib(i,[n]),gradFunc:(e,t)=>{const[r,s]=t,a=Mb(e.shape,[n]);return[kb(zy(e,a),Sb(yg(r,"float32"),ub(s))),kb(zy(e,a),Sb(ub(s),yg(r,"float32")))]}}})(e,t)}(a,i);return _w(l,o,s)}}),Sm({sparseFillEmptyRows_:function(e,t,n,r){const s=vm(e,"indices","sparseFillEmptyRows","int32"),a=vm(t,"values","sparseFillEmptyRows"),i=vm(n,"denseShape","sparseFillEmptyRows","int32"),o=vm(r,"defaultValue","sparseFillEmptyRows",a.dtype);if(2!==s.rank)throw new Error("Indices should be Tensor2D but received shape\n        "+s.shape);if(1!==a.rank)throw new Error("Values should be Tensor1D but received shape "+a.shape);if(1!==i.rank)throw new Error("Dense shape should be Tensor1D but received shape "+i.shape);if(0!==o.rank)throw new Error("Default value should be a scalar but received shape "+o.shape);const l=dm.runKernel("SparseFillEmptyRows",{indices:s,values:a,denseShape:i,defaultValue:o});return{outputIndices:l[0],outputValues:l[1],emptyRowIndicator:l[2],reverseIndexMap:l[3]}}}),Sm({sparseReshape_:function(e,t,n){const r=vm(e,"inputIndices","sparseReshape","int32"),s=vm(t,"inputShape","sparseReshape","int32"),a=vm(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error("Input indices should be Tensor2D but received shape\n        "+r.shape);if(1!==s.rank)throw new Error("Input shape should be Tensor1D but received shape "+s.shape);if(1!==a.rank)throw new Error("New shape should be Tensor1D but received shape "+a.shape);const i=dm.runKernel("SparseReshape",{inputIndices:r,inputShape:s,newShape:a});return{outputIndices:i[0],outputShape:i[1]}}}),Sm({sparseSegmentMean_:function(e,t,n){const r=vm(e,"data","sparseSegmentMean"),s=vm(t,"indices","sparseSegmentMean","int32"),a=vm(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error("Indices should be Tensor1D but received shape\n          "+s.shape);if(1!==a.rank)throw new Error("Segment ids should be Tensor1D but received shape\n          "+a.shape);return dm.runKernel("SparseSegmentMean",{data:r,indices:s,segmentIds:a})}}),Sm({sparseSegmentSum_:function(e,t,n){const r=vm(e,"data","sparseSegmentSum"),s=vm(t,"indices","sparseSegmentSum","int32"),a=vm(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error("Indices should be Tensor1D but received shape\n         "+s.shape);if(1!==a.rank)throw new Error("Segment ids should be Tensor1D but received shape\n         "+a.shape);return dm.runKernel("SparseSegmentSum",{data:r,indices:s,segmentIds:a})}}),Sm({stringNGrams_:function(e,t,n,r,s,a,i,o){const l=vm(e,"data","stringNGrams","string");if("string"!==l.dtype)throw new Error("Data must be of datatype string");if(1!==l.shape.length)throw new Error("Data must be a vector, saw: "+l.shape);const u=vm(t,"dataSplits","stringNGrams");if("int32"!==u.dtype)throw new Error("Data splits must be of datatype int32");const c=dm.runKernel("StringNGrams",{data:l,dataSplits:u},{separator:n,nGramWidths:r,leftPad:s,rightPad:a,padWidth:i,preserveShortSequences:o});return{nGrams:c[0],nGramsSplits:c[1]}}}),Sm({stringSplit_:function(e,t,n=!0){const r=vm(e,"input","stringSplit","string"),s=vm(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error("Input should be Tensor1D but received shape "+r.shape);if(0!==s.rank)throw new Error("Delimiter should be a scalar but received shape "+s.shape);const a=dm.runKernel("StringSplit",{input:r,delimiter:s},{skipEmpty:n});return{indices:a[0],values:a[1],shape:a[2]}}}),Sm({stringToHashBucketFast_:function(e,t){const n=vm(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");return dm.runKernel("StringToHashBucketFast",{input:n},r)}});const Rw={flipLeftRight:Yx,grayscaleToRGB:Jx,resizeNearestNeighbor:fw,resizeBilinear:pw,rotateWithOffset:Qx,cropAndResize:Zx,nonMaxSuppression:tw,nonMaxSuppressionAsync:async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=vm(e,"boxes","nonMaxSuppressionAsync"),i=vm(t,"scores","nonMaxSuppressionAsync"),o=ew(a,i,n,r,s);n=o.maxOutputSize,r=o.iouThreshold,s=o.scoreThreshold;const l=await Promise.all([a.data(),i.data()]),u=l[0],c=l[1],{selectedIndices:h}=sw(u,c,n,r,s);return a!==e&&a.dispose(),i!==t&&i.dispose(),wx(h,"int32")},nonMaxSuppressionWithScore:hw,nonMaxSuppressionWithScoreAsync:async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const i=vm(e,"boxes","nonMaxSuppressionAsync"),o=vm(t,"scores","nonMaxSuppressionAsync"),l=ew(i,o,n,r,s,a);n=l.maxOutputSize,r=l.iouThreshold,s=l.scoreThreshold,a=l.softNmsSigma;const u=await Promise.all([i.data(),o.data()]),c=u[0],h=u[1],{selectedIndices:d,selectedScores:p}=iw(c,h,n,r,s,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:wx(d,"int32"),selectedScores:wx(p)}},nonMaxSuppressionPadded:dw,nonMaxSuppressionPaddedAsync:async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const i=vm(e,"boxes","nonMaxSuppressionAsync"),o=vm(t,"scores","nonMaxSuppressionAsync"),l=ew(i,o,n,r,s,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,[d,p]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=aw(d,p,u,c,h,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:wx(f,"int32"),validOutputs:yy(m,"int32")}},threshold:xw,transform:ww},$w={bandPart:vw,gramSchmidt:Iw,qr:Nw};class Fw extends by{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=dm.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=dm.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:t+"/accum_grad",variable:dy(()=>Nx(r).variable(!1))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:t+"/accum_var",variable:dy(()=>Nx(r).variable(!1))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;dy(()=>{const e=wy(kb(a,this.rho),kb(Ub(s),1-this.rho)),t=kb(ib(gx(wy(i,this.epsilon)),gx(wy(a,this.epsilon))),s),n=wy(kb(i,this.rho),kb(Ub(t),1-this.rho));a.assign(e),i.assign(n);const o=wy(kb(t,-this.learningRate),r);r.assign(o)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(py(this.accumulatedGrads.map(e=>e.variable)),py(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedUpdates=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}Fw.className="Adadelta",uy(Fw);class Dw extends by{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=dm.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:t+"/accumulator",variable:dy(()=>pb(r.shape,this.initialAccumulatorValue).variable(e))}}const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedGrads[n].variable;dy(()=>{const e=wy(a,Ub(s));a.assign(e);const t=wy(kb(ib(s,gx(wy(e,dm.backend.epsilon()))),-this.learningRate),r);r.assign(t)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&py(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}Dw.className="Adagrad",uy(Dw);class Ow extends by{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],dy(()=>{this.accBeta1=yy(t).variable(),this.accBeta2=yy(n).variable()}),null==r&&(this.epsilon=dm.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);dy(()=>{const n=Sb(1,this.accBeta1),r=Sb(1,this.accBeta2);t.forEach((t,s)=>{const a=dm.registeredVariables[t];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:t+"/m",variable:dy(()=>Nx(a).variable(!1))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:t+"/v",variable:dy(()=>Nx(a).variable(!1))});const i=Array.isArray(e)?e[s].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[s].variable,l=this.accumulatedSecondMoment[s].variable,u=wy(kb(o,this.beta1),kb(i,1-this.beta1)),c=wy(kb(l,this.beta2),kb(Ub(i),1-this.beta2)),h=ib(u,n),d=ib(c,r);o.assign(u),l.assign(c);const p=wy(kb(ib(h,wy(gx(d),this.epsilon)),-this.learningRate),a);a.assign(p)}),this.accBeta1.assign(kb(this.accBeta1,this.beta1)),this.accBeta2.assign(kb(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&py(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedSecondMoment&&py(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),dy(()=>{this.accBeta1.assign(Zb(this.beta1,this.iterations_+1)),this.accBeta2.assign(Zb(this.beta2,this.iterations_+1))});const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedSecondMoment=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}Ow.className="Adam",uy(Ow);class Mw extends by{constructor(e,t,n,r=null,s=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],dy(()=>{this.iteration=yy(0).variable(),this.accBeta1=yy(t).variable()}),null==r&&(this.epsilon=dm.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);dy(()=>{const n=Sb(1,this.accBeta1),r=ib(-this.learningRate,wy(kb(this.iteration,this.decay),1));t.forEach((t,s)=>{const a=dm.registeredVariables[t];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:t+"/m",variable:Nx(a).variable(!1)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:t+"/v",variable:Nx(a).variable(!1)});const i=Array.isArray(e)?e[s].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[s].variable,l=this.accumulatedWeightedInfNorm[s].variable,u=wy(kb(o,this.beta1),kb(i,1-this.beta1)),c=kb(l,this.beta2),h=xy(i),d=Ab(c,h);o.assign(u),l.assign(d);const p=wy(kb(ib(r,n),ib(u,wy(d,this.epsilon))),a);a.assign(p)}),this.iteration.assign(wy(this.iteration,1)),this.accBeta1.assign(kb(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&py(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedWeightedInfNorm&&py(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}Mw.className="Adamax",uy(Mw);class Lw extends by{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=dm.registeredVariables[t];dy(()=>{const e=wy(kb(this.c,r),s);s.assign(e)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=fy(yy(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}Lw.className="SGD",uy(Lw);class zw extends Lw{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=yy(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=dm.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:t+"/momentum",variable:dy(()=>Nx(r).variable(e))}}const s=this.accumulations[n].variable,a=Array.isArray(e)?e[n].tensor:e[t];null!=a&&dy(()=>{let e;const t=wy(kb(this.m,s),a);e=wy(kb(this.c,this.useNesterov?wy(a,kb(t,this.m)):t),r),s.assign(t),r.assign(e)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&py(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}zw.className="Momentum",uy(zw);class Pw extends by{constructor(e,t=.9,n=0,r=null,s=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=dm.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=dm.registeredVariables[t];null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:t+"/rms",variable:dy(()=>Nx(r).variable(!1))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:t+"/momentum",variable:dy(()=>Nx(r).variable(!1))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:t+"/mg",variable:dy(()=>Nx(r).variable(!1))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedMeanSquares[n].variable,i=this.accumulatedMoments[n].variable;dy(()=>{const e=wy(kb(a,this.decay),kb(Ub(s),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,o=wy(kb(t,this.decay),kb(s,1-this.decay)),l=ib(kb(s,this.learningRate),gx(Sb(e,wy(Ub(o),this.epsilon)))),u=wy(kb(i,this.momentum),l);a.assign(e),t.assign(o),i.assign(u);const c=Sb(r,u);r.assign(c)}else{const e=wy(kb(a,this.decay),kb(Ub(s),1-this.decay)),t=wy(kb(i,this.momentum),ib(kb(s,this.learningRate),gx(wy(e,this.epsilon))));a.assign(e),i.assign(t);const n=Sb(r,t);r.assign(n)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&py(this.accumulatedMeanSquares.map(e=>e.variable)),null!=this.accumulatedMeanGrads&&this.centered&&py(this.accumulatedMeanGrads.map(e=>e.variable)),null!=this.accumulatedMoments&&py(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2;this.accumulatedMeanSquares=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedMoments=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}Pw.className="RMSProp",uy(Pw);class Bw{static sgd(e){return new Lw(e)}static momentum(e,t,n=!1){return new zw(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,s=!1){return new Pw(e,t,n,r,s)}static adam(e=.001,t=.9,n=.999,r=null){return new Ow(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new Fw(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,s=0){return new Mw(e,t,n,r,s)}static adagrad(e,t=.1){return new Dw(e,t)}}const Uw={sgd:Bw.sgd,momentum:Bw.momentum,adadelta:Bw.adadelta,adagrad:Bw.adagrad,rmsprop:Bw.rmsprop,adamax:Bw.adamax,adam:Bw.adam},Vw="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function Ww(){return new Promise(e=>Vw(()=>e()))}function Gw(e,t){const n=e[0].length;e.forEach((e,t)=>{fp(e.length===n,()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`)}),fp(t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);const r=e[0];e.forEach((e,s)=>{for(let a=0;a<n;a++)fp(a===t||e[a]===r[a],()=>`Error in concat${n}D: Shape of tensors[${s}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`)})}function Hw(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}const jw=30;function qw(e){return e<=jw?e:Wp(e,Math.floor(Math.sqrt(e)))}function Kw(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function Xw(e,t,n,r=!0){let s=[];if(r)s=s.concat(t.slice(0)),s.push(e[0]/n),s=s.concat(e.slice(1));else{s=s.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)s=s.concat([e[r+1]/t[r],t[r]]);s=s.concat(e.slice(n+1))}return s}function Zw(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],s=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?s.push(r):n.push(r);r.push(...n),r.push(0),r.push(...s)}return r}function Yw(e,t,n,r=!0){const s=[];s.push(r?e[0]/n:e[0]*n);for(let a=1;a<e.length;++a)s.push(a<=t.length?r?t[a-1]*e[a]:e[a]/t[a-1]:e[a]);return s}function Jw(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function Qw(e,t,n){const r=e.slice(0,1);for(let s=0;s<n;++s)r.push(e[s+1]-t[s][0]-t[s][1]);return r}function ev(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===bp(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const s=t.shape,a=s[s.length-1];let i=1;for(let h=0;h<s.length-1;++h)i*=s[h];const o=e.shape,l=s.slice();l.pop();let u=1;for(let h=a;h<n;++h)u*=o[h],l.push(o[h]);const c=[...Gp(e.shape).map(e=>e/u),1].slice(0,a);return[l,i,u,c]}function tv(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,s=t.rank>1?t.rank-1:1,a="Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: "+n.shape+`, indices.shape: ${t.shape}, shape: ${e}`+`, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(a+` update.rank < ${s}. `);if(e.length<r+(n.rank-s))throw new Error(a+" Output shape length < "+(r+(n.rank-s)));if(n.rank!==s+e.length-r)throw new Error(a+" update.rank != "+(s+e.length-r));for(let i=0;i<s;++i)if(n.shape[i]!==t.shape[i])throw new Error(a+` updates.shape[${i}] (${n.shape[i]}) != indices.shape[${i}] (${t.shape[i]}).`);for(let i=0;i<n.rank-s;++i)if(n.shape[i+s]!==e[i+r])throw new Error(a+` updates.shape[${i+s}] (${n.shape[i+s]}) != shape[${i+s}] (${e[i+s]})`)}function nv(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: "+t.dtype);if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: "+n);if(0===n.length){if(0===t.size)throw new Error("Indices specified for empty output. indices shape: "+t.shape);if(0===e.size)throw new Error("Updates specified for empty output. updates shape: "+e.shape)}tv(n,t,e)}function rv(e,t,n){const r=t.shape.length,s=r>1?t.shape[r-1]:1,a=n.length;let i=1;for(let l=s;l<a;++l)i*=n[l];const o=s<1?1:s;return{sliceRank:s,numUpdates:bp(t.shape)/o,sliceSize:i,strides:[...Gp(n.slice(0,s)),1],outputSize:bp(n)}}const sv=1.7580993408473768,av=1.0507009873554805,iv=.3275911,ov=.254829592,lv=-.284496736,uv=1.421413741,cv=-1.453152027,hv=1.061405429;function dv(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function pv(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function fv(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let s=0;s<e.length;s+=4)n[Math.floor(s/4)]=e[s],r[Math.floor(s/4)]=e[s+1];return{real:n,imag:r}}function mv(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let s=2;s<e.length;s+=4)n[Math.floor(s/4)]=e[s],r[Math.floor(s/4)]=e[s+1];return{real:n,imag:r}}function gv(e,t){return{real:e[2*t],imag:e[2*t+1]}}function yv(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function bv(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let s=0;s<Math.ceil(e/2);s++){const a=(t?2:-2)*Math.PI*(s/e);n[s]=Math.cos(a),r[s]=Math.sin(a)}return{real:n,imag:r}}function xv(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}const wv=/->/g;function vv(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(wv,"").length)/"->".length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[r,s]=e.split("->");fp(-1===r.indexOf("..."),()=>'The ellipsis notation ("...") is not supported yet.');const a=r.split(","),i=a.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let h=0;h<s.length;++h){const e=s[h];if(!a.some(t=>-1!==t.indexOf(e)))throw new Error(`Output subscripts contain the label ${e} not present in the input subscripts.`);-1===o.indexOf(e)&&o.push(e)}for(let h=0;h<r.length;++h){const e=r[h];-1===o.indexOf(e)&&","!==e&&o.push(e)}const l=new Array(a.length);for(let h=0;h<i;++h){if(new Set(a[h].split("")).size!==a[h].length)throw new Error(`Found duplicate axes in input component ${a[h]}. Support for duplicate axes in input is not implemented yet.`);l[h]=[];for(let e=0;e<a[h].length;++e)l[h].push(o.indexOf(a[h][e]))}const u=o.length,c=[];for(let h=s.length;h<u;++h)c.push(h);return{allDims:o,summedDims:c,idDims:l}}function kv(e,t){let n=new Array(e);n.fill(-1);for(let s=0;s<t.length;++s)n[t[s]]=s;const r=[];for(let s=0;s<e;++s)-1===n[s]&&r.push(s);return n=n.filter(e=>-1!==e),{permutationIndices:n,expandDims:r}}function Sv(e,t,n){const r=new Array(e);for(let s=0;s<n.length;++s){const e=n[s].shape;for(let n=0;n<t[s].length;++n)void 0===r[t[s][n]]?r[t[s][n]]=e[n]:fp(r[t[s][n]]===e[n],()=>`Expected dimension ${r[t[s][n]]} at axis ${n} of input shaped ${JSON.stringify(e)}, but got dimension `+e[n])}}function Iv(e,t){const n=e,r=[];let s=0;0===e.length&&n.push(-1),s=e.length+1;for(let i=0;i<s;++i)r.push([]);const a=[];for(let i=0;i<n.length;++i){const e=Nv(t,n[i]);for(const t of e)-1===a.indexOf(t)&&(r[i].push(t),a.push(t))}return{path:n,steps:r}}function Cv(e){return e.every((e,t)=>e===t)}function Nv(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function Tv(e,t,n=0){let r=[];if("number"==typeof t)fp(e.shape[n]%t==0,()=>"Number of splits must evenly divide the axis."),r=new Array(t).fill(e.shape[n]/t);else{fp(t.reduce((e,t)=>(-1===t&&(e+=1),e),0)<=1,()=>"There should be only one negative value in split array.");const s=t.indexOf(-1);if(-1!==s){const r=t.reduce((e,t)=>t>0?e+t:e);t[s]=e.shape[n]-r}fp(e.shape[n]===t.reduce((e,t)=>e+t),()=>"The sum of sizes must match the size of the axis dimension."),r=t}return r}function _v(e){return"Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = "+e}function Ev(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function Av(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function Rv(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function $v(e,t){return`size ${e} must be non-negative, not ${t}`}function Fv(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Dv(e,t){return`Input to reshape is a SparseTensor with ${bp(e)}\n  dense values, but the requested shape requires a multiple of ${bp(t)}. inputShape=${e} outputShape= ${t}`}function Ov(e,t){return`Input to reshape is a tensor with ${bp(e)} dense values, but the requested shape has ${bp(t)}. inputShape=${e} outputShape=${t}`}function Mv(){return"segment ids must be >= 0"}function Lv(){return"segment ids are not increasing"}function zv(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function Pv(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}function Bv(e,t){let n,r=!1;for(e<=jw?(n=e,r=!0):n=Wp(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=Wp(e,n+1);return n}function Uv(e,t,n){const r=[],s=e.length;for(let a=0;a<s;a++)r.push(a!==t?e[a]:n);return r}function Vv(e,t,n,r){const s=t.shape.length,a=e.shape.length;if(0!==r&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>a)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${a}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let h=0;h<r;++h)if(e.shape[h]!==t.shape[h])throw new Error(`x.shape[${h}]: ${e.shape[h]} should be equal to indices.shape[${h}]: ${t.shape[h]}.`);const i=e.shape[n],o=[];let l=1,u=1,c=1;for(let h=0;h<r;++h)o.push(e.shape[h]),l*=e.shape[h];for(let h=r;h<n;h++)o.push(e.shape[h]),u*=e.shape[h];for(let h=r;h<s;h++)o.push(t.shape[h]);for(let h=n+1;h<a;h++)o.push(e.shape[h]),c*=e.shape[h];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:i,outputShape:o}}function Wv(e){try{return e.map(e=>Mf(e))}catch(dG){throw new Error("Failed to decode encoded string bytes into utf-8, error: "+dG)}}function Gv(e){return e.map(e=>Of(e))}function Hv(e,t){const n=[];for(let a=0;a<t.length;a++)t[a]&&n.push(a);const r=gg(e,"int32"),s=gg([n.length,e.length],"int32");for(let a=0;a<n.length;a++){const t=r.indexToLoc(n[a]);s.values.set(t,a*e.length)}return s.toTensor()}const jv={kernelName:"Abs",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>kb(e,Lx(yg(n,"float32"),-1))}}},qv={kernelName:"Acos",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Ub(yg(n,"float32")),r=gx(Sb(yy(1),t));return Wb(ib(e,r))}}}},Kv={kernelName:"Acosh",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=gx(Sb(Ub(yg(n,"float32")),1));return ib(e,t)}}}},Xv={kernelName:"Add",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=zg(n.shape,r.shape);return{a:()=>{let t=e;const r=Lg(n.shape,s);return r.length>0&&(t=Ib(t,r)),zy(t,n.shape)},b:()=>{let t=e;const n=Lg(r.shape,s);return n.length>0&&(t=Ib(t,n)),zy(t,r.shape)}}}},Zv={kernelName:"ArgMax",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Nx(n)}}},Yv={kernelName:"ArgMin",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Nx(n)}}},Jv={kernelName:"Asin",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ib(e,gx(Sb(yy(1),Ub(yg(n,"float32")))))}}},Qv={kernelName:"Asinh",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=gx(wy(yy(1),Ub(yg(n,"float32"))));return ib(e,t)}}}},ek={kernelName:"Atan2",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=zg(n.shape,r.shape);return{a:()=>{const t=wy(Ub(n),Ub(r));let a=kb(e,ib(r,t));const i=Lg(n.shape,s);return i.length>0&&(a=Ib(a,i)),zy(a,n.shape)},b:()=>{const t=wy(Ub(n),Ub(r));let a=Wb(kb(e,ib(n,t)));const i=Lg(r.shape,s);return i.length>0&&(a=Ib(a,i)),zy(a,r.shape)}}}},tk={kernelName:"Atan",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ib(e,wy(Ub(yg(n,"float32")),1))}}},nk={kernelName:"Atanh",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ib(e,Sb(yy(1),Ub(yg(n,"float32"))))}}},rk=Sm({avgPool3dGrad_:function(e,t,n,r,s,a){const i=vm(e,"dy","avgPool3dGrad"),o=vm(t,"input","avgPool3dGrad");let l=i,u=o,c=!1;4===o.rank&&(c=!0,l=zy(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=zy(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),fp(5===l.rank,()=>"Error in avgPool3dGrad: dy must be rank 5 but got rank "+l.rank+"."),fp(5===u.rank,()=>"Error in avgPool3dGrad: input must be rank 5 but got rank "+u.rank+"."),Ly("avgPool3dGrad",s,a);const h=dm.runKernel("AvgPool3DGrad",{dy:l,input:u},{filterSize:n,strides:r,pad:s,dimRoundingMode:a});return c?zy(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),sk={kernelName:"AvgPool3D",inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,pad:i,dimRoundingMode:o}=n;return{x:()=>rk(e,r,s,a,i,o)}}},ak=Sm({avgPoolGrad_:function(e,t,n,r,s){const a=vm(e,"dy","avgPoolGrad"),i=vm(t,"input","avgPoolGrad");fp(i.rank===a.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${a.rank})`);let o=i,l=a,u=!1;3===i.rank&&(u=!0,o=zy(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=zy(a,[1,a.shape[0],a.shape[1],a.shape[2]])),fp(4===l.rank,()=>"Error in avgPoolGrad: dy must be rank 4 but got rank "+l.rank+"."),fp(4===o.rank,()=>"Error in avgPoolGrad: input must be rank 4 but got rank "+o.rank+".");const c=dm.runKernel("AvgPoolGrad",{dy:l,input:o},{filterSize:n,strides:r,pad:s});return u?zy(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),ik={kernelName:"AvgPool",inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,pad:i}=n;return{x:()=>ak(e,r,s,a,i)}}},ok={kernelName:"BatchMatMul",inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,s]=t,{transposeA:a,transposeB:i}=n;return a||i?!a&&i?{a:()=>Tb(e,s,!1,!1),b:()=>Tb(e,r,!0,!1)}:a&&!i?{a:()=>Tb(s,e,!1,!0),b:()=>Tb(r,e,!1,!1)}:{a:()=>Tb(s,e,!0,!0),b:()=>Tb(e,r,!0,!0)}:{a:()=>Tb(e,s,!1,!0),b:()=>Tb(r,e,!0,!1)}}},lk=Sm({spaceToBatchND_:function(e,t,n){const r=vm(e,"x","spaceToBatchND");return fp(r.rank>=1+t.length,()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`),fp(n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`),fp(r.shape.reduce((e,r,s)=>s>0&&s<=t.length?e&&(r+n[s-1][0]+n[s-1][1])%t[s-1]==0:e,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`),dm.runKernel("SpaceToBatchND",{x:r},{blockShape:t,paddings:n})}}),uk={kernelName:"BatchToSpaceND",gradFunc:(e,t,n)=>{const{blockShape:r,crops:s}=n;return{x:()=>lk(e,r,s)}}},ck={kernelName:"BroadcastTo",gradFunc:(e,t,n)=>{const r=n.inputShape,s=n.shape,a=Array.from(s);for(let o=r.length-1;o>=0;o--)if(r[o]===s[o])a[o]=1;else if(1!==r[o])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${s}].`);const i=[];for(let o=0;o<a.length;o++)a[o]>1&&i.push(o);return{x:()=>Ib(e,i,!0)}}},hk={kernelName:"Ceil",gradFunc:e=>({x:()=>Nx(e)})},dk={kernelName:"ClipByValue",inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:s,clipValueMax:a}=n;return{x:()=>Cx(Nb(yb(r,s),gw(r,a)),e,Nx(e))}}},pk={kernelName:"ComplexAbs",inputsToSave:["x"],gradFunc:jv.gradFunc},fk={kernelName:"Concat",saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map(e=>e.shape),{axis:s}=n,a=_p(s,t[0].shape)[0],i=r.map(e=>e[a]);return mx(e,i,a).map(e=>()=>e)}},mk={kernelName:"Conv2D",inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{dilations:a,strides:i,pad:o,dataFormat:l}=n;return fp(Dy(a),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`),{x:()=>Qy(r.shape,e,s,i,o,l),filter:()=>Ox(r,e,s.shape,i,o,l)}}},gk={kernelName:"Conv2DBackpropInput",inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{strides:a,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>Yy(e,s,a,i,o,1,l),filter:()=>Ox(e,r,s.shape,a,i,o,l)}}},yk=Sm({conv3DBackpropFilter_:function(e,t,n,r,s){let a=e;4===e.rank&&(a=zy(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;return 4===i.rank&&(i=zy(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),fp(5===a.rank,()=>"Error in conv3dDerFilter: input must be rank 5, but got shape "+a.shape+"."),fp(5===i.rank,()=>"Error in conv3dDerFilter: dy must be rank 5, but got shape "+i.shape+"."),fp(5===n.length,()=>"Error in conv3dDerFilter: filterShape must be length 5, but got "+n+"."),fp(a.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`),fp(i.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`),dm.runKernel("Conv3DBackpropFilterV2",{x:a,dy:i},{strides:r,pad:s,filterShape:n})}}),bk={kernelName:"Conv3D",inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a}=n;fp(Dy(r),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);const[i,o]=t;return{x:()=>nb(i.shape,e,o,s,a),filter:()=>yk(i,e,o.shape,s,a)}}},xk=Sm({sin_:function(e){const t=vm(e,"x","sin","float32");return dm.runKernel("Sin",{x:t})}}),wk={kernelName:"Cos",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>kb(Wb(xk(yg(n,"float32"))),e)}}},vk=Sm({sinh_:function(e){const t=vm(e,"x","sinh");return dm.runKernel("Sinh",{x:t})}}),kk={kernelName:"Cosh",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>kb(vk(yg(n,"float32")),e)}}},Sk=Sm({cumsum_:function(e,t=0,n=!1,r=!1){const s=vm(e,"x","cumsum");return dm.runKernel("Cumsum",{x:s},{axis:t,exclusive:n,reverse:r})}}),Ik={kernelName:"Cumsum",inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s,exclusive:a,reverse:i}=n;return{x:()=>{const t=zb([s],r.rank);let n=Sk(e,s,a,!i);return null!=t&&(n=Tx(n,t)),n}}}},Ck={kernelName:"DepthwiseConv2dNative",inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a,dimRoundingMode:i}=n,o=null==r?[1,1]:r;fp(Dy(o),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);const[l,u]=t;return fp(4===l.rank,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),fp(4===u.rank,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`),fp(l.shape[3]===u.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),fp(Oy(s,o),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${o}'.`),Ly("depthwiseConv2d",a,i),{x:()=>Gx(l.shape,e,u,s,a,o,i),filter:()=>Wx(l,e,u.shape,s,a,o,i)}}},Nk={kernelName:"Dilation2D",inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,a={x:r,filter:s,dy:e},i={x:r,filter:s,dy:e};return{x:()=>dm.runKernel("Dilation2DBackpropInput",a,n),filter:()=>dm.runKernel("Dilation2DBackpropFilter",i,n)}}},Tk={kernelName:"Elu",outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>dm.runKernel("EluGrad",r)}}},_k={kernelName:"Erf",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=kb(ub(Wb(Ub(n))),2/Math.sqrt(Math.PI));return{x:()=>kb(e,r)}}},Ek={kernelName:"Exp",outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>kb(e,n)}}},Ak={kernelName:"ExpandDims",inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>zy(e,n.shape)}}},Rk={kernelName:"Expm1",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>kb(e,ub(n))}}},$k={kernelName:"Floor",gradFunc:e=>({x:()=>Nx(e)})},Fk={kernelName:"FloorDiv",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=zg(n.shape,r.shape);return{a:()=>{const t=ib(e,yg(r,"float32")),a=Lg(n.shape,s);return a.length>0?zy(Ib(t,a),n.shape):t},b:()=>{let t=kb(e,yg(n,"float32"));const a=Lg(r.shape,s);a.length>0&&(t=zy(Ib(t,a),r.shape));const i=Ub(r);return Wb(ib(t,yg(i,"float32")))}}}},Dk=Sm({rsqrt_:function(e){const t=vm(e,"x","rsqrt","float32");return dm.runKernel("Rsqrt",{x:t})}}),Ok={kernelName:"FusedBatchNorm",inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[s,a,i,o]=t,l=null==o?yy(1):o,u=Lg(a.shape,s.shape),c=[];if(1===a.rank){for(let e=0;e<s.shape.length-1;++e)c.push(s.shape[e]);c.push(1)}const h=Sb(s,a),d=kb(e,l),p=Dk(wy(i,yy(r))),f=kb(kb(kb(p,p),p),yy(-.5));return{x:()=>zy(kb(kb(e,1===a.rank?hb(zy(p,[1,1,1,a.shape[0]]),c):p),l),s.shape),mean:()=>{let e=kb(kb(p,yy(-1)),d);return 1===a.rank&&(e=Ib(e,u)),zy(e,a.shape)},variance:()=>{let e=kb(kb(f,h),d);return 1===a.rank&&(e=Ib(e,u)),zy(e,a.shape)},scale:()=>{const t=kb(h,p);let n=kb(e,t);return 1===a.rank&&(n=Ib(n,u)),zy(n,a.shape)},offset:()=>{let t=e;return 1===a.rank&&(t=Ib(t,u)),zy(t,a.shape)}}}},Mk=Sm({unsortedSegmentSum_:function(e,t,n){const r=vm(e,"x","unsortedSegmentSum"),s=vm(t,"segmentIds","unsortedSegmentSum","int32");return fp(vp(n),()=>"numSegments must be of dtype int"),dm.runKernel("UnsortedSegmentSum",{x:r,segmentIds:s},{numSegments:n})}}),Lk={kernelName:"GatherV2",inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,s]=t,{axis:a}=n,i=_p(a,r.shape)[0];return{x:()=>{const t=r.shape,n=s.size,o=t.slice(0,i),l=o.length,u=t.slice(a,t.length).slice(1),c=u.length,h=zk(0,l),d=zk(l+1,l+1+c),p=Pk([o,[n],u]),f=zy(e,p),m=zy(s,[n]),g=Pk([[l],h,d]),y=Tx(f,g);let b=Mk(y,m,r.shape[i]);const x=Pb(g);return b=Tx(b,x),b},indices:()=>s}}};function zk(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function Pk(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}const Bk={kernelName:"GreaterEqual",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Nx(n),b:()=>Nx(r)}}},Uk={kernelName:"Identity",gradFunc:e=>({x:()=>yg(e,"float32")})},Vk={kernelName:"IsFinite",gradFunc:e=>({x:()=>Nx(e)})},Wk={kernelName:"IsInf",gradFunc:e=>({x:()=>Nx(e)})},Gk={kernelName:"IsNan",gradFunc:e=>({x:()=>Nx(e)})},Hk={kernelName:"LeakyRelu",inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:s}=n,a=gb(r,0);return{x:()=>Cx(a,e,kb(e,s))}}},jk={kernelName:"Log1p",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ib(e,wy(n,1))}}},qk={kernelName:"Log",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ib(e,yg(n,"float32"))}}},Kk={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n;return{logits:()=>{const t=ub(r);return Sb(e,kb(Ib(e,s,!0),t))}}}},Xk=Sm({localResponseNormalizationBackprop_:function(e,t,n,r=5,s=1,a=1,i=.5){return dm.runKernel("LRNGrad",{x:e,y:t,dy:n},{depthRadius:r,bias:s,alpha:a,beta:i})}}),Zk={kernelName:"LRN",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{depthRadius:a,bias:i,alpha:o,beta:l}=n;return{x:()=>Xk(r,s,e,a,i,o,l)}}};function Yk(e,t,n,r){return t.rank<n.rank&&(t=zy(t,Mb(t.shape,r))),e.rank<n.rank&&(e=zy(e,Mb(e.shape,r))),{x:()=>kb(e,yg(lb(n,t),e.dtype))}}const Jk={kernelName:"Max",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:s}=r,a=t[0],i=Yk(e,t[1],a,_p(s,a.shape));return{x:()=>i.x()}}},Qk=Sm({less_:function(e,t){let n=vm(e,"a","less","string_or_numeric"),r=vm(t,"b","less","string_or_numeric");return[n,r]=sm(n,r),zg(n.shape,r.shape),dm.runKernel("Less",{a:n,b:r})}}),eS={kernelName:"Maximum",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>kb(e,yg(yb(n,r),"float32")),b:()=>kb(e,yg(Qk(n,r),"float32"))}}},tS=Sm({maxPool3dGrad_:function(e,t,n,r,s,a,i){const o=vm(e,"dy","maxPool3dGrad"),l=vm(t,"input","maxPool3dGrad"),u=vm(n,"output","maxPool3dGrad");let c=o,h=l,d=u,p=!1;4===l.rank&&(p=!0,c=zy(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=zy(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=zy(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),fp(5===c.rank,()=>"Error in maxPool3dGrad: dy must be rank 5 but got rank "+c.rank+"."),fp(5===h.rank,()=>"Error in maxPool3dGrad: input must be rank 5 but got rank "+h.rank+"."),fp(5===d.rank,()=>"Error in maxPool3dGrad: output must be rank 5 but got rank "+d.rank+"."),Ly("maxPool3dGrad",a,i);const f=dm.runKernel("MaxPool3DGrad",{dy:c,input:h,output:d},{filterSize:r,strides:s,pad:a,dimRoundingMode:i});return p?zy(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}}),nS={kernelName:"MaxPool3D",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=n;return{x:()=>tS(e,r,s,a,i,o,l)}}},rS=Sm({maxPoolGrad_:function(e,t,n,r,s,a,i){const o=vm(e,"dy","maxPoolGrad"),l=vm(t,"input","maxPoolGrad"),u=vm(n,"output","maxPoolGrad");return fp(l.rank===o.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`),fp(4===o.rank,()=>"Error in maxPoolGrad: dy must be rank 4 but got rank "+o.rank+"."),fp(4===l.rank,()=>"Error in maxPoolGrad: input must be rank 4 but got rank "+l.rank+"."),Ly("maxPoolGrad",a,i),dm.runKernel("MaxPoolGrad",{dy:o,input:l,output:u},{filterSize:r,strides:s,pad:a,dimRoundingMode:i})}}),sS={kernelName:"MaxPool",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:i,pad:o}=n;return{x:()=>rS(e,r,s,a,i,o)}}},aS={kernelName:"Mean",inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n,a=_p(s,r.shape),i=bp(Ob(r.shape,a)[1]);return{x:()=>{const t=r.shape.slice();a.forEach(e=>{t[e]=1});const n=zy(e,t);return ib(kb(n,qb(r.shape,"float32")),i)}}}},iS={kernelName:"Min",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:s}=r,[a,i]=t,o=Yk(e,i,a,_p(s,a.shape));return{x:()=>o.x()}}},oS={kernelName:"Minimum",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>kb(e,yg(gw(n,r),"float32")),b:()=>kb(e,yg(gb(n,r),"float32"))}}},lS={kernelName:"MirrorPad",inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map(e=>e[0]);return{x:()=>lx(e,a,r.shape)}}},uS={kernelName:"Mod",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=zg(n.shape,r.shape);return{a:()=>{const t=Lg(n.shape,s);return t.length>0?zy(Ib(e,t),n.shape):e},b:()=>{const t=kb(e,Wb(fb(ib(n,r)))),a=Lg(r.shape,s);return a.length>0?zy(Ib(t,a),r.shape):t}}}},cS={kernelName:"Multiply",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=zg(n.shape,r.shape);return{a:()=>{const t=kb(e,yg(r,"float32")),a=Lg(n.shape,s);return a.length>0?zy(Ib(t,a),n.shape):t},b:()=>{const t=kb(e,yg(n,"float32")),a=Lg(r.shape,s);return a.length>0?zy(Ib(t,a),r.shape):t}}}},hS={kernelName:"Neg",gradFunc:e=>({x:()=>Wb(e)})},dS={kernelName:"OneHot",inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>jb(n.shape,"float32")}}},pS={kernelName:"OnesLike",gradFunc:e=>({x:()=>Nx(e)})},fS={kernelName:"Pack",saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return Sx(e,r).map(e=>()=>e)}},mS={kernelName:"PadV2",inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map(e=>e[0]);return{x:()=>lx(e,a,r.shape)}}},gS={kernelName:"Pow",inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,s]=t,a=n,i=r,o=zg(a.shape,i.shape);return{a:()=>{const t=yg(i,"float32");let n=kb(e,kb(t,Zb(a,Sb(t,yy(1)))));const r=Lg(a.shape,o);return r.length>0&&(n=Ib(n,r)),zy(n,a.shape)},b:()=>{const t=gb(a,0),n=Cx(t,xb(a),Nx(a));let r=kb(e,kb(s,n));const l=Lg(i.shape,o);return l.length>0&&(r=Ib(r,l)),zy(r,i.shape)}}}},yS={kernelName:"Prelu",inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,s=gb(n,0);return{x:()=>Cx(s,e,kb(e,r)),alpha:()=>{let t=Cx(s,Nx(e),kb(e,n));const a=Lg(r.shape,e.shape);return a.length>0&&(t=Ib(t,a)),zy(t,r.shape)}}}},bS={kernelName:"RealDiv",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=zg(n.shape,r.shape);return{a:()=>{const t=ib(e,yg(r,"float32")),a=Lg(n.shape,s);return a.length>0?zy(Ib(t,a),n.shape):t},b:()=>{let t=kb(e,yg(n,"float32"));const a=Lg(r.shape,s);a.length>0&&(t=zy(Ib(t,a),r.shape));const i=Ub(r);return Wb(ib(t,yg(i,"float32")))}}}},xS={kernelName:"Reciprocal",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ib(e,Wb(Ub(n)))}}},wS={kernelName:"Relu6",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=kb(gw(n,6),Lx(n));return{x:()=>kb(e,yg(r,"float32"))}}},vS={kernelName:"Relu",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>kb(e,yg(Lx(n),"float32"))}}},kS={kernelName:"Reshape",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>zy(e,n.shape)}}},SS={kernelName:"ResizeBilinear",inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>dm.runKernel("ResizeBilinearGrad",s,n)}}},IS={kernelName:"ResizeNearestNeighbor",inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>dm.runKernel("ResizeNearestNeighborGrad",s,n)}}},CS={kernelName:"Reverse",gradFunc:(e,t,n)=>{const{dims:r}=n,s=_p(r,e.shape);return{x:()=>sx(e,s)}}},NS={kernelName:"Round",gradFunc:e=>({x:()=>Nx(e)})},TS={kernelName:"Rsqrt",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Wb(ib(e,kb(Zb(n,1.5),2)))}}},_S=Sm({logicalNot_:function(e){const t=vm(e,"x","logicalNot","bool");return dm.runKernel("LogicalNot",{x:t})}}),ES={kernelName:"Select",inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>yg(Nx(n),"float32"),t:()=>kb(e,yg(n,e.dtype)),e:()=>kb(e,yg(_S(n),e.dtype))}}},AS={kernelName:"Selu",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=gb(n,yy(0)),r=yy(sv),s=yy(av),a=kb(e,s),i=kb(kb(e,r),ub(yg(n,"float32")));return Cx(t,a,i)}}}},RS={kernelName:"Sigmoid",outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>kb(e,kb(n,Sb(yy(1),n)))}}},$S={kernelName:"Sign",gradFunc:e=>({x:()=>Nx(e)})},FS=Sm({cos_:function(e){const t=vm(e,"x","cos","float32");return dm.runKernel("Cos",{x:t})}}),DS={kernelName:"Sin",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>kb(FS(yg(n,"float32")),e)}}},OS=Sm({cosh_:function(e){const t=vm(e,"x","cosh","float32");return dm.runKernel("Cosh",{x:t})}}),MS={kernelName:"Sinh",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>kb(OS(yg(n,"float32")),e)}}},LS={kernelName:"Slice",inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:s,size:a}=n,i=r.shape,[o,l]=sy(r,s,a),u=[];for(let c=0;c<e.rank;c++)u.push([o[c],i[c]-o[c]-l[c]]);return{x:()=>Xb(e,u)}}},zS={kernelName:"Softmax",outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:s}=n,a=kb(e,r);return{logits:()=>Sb(a,kb(Ib(a,[s],!0),r))}}},PS={kernelName:"Softplus",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>kb(e,ox(n))}}},BS=Sm({batchToSpaceND_:function(e,t,n){const r=vm(e,"x","batchToSpaceND"),s=t.reduce((e,t)=>e*t);return fp(r.rank>=1+t.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`),fp(n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`),fp(r.shape[0]%s==0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${s}`),dm.runKernel("BatchToSpaceND",{x:r},{blockShape:t,crops:n})}}),US={kernelName:"SpaceToBatchND",gradFunc:(e,t,n)=>{const{blockShape:r,paddings:s}=n;return{x:()=>BS(e,r,s)}}},VS={kernelName:"SplitV",gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>jy(e,r)}}},WS=[jv,qv,Kv,Xv,{kernelName:"AddN",saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach((t,r)=>{n[r]=()=>e.clone()}),n}},Zv,Yv,Jv,Qv,ek,tk,nk,sk,ik,ok,uk,ck,{kernelName:"Cast",gradFunc:e=>({x:()=>e.clone()})},hk,dk,pk,fk,gk,mk,bk,wk,kk,Ik,Ck,Nk,bS,Tk,_k,Ek,Ak,Rk,Fk,$k,Ok,Lk,Bk,Uk,Vk,Wk,Gk,Hk,jk,qk,Kk,Zk,Jk,Jk,eS,nS,sS,aS,iS,oS,lS,uS,cS,hS,dS,pS,fS,mS,mS,gS,yS,xS,wS,vS,kS,SS,IS,CS,NS,TS,ES,AS,RS,$S,DS,MS,LS,zS,PS,US,US,VS,VS,{kernelName:"Sqrt",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ib(e,kb(gx(yg(n,"float32")),2))}}},{kernelName:"SquaredDifference",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=yy(2);return{a:()=>kb(e,kb(s,Sb(n,r))),b:()=>kb(e,kb(s,Sb(r,n)))}}},{kernelName:"Square",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>kb(e,kb(yg(n,"float32"),2))}}},{kernelName:"Step",gradFunc:e=>({x:()=>Nx(e)})},{kernelName:"Sub",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=zg(n.shape,r.shape);return{a:()=>{let t=e;const r=Lg(n.shape,s);return r.length>0&&(t=Ib(t,r)),zy(t,n.shape)},b:()=>{let t=e;const n=Lg(r.shape,s);return n.length>0&&(t=Ib(t,n)),zy(Wb(t),r.shape)}}}},{kernelName:"Sum",inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,s=r.shape.slice(),{axis:a}=n;_p(a,r.shape).forEach(e=>{s[e]=1});const i=zy(e,s),o=kb(i,qb(r.shape,"float32"));return{x:()=>o}}},{kernelName:"Tan",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ib(e,Ub(FS(n)))}}},{kernelName:"Tanh",outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>kb(Sb(yy(1),Ub(n)),e)}}},{kernelName:"Tile",inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:s}=n;return{x:()=>{let t=Nx(r);if(1===r.rank)for(let n=0;n<s[0];++n)t=wy(t,lx(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)t=wy(t,lx(e,[n*r.shape[0],a*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)t=wy(t,lx(e,[n*r.shape[0],a*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error("Gradient for tile operation is not implemented for rank-"+r.rank+" tensors yet.");for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)for(let o=0;o<s[3];++o)t=wy(t,lx(e,[n*r.shape[0],a*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},{kernelName:"Transpose",gradFunc:(e,t,n)=>{const r=n,{perm:s}=r,a=Pb(s);return{x:()=>Tx(e,a)}}},{kernelName:"Unpack",gradFunc:(e,t,n)=>{const r=n,{axis:s}=r;return{value:()=>bx(e,s)}}},{kernelName:"UnsortedSegmentSum",inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=Ab(t,Nx(t)),r=mb(e,n);let s=yb(t,yy(0,"int32"));const a=r.rank-s.rank;for(let o=0;o<a;++o)s=cb(s,o+1);s=Nb(s,qb(r.shape,"bool"));const i=Nx(r);return Cx(s,r,i)}(e,n)}}},{kernelName:"ZerosLike",gradFunc:e=>({x:()=>Nx(e)})}];for(const pG of WS)mf(pG);Kf().prototype.abs=function(){return this.throwIfDisposed(),xy(this)};const GS=Sm({acos_:function(e){const t=vm(e,"x","acos");return dm.runKernel("Acos",{x:t})}});Kf().prototype.acos=function(){return this.throwIfDisposed(),GS(this)};const HS=Sm({acosh_:function(e){const t=vm(e,"x","acosh");return dm.runKernel("Acosh",{x:t})}});Kf().prototype.acosh=function(){return this.throwIfDisposed(),HS(this)},Kf().prototype.add=function(e){return this.throwIfDisposed(),wy(this,e)},Kf().prototype.all=function(e,t){return this.throwIfDisposed(),vy(this,e,t)},Kf().prototype.any=function(e,t){return this.throwIfDisposed(),ky(this,e,t)},Kf().prototype.argMax=function(e){return this.throwIfDisposed(),Sy(this,e)};const jS=Sm({argMin_:function(e,t=0){const n=vm(e,"x","argMin");return dm.runKernel("ArgMin",{x:n},{axis:t})}});Kf().prototype.argMin=function(e){return this.throwIfDisposed(),jS(this,e)},Kf().prototype.asScalar=function(){return this.throwIfDisposed(),fp(1===this.size,()=>"The array must have only 1 element."),zy(this,[])},Kf().prototype.asType=function(e){return this.throwIfDisposed(),yg(this,e)},Kf().prototype.as1D=function(){return this.throwIfDisposed(),zy(this,[this.size])},Kf().prototype.as2D=function(e,t){return this.throwIfDisposed(),zy(this,[e,t])},Kf().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),zy(this,[e,t,n])},Kf().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),zy(this,[e,t,n,r])},Kf().prototype.as5D=function(e,t,n,r,s){return this.throwIfDisposed(),zy(this,[e,t,n,r,s])};const qS=Sm({asin_:function(e){const t=vm(e,"x","asin");return dm.runKernel("Asin",{x:t})}});Kf().prototype.asin=function(){return this.throwIfDisposed(),qS(this)};const KS=Sm({asinh_:function(e){const t=vm(e,"x","asinh");return dm.runKernel("Asinh",{x:t})}});Kf().prototype.asinh=function(){return this.throwIfDisposed(),KS(this)};const XS=Sm({atan_:function(e){const t=vm(e,"x","atan");return dm.runKernel("Atan",{x:t})}});Kf().prototype.atan=function(){return this.throwIfDisposed(),XS(this)};const ZS=Sm({atan2_:function(e,t){let n=vm(e,"a","atan2"),r=vm(t,"b","atan2");return[n,r]=sm(n,r),dm.runKernel("Atan2",{a:n,b:r})}});Kf().prototype.atan2=function(e){return this.throwIfDisposed(),ZS(this,e)};const YS=Sm({atanh_:function(e){const t=vm(e,"x","atanh");return dm.runKernel("Atanh",{x:t})}});Kf().prototype.atanh=function(){return this.throwIfDisposed(),YS(this)},Kf().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),Py(this,e,t,n,r)},Kf().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),BS(this,e,t)},Kf().prototype.batchNorm=function(e,t,n,r,s){return this.throwIfDisposed(),Uy(this,e,t,n,r,s)},Kf().prototype.broadcastTo=function(e){return this.throwIfDisposed(),Ix(this,e)},Kf().prototype.cast=function(e){return this.throwIfDisposed(),yg(this,e)};const JS=Sm({ceil_:function(e){const t=vm(e,"x","ceil","float32");return dm.runKernel("Ceil",{x:t})}});Kf().prototype.ceil=function(){return this.throwIfDisposed(),JS(this)},Kf().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Hy(this,e,t)},Kf().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof qf&&(e=[e]),jy([this,...e],t)},Kf().prototype.conv1d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Jy(this,e,t,n,r,s,a)},Kf().prototype.conv2dTranspose=function(e,t,n,r,s){return this.throwIfDisposed(),eb(this,e,t,n,r,s)},Kf().prototype.conv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Yy(this,e,t,n,r,s,a)},Kf().prototype.cos=function(){return this.throwIfDisposed(),FS(this)},Kf().prototype.cosh=function(){return this.throwIfDisposed(),OS(this)},Kf().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Sk(this,e,t,n)};const QS=Sm({depthToSpace_:function(e,t,n="NHWC"){const r=vm(e,"x","depthToSpace","float32"),s="NHWC"===n?r.shape[1]:r.shape[2],a="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];return fp(t>1,()=>"blockSize should be > 1 for depthToSpace, but was: "+t),fp(s*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t}  for depthToSpace with input shape\n    ${r.shape}`),fp(a*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t} for depthToSpace with input shape\n        ${r.shape}`),fp(i%(t*t)==0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`),dm.runKernel("DepthToSpace",{x:r},{blockSize:t,dataFormat:n})}});Kf().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),QS(this,e,t)},Kf().prototype.depthwiseConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),sb(this,e,t,n,r,s,a)};const eI=Sm({dilation2d_:function(e,t,n,r,s=[1,1],a="NHWC"){const i=vm(e,"x","dilation2d"),o=vm(t,"filter","dilation2d");fp(3===i.rank||4===i.rank,()=>"Error in dilation2d: input must be rank 3 or 4, but got rank "+i.rank+"."),fp(3===o.rank,()=>"Error in dilation2d: filter must be rank 3, but got rank "+o.rank+"."),fp("NHWC"===a,()=>"Error in dilation2d: Only NHWC is currently supported, but got dataFormat of "+a);let l=i,u=!1;3===i.rank&&(l=zy(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0);const c=dm.runKernel("Dilation2D",{x:l,filter:o},{strides:n,pad:r,dilations:s});return u?zy(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});Kf().prototype.dilation2d=function(e,t,n,r,s){return this.throwIfDisposed(),eI(this,e,t,n,r,s)};const tI=Sm({divNoNan_:function(e,t){let n=vm(e,"a","div"),r=vm(t,"b","div");[n,r]=sm(n,r);const s=ib(n,r),a=Nx(s),i=lb(r,a);return Cx(i,a,s)}});Kf().prototype.divNoNan=function(e){return this.throwIfDisposed(),tI(this,e)},Kf().prototype.div=function(e){return this.throwIfDisposed(),ib(this,e)};const nI=Sm({dot_:function(e,t){const n=vm(e,"t1","dot"),r=vm(t,"t2","dot");fp(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`);const s=1===n.rank?n.size:n.shape[1],a=1===r.rank?r.size:r.shape[0];if(fp(s===a,()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${a}.`),1===n.rank&&1===r.rank){const e=zy(n,[1,-1]),t=zy(r,[-1,1]),s=Tb(e,t);return zy(s,[])}if(1===n.rank&&2===r.rank){const e=zy(n,[1,-1]),t=zy(r,[r.shape[0],r.shape[1]]),s=Tb(e,t);return zy(s,[s.size])}if(2===n.rank&&1===r.rank){const e=zy(r,[-1,1]),t=Tb(n,e);return zy(t,[t.size])}{const e=zy(r,[r.shape[0],r.shape[1]]);return Tb(n,e)}}});Kf().prototype.dot=function(e){return this.throwIfDisposed(),nI(this,e)},Kf().prototype.elu=function(){return this.throwIfDisposed(),ob(this)},Kf().prototype.equal=function(e){return this.throwIfDisposed(),lb(this,e)};const rI=Sm({erf_:function(e){let t=vm(e,"x","erf");return fp("int32"===t.dtype||"float32"===t.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===t.dtype&&(t=yg(t,"float32")),dm.runKernel("Erf",{x:t})}});Kf().prototype.erf=function(){return this.throwIfDisposed(),rI(this)},Kf().prototype.exp=function(){return this.throwIfDisposed(),ub(this)},Kf().prototype.expandDims=function(e){return this.throwIfDisposed(),cb(this,e)};const sI=Sm({expm1_:function(e){const t=vm(e,"x","expm1");return dm.runKernel("Expm1",{x:t})}});Kf().prototype.expm1=function(){return this.throwIfDisposed(),sI(this)},Kf().prototype.fft=function(){return this.throwIfDisposed(),Rx(this)},Kf().prototype.flatten=function(){return this.throwIfDisposed(),zy(this,[this.size])},Kf().prototype.floor=function(){return this.throwIfDisposed(),fb(this)},Kf().prototype.floorDiv=function(e){return this.throwIfDisposed(),ab(this,e)},Kf().prototype.gather=function(e,t){return this.throwIfDisposed(),mb(this,e,t)},Kf().prototype.greaterEqual=function(e){return this.throwIfDisposed(),yb(this,e)},Kf().prototype.greater=function(e){return this.throwIfDisposed(),gb(this,e)},Kf().prototype.ifft=function(){return this.throwIfDisposed(),Fx(this)},Kf().prototype.irfft=function(){return this.throwIfDisposed(),Dx(this)};const aI=Sm({isFinite_:function(e){const t=vm(e,"x","isFinite");return dm.runKernel("IsFinite",{x:t})}});Kf().prototype.isFinite=function(){return this.throwIfDisposed(),aI(this)};const iI=Sm({isInf_:function(e){const t=vm(e,"x","isInf");return dm.runKernel("IsInf",{x:t})}});Kf().prototype.isInf=function(){return this.throwIfDisposed(),iI(this)};const oI=Sm({isNaN_:function(e){const t=vm(e,"x","isNaN");return dm.runKernel("IsNan",{x:t})}});Kf().prototype.isNaN=function(){return this.throwIfDisposed(),oI(this)},Kf().prototype.leakyRelu=function(e){return this.throwIfDisposed(),bb(this,e)},Kf().prototype.lessEqual=function(e){return this.throwIfDisposed(),gw(this,e)},Kf().prototype.less=function(e){return this.throwIfDisposed(),Qk(this,e)};const lI=Sm({localResponseNormalization_:function(e,t=5,n=1,r=1,s=.5){const a=vm(e,"x","localResponseNormalization");fp(4===a.rank||3===a.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${a.rank}.`),fp(vp(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let i=a,o=!1;3===a.rank&&(o=!0,i=zy(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const l=dm.runKernel("LRN",{x:i},{depthRadius:t,bias:n,alpha:r,beta:s});return o?zy(l,[l.shape[1],l.shape[2],l.shape[3]]):l}});Kf().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),lI(this,e,t,n,r)};const uI=Sm({logSigmoid_:function(e){const t=vm(e,"x","logSigmoid");return gy(e=>({value:Wb(fx(Wb(e))),gradFunc:t=>kb(t,ox(Wb(e)))}))(t)}});Kf().prototype.logSigmoid=function(){return this.throwIfDisposed(),uI(this)},Kf().prototype.logSoftmax=function(e){return this.throwIfDisposed(),Cb(this,e)},Kf().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Aw(this,e,t)},Kf().prototype.log=function(){return this.throwIfDisposed(),xb(this)},Kf().prototype.log1p=function(){return this.throwIfDisposed(),wb(this)},Kf().prototype.logicalAnd=function(e){return this.throwIfDisposed(),Nb(this,e)},Kf().prototype.logicalNot=function(){return this.throwIfDisposed(),_S(this)};const cI=Sm({logicalOr_:function(e,t){const n=vm(e,"a","logicalOr","bool"),r=vm(t,"b","logicalOr","bool");return zg(n.shape,r.shape),dm.runKernel("LogicalOr",{a:n,b:r})}});Kf().prototype.logicalOr=function(e){return this.throwIfDisposed(),cI(this,e)};const hI=Sm({logicalXor_:function(e,t){const n=vm(e,"a","logicalXor","bool"),r=vm(t,"b","logicalXor","bool");return zg(n.shape,r.shape),Nb(cI(e,t),_S(Nb(e,t)))}});Kf().prototype.logicalXor=function(e){return this.throwIfDisposed(),hI(this,e)},Kf().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Tb(this,e,t,n)},Kf().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),_b(this,e,t,n,r)},Kf().prototype.max=function(e,t){return this.throwIfDisposed(),vb(this,e,t)},Kf().prototype.maximum=function(e){return this.throwIfDisposed(),Ab(this,e)},Kf().prototype.mean=function(e,t){return this.throwIfDisposed(),Rb(this,e,t)},Kf().prototype.min=function(e,t){return this.throwIfDisposed(),kw(this,e,t)},Kf().prototype.minimum=function(e){return this.throwIfDisposed(),$b(this,e)};const dI=Sm({mirrorPad_:function(e,t,n){fp("reflect"===n||"symmetric"===n,()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);const r=vm(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");fp(t.length===r.rank,()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`);const s="reflect"===n?1:0;for(let a=0;a<r.rank;a++)fp(2===t[a].length,()=>"Invalid number of paddings. Must be length of 2 each."),fp(t[a][0]>=0&&t[a][0]<=r.shape[a]-s&&t[a][1]>=0&&t[a][1]<=r.shape[a]-s,()=>`Padding in dimension ${a} cannot be greater than or equal to ${r.shape[a]-s} or less than 0 for input of shape `+r.shape);return dm.runKernel("MirrorPad",{x:r},{paddings:t,mode:n})}});Kf().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),dI(this,e,t)};const pI=Sm({mod_:function(e,t){let n=vm(e,"a","mod"),r=vm(t,"b","mod");return[n,r]=sm(n,r),dm.runKernel("Mod",{a:n,b:r})}});Kf().prototype.mod=function(e){return this.throwIfDisposed(),pI(this,e)},Kf().prototype.mul=function(e){return this.throwIfDisposed(),kb(this,e)},Kf().prototype.neg=function(){return this.throwIfDisposed(),Wb(this)},Kf().prototype.norm=function(e,t,n){return this.throwIfDisposed(),Sw(this,e,t,n)},Kf().prototype.notEqual=function(e){return this.throwIfDisposed(),Gb(this,e)},Kf().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),Hb(this,e,t,n)},Kf().prototype.onesLike=function(){return this.throwIfDisposed(),Kb(this)},Kf().prototype.pad=function(e,t){return this.throwIfDisposed(),Xb(this,e,t)};const fI=Sm({pool_:function(e,t,n,r,s,a,i){null==s&&(s=[1,1]),null==a&&(a=1),0===r&&(r="valid");const o=vm(e,"x","maxPool");let l=o,u=!1;3===o.rank&&(u=!0,l=zy(o,[1,o.shape[0],o.shape[1],o.shape[2]])),fp(Oy(a,s),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`);const c=Cy(l.shape,t,a,s,r),h=[c.dilationHeight,c.dilationWidth];let d;d="same"===r?function(e,t){const n=e.map((e,n)=>e+(e-1)*(t[n]-1)).map(e=>e-1),r=n.map(e=>Math.floor(e/2)),s=n.map((e,t)=>e-r[t]);return n.map((e,t)=>[r[t],s[t]])}([c.filterHeight,c.filterWidth],h):[[0,0],[0,0]];const p=1===h[0]&&1===h[1],[f,m]=function(e,t,n){const r=n.map(e=>e[0]),s=n.map(e=>e[1]),a=e.concat(r,s),i=t.map((e,t)=>(e-a[t]%e)%e),o=s.map((e,t)=>e+i[t]);return[t.map((e,t)=>[r[t],o[t]]),t.map((e,t)=>[0,i[t]])]}([c.inHeight,c.inWidth],h,d),g=p?r:"valid",y=p?l:lk(l,h,f),b=("avg"===n?()=>Py(y,t,a,g,i):()=>_b(y,t,a,g,i))(),x=p?b:BS(b,h,m);return u?zy(x,[x.shape[1],x.shape[2],x.shape[3]]):x}});Kf().prototype.pool=function(e,t,n,r,s,a){return this.throwIfDisposed(),fI(this,e,t,n,r,s,a)},Kf().prototype.pow=function(e){return this.throwIfDisposed(),Zb(this,e)},Kf().prototype.prelu=function(e){return this.throwIfDisposed(),Yb(this,e)};const mI=Sm({prod_:function(e,t=null,n=!1){let r=vm(e,"x","prod");return"bool"===r.dtype&&(r=yg(r,"int32")),dm.runKernel("Prod",{x:r},{axis:t,keepDims:n})}});Kf().prototype.prod=function(e,t){return this.throwIfDisposed(),mI(this,e,t)};const gI=Sm({reciprocal_:function(e){const t=vm(e,"x","reciprocal");return dm.runKernel("Reciprocal",{x:t})}});Kf().prototype.reciprocal=function(){return this.throwIfDisposed(),gI(this)},Kf().prototype.relu=function(){return this.throwIfDisposed(),rx(this)},Kf().prototype.relu6=function(){return this.throwIfDisposed(),Mx(this)},Kf().prototype.reshapeAs=function(e){return this.throwIfDisposed(),zy(this,e.shape)},Kf().prototype.reshape=function(e){return this.throwIfDisposed(),zy(this,e)},Kf().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),pw(this,e,t,n)},Kf().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),fw(this,e,t,n)},Kf().prototype.reverse=function(e){return this.throwIfDisposed(),sx(this,e)},Kf().prototype.rfft=function(){return this.throwIfDisposed(),$x(this)},Kf().prototype.round=function(){return this.throwIfDisposed(),yw(this)},Kf().prototype.rsqrt=function(){return this.throwIfDisposed(),Dk(this)},Kf().prototype.selu=function(){return this.throwIfDisposed(),ax(this)},Kf().prototype.separableConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),ix(this,e,t,n,r,s,a)},Kf().prototype.sigmoid=function(){return this.throwIfDisposed(),ox(this)};const yI=Sm({sign_:function(e){const t=vm(e,"x","sign");return dm.runKernel("Sign",{x:t})}});Kf().prototype.sign=function(){return this.throwIfDisposed(),yI(this)},Kf().prototype.sin=function(){return this.throwIfDisposed(),xk(this)},Kf().prototype.sinh=function(){return this.throwIfDisposed(),vk(this)},Kf().prototype.slice=function(e,t){return this.throwIfDisposed(),lx(this,e,t)},Kf().prototype.softmax=function(e){return this.throwIfDisposed(),px(this,e)},Kf().prototype.softplus=function(){return this.throwIfDisposed(),fx(this)},Kf().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),lk(this,e,t)},Kf().prototype.split=function(e,t){return this.throwIfDisposed(),mx(this,e,t)},Kf().prototype.sqrt=function(){return this.throwIfDisposed(),gx(this)},Kf().prototype.square=function(){return this.throwIfDisposed(),Ub(this)},Kf().prototype.squaredDifference=function(e){return this.throwIfDisposed(),Ew(this,e)},Kf().prototype.squeeze=function(e){return this.throwIfDisposed(),yx(this,e)},Kf().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof qf?[this,e]:[this,...e];return bx(n,t)},Kf().prototype.step=function(e){return this.throwIfDisposed(),Lx(this,e)};const bI=Sm({stridedSlice_:function(e,t,n,r,s=0,a=0,i=0,o=0,l=0){const u=vm(e,"x","stridedSlice","string_or_numeric");return dm.runKernel("StridedSlice",{x:u},{begin:t,end:n,strides:r,beginMask:s,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l})}});Kf().prototype.stridedSlice=function(e,t,n,r,s,a,i,o){return this.throwIfDisposed(),bI(this,e,t,n,r,s,a,i,o)},Kf().prototype.sub=function(e){return this.throwIfDisposed(),Sb(this,e)},Kf().prototype.sum=function(e,t){return this.throwIfDisposed(),Ib(this,e,t)};const xI=Sm({tan_:function(e){const t=vm(e,"x","tan","float32");return dm.runKernel("Tan",{x:t})}});Kf().prototype.tan=function(){return this.throwIfDisposed(),xI(this)},Kf().prototype.tanh=function(){return this.throwIfDisposed(),xx(this)},Kf().prototype.tile=function(e){return this.throwIfDisposed(),hb(this,e)},Kf().prototype.toBool=function(){return this.throwIfDisposed(),yg(this,"bool")},Kf().prototype.toFloat=function(){return this.throwIfDisposed(),yg(this,"float32")},Kf().prototype.toInt=function(){return this.throwIfDisposed(),yg(this,"int32")};const wI=Sm({topk_:function(e,t=1,n=!0){const r=vm(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(t<0)throw new Error("'k' passed to topk() must be >= 0 but got "+t);if(t>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got `+t);const a={x:r},i={k:t,sorted:n},[o,l]=dm.runKernel("TopK",a,i);return{values:o,indices:l}}});Kf().prototype.topk=function(e,t){return this.throwIfDisposed(),wI(this,e,t)},Kf().prototype.transpose=function(e){return this.throwIfDisposed(),Tx(this,e)};const vI=Sm({unique_:function(e,t=0){const n=vm(e,"x","unique","string_or_numeric");fp(n.rank>0,()=>"The input tensor must be at least 1D");const r={x:n},s={axis:t},[a,i]=dm.runKernel("Unique",r,s);return{values:a,indices:i}}});let kI;function SI(){return null==kI&&(kI=dm.backend.epsilon()),kI}Kf().prototype.unique=function(e){return this.throwIfDisposed(),vI(this,e)},Kf().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),Mk(this,e,t)},Kf().prototype.unstack=function(e){return this.throwIfDisposed(),Sx(this,e)},Kf().prototype.where=function(e,t){return this.throwIfDisposed(),Cx(e,this,t)},Kf().prototype.zerosLike=function(){return this.throwIfDisposed(),Nx(this)};class II extends Error{constructor(e){super(e),Object.setPrototypeOf(this,II.prototype)}}class CI extends Error{constructor(e){super(e),Object.setPrototypeOf(this,CI.prototype)}}class NI extends Error{constructor(e){super(e),Object.setPrototypeOf(this,NI.prototype)}}class TI extends Error{constructor(e){super(e),Object.setPrototypeOf(this,TI.prototype)}}class _I extends Error{constructor(e){super(e),Object.setPrototypeOf(this,_I.prototype)}}function EI(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function AI(e,t){if(!e)throw new _I(t)}function RI(e,t){let n=0;for(const r of e)r===t&&n++;return n}function $I(e){return 1===e.length?e[0]:e}function FI(e){return Array.isArray(e)?e:[e]}function DI(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function OI(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}Error;let MI={};function LI(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function zI(e,t={},n={},r="object",s=!1){if("string"==typeof e){const s=e;let a;if(s in n)a=n[s];else if(s in MI)a=MI[s];else if(a=t[s],null==a)throw new NI(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{const a=e;if(null==a.className||null==a.config)throw new NI(r+": Improper config format: "+JSON.stringify(a)+".\n'className' and 'config' must set.");const i=a.className;let o,l;if(i in n?[o,l]=n[i]:i in MI?[o,l]=MI.className:i in t&&([o,l]=t[i]),null==o)throw new NI(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const e={};for(const n of Object.keys(MI))e[n]=MI[n];for(const s of Object.keys(n))e[s]=n[s];a.config.customObjects=e;const t=Object.assign({},MI);for(const s of Object.keys(n))MI[s]=n[s];!function e(t){if(null!=t&&"object"==typeof t)if(Array.isArray(t))t.forEach(t=>e(t));else{const n=Object.keys(t);for(const r of n){const n=t[r];null!=n&&"object"==typeof n&&(Array.isArray(n)||"ndarray"!==n.type||"number"!=typeof n.value?e(n):t[r]=n.value)}}}(a.config);const r=l(o,a.config,n,s);return MI=Object.assign({},t),r}{const e=Object.assign({},MI);for(const r of Object.keys(n))MI[r]=n[r];const t=new o(a.config);return MI=Object.assign({},e),t}}}function PI(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function BI(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function UI(e){if(null==e)throw new NI("Invalid value in obj: "+JSON.stringify(e));for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function VI(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new NI(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function WI(e,t,n=0,r=1/0){return AI(n>=0),AI(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every(e=>typeof e===t)}function GI(e,t){Array.isArray(e)?(r.assert(e.length>0,()=>t+" is unexpectedly an empty array."),e.forEach((e,n)=>GI(e,`element ${n+1} of ${t}`))):r.assert(Number.isInteger(e)&&e>0,()=>`Expected ${t} to be a positive integer, but got `+function e(t){return null===t?"null":Array.isArray(t)?"["+t.map(t=>e(t)).join(",")+"]":"string"==typeof t?`"${t}"`:""+t}(e)+".")}function HI(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}function jI(e,t){return dy(()=>gx(Ib(kb(e,e),t,!0)))}class qI extends c.Serializable{getConfig(){return{}}}class KI extends qI{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return dy(()=>{const t=jI(e,this.axis),n=Hy(t,0,this.maxValue);return kb(e,ib(n,wy(SI(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}KI.className="MaxNorm",c.registerClass(KI);class XI extends qI{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return dy(()=>ib(e,wy(SI(),jI(e,this.axis))))}getConfig(){return{axis:this.axis}}}XI.className="UnitNorm",c.registerClass(XI);class ZI extends qI{apply(e){return rx(e)}}ZI.className="NonNeg",c.registerClass(ZI);class YI extends qI{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return dy(()=>{const t=jI(e,this.axis),n=wy(kb(this.rate,Hy(t,this.minValue,this.maxValue)),kb(1-this.rate,t));return kb(e,ib(n,wy(SI(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}YI.className="MinMaxNorm",c.registerClass(YI);const JI={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function QI(e){return LI(e)}function eC(e,t={}){return zI(e,c.SerializationMap.getMap().classNameMap,t,"constraint")}function tC(e){return null==e?null:"string"==typeof e?eC({className:e in JI?JI[e]:e,config:{}}):e instanceof qI?e:eC(e)}const nC=["channelsFirst","channelsLast"],rC=["nearest","bilinear"],sC=["valid","same","causal"],aC=["max","avg"],iC=["sum","mul","concat","ave"],oC=new Map;function lC(e){VI(nC,"DataFormat",e)}function uC(e){VI(sC,"PaddingMode",e)}function cC(e){VI(aC,"PoolMode",e)}const hC=[];function dC(e,t){hC.push(e);try{const e=t();return hC.pop(),e}catch(n){throw hC.pop(),n}}function pC(e){if(!gC(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===hC.length?"":hC.join("/")+"/")+e}function fC(e){if(!gC(e))throw new Error("Not a valid tensor name: '"+e+"'");oC.has(e)||oC.set(e,0);const t=oC.get(e);if(oC.set(e,oC.get(e)+1),t>0){const n=`${e}_${t}`;return oC.set(n,1),n}return e}const mC=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function gC(e){return!!e.match(mC)}function yC(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let s=t;s<n;++s)r*=e[s];return r}function bC(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r<t&&(t=r)}return t}function xC(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r>t&&(t=r)}return t}function wC(e,t){if(t<e)throw new NI(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}function vC(e,t){return yg(e,t)}function kC(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),zy(e,n)}function SC(e,t,n){return dy(()=>{switch(e.rank){case 1:return ux(e,t,n);case 2:return cx(e,[t,0],[n,e.shape[1]]);case 3:return hx(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return dx(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return lx(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return lx(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new NI("sliceAlongFirstAxis() received an unsupported tensor rank: "+e.rank)}})}function IC(e,t,n){return dy(()=>{switch(e.rank){case 1:return ux(e,t,n);case 2:return cx(e,[0,t],[e.shape[0],n]);case 3:return hx(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return dx(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new NI("sliceAlongLastAxis() received an unsupported tensor rank: "+e.rank)}})}function CC(e,t,n,r){return dy(()=>{switch(e.rank){case 1:return ux(e,t,n);case 2:switch(r){case 1:return SC(e,t,n);case 2:return IC(e,t,n);default:throw new NI("The axis is not within the rank of the tensor "+r)}case 3:switch(r){case 1:return SC(e,t,n);case 2:return hx(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return IC(e,t,n);default:throw new NI("The axis is not within the rank of the tensor "+r)}case 4:switch(r){case 1:return SC(e,t,n);case 2:return dx(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return dx(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return IC(e,t,n);default:throw new NI("The axis is not within the rank of the tensor "+r)}default:throw new NI("sliceAlongLastAxis() received an unsupported tensor rank: "+e.rank)}})}function NC(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),jy(e,t)}function TC(e,t){switch(e.rank){case 1:return qy([e,t]);case 2:return Ky([e,t],0);case 3:return Xy([e,t],0);case 4:return Zy([e,t],0);default:throw new NI("concatAlongFirstAxis() received an unsupported tensor rank: "+e.rank)}}function _C(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new NI(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return hb(e,t)}function EC(e,t=0,n=1,r,s){return tx(e,t,n,r,s)}function AC(e,t,n,r){if(e.rank<2||t.rank<2)throw new TI(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new TI(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = `+t.shape);if(2===e.rank&&2===t.rank)return h.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?FC(e.rank,r,"channelsLast"):null,activation:n});{const s=e.shape.slice(),a=s.pop();e=zy(e,[-1,a]);const i=t.shape.slice(),o=i.pop(),l=i.pop(),u=[...i,o],c=Array.from({length:t.rank},(e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n);t=zy(Tx(t,c),[l,-1]);const d=[...s,...u];return zy(h.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?FC(e.rank,r,"channelsLast"):null,activation:n}),d)}}function RC(e,t,n){return dy(()=>(t=Array.isArray(t)?wx(t,"int32"):yg(t,"int32"),mb(e,t,n)))}function $C(e){return kb(e,e)}function FC(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new NI("Unexpected bias dimensions: "+t.rank+"; expected it to be 1 or "+e);if(5===e){if("channelsFirst"===n)return zy(t,1===r.length?[1,r[0],1,1,1]:[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return zy(t,1===r.length?[1,1,1,1,r[0]]:[1].concat(r))}else if(4===e){if("channelsFirst"===n)return zy(t,1===r.length?[1,r[0],1,1]:[1,r[2],r[0],r[1]]);if("channelsLast"===n)return zy(t,1===r.length?[1,1,1,r[0]]:[1].concat(r))}else if(3===e){if("channelsFirst"===n)return zy(t,1===r.length?[1,r[0],1]:[1,r[1],r[0]]);if("channelsLast"===n)return zy(t,1===r.length?[1,1,r[0]]:[1].concat(r))}else if(e<3)return t;throw new NI("Unsupported input rank by biasAdd: "+t.rank)}function DC(e,t,n){return dy(()=>(null==n&&(n="channelsLast"),lC(n),wy(e,FC(e.rank,t,n))))}function OC(e,t,n,r){return dy(()=>_x(e,t,n,r))}function MC(e,t,n=!1){return n?e():t()}const LC=["fanIn","fanOut","fanAvg"],zC=["normal","uniform","truncatedNormal"];class PC extends c.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class BC extends PC{apply(e,t){return jb(e,t)}}BC.className="Zeros",c.registerClass(BC);class UC extends PC{apply(e,t){return qb(e,t)}}UC.className="Ones",c.registerClass(UC);class VC extends PC{constructor(e){if(super(),"object"!=typeof e)throw new NI("Expected argument of type ConstantConfig but got "+e);if(void 0===e.value)throw new NI("config must have value set but got "+e);this.value=e.value}apply(e,t){return dy(()=>kb(yy(this.value),qb(e,t)))}getConfig(){return{value:this.value}}}VC.className="Constant",c.registerClass(VC);class WC extends PC{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return nx(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}WC.className="RandomUniform",c.registerClass(WC);class GC extends PC{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new TI(`randomNormal does not support dType ${t}.`);return EC(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}GC.className="RandomNormal",c.registerClass(GC);class HC extends PC{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new TI(`truncatedNormal does not support dType ${t}.`);return kx(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}HC.className="TruncatedNormal",c.registerClass(HC);class jC extends PC{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return dy(()=>{if(2!==e.length||e[0]!==e[1])throw new NI("Identity matrix initializer can only be used for 2D square matrices.");return kb(this.gain,db(e[0]))})}getConfig(){return{gain:this.gain}}}jC.className="Identity",c.registerClass(jC);class qC extends PC{constructor(e){if(super(),e.scale<0)throw new NI("scale must be a positive float. Got: "+e.scale);this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,VI(LC,"FanMode",this.mode),this.distribution=null==e.distribution?"normal":e.distribution,function(e){VI(zC,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,r;if(lC(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=yC(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=yC(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=yC(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],s=n[1];let a=this.scale;if(a/="fanIn"===this.mode?Math.max(1,r):"fanOut"===this.mode?Math.max(1,s):Math.max(1,(r+s)/2),"normal"===this.distribution){const n=Math.sqrt(a);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new TI(`${this.getClassName()} does not support dType ${t}.`);return kx(e,0,n,t,this.seed)}{const n=Math.sqrt(3*a);return nx(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}qC.className="VarianceScaling",c.registerClass(qC);class KC extends qC{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return qC.className}}KC.className="GlorotUniform",c.registerClass(KC);class XC extends qC{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return qC.className}}XC.className="GlorotNormal",c.registerClass(XC);class ZC extends qC{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return qC.className}}ZC.className="HeNormal",c.registerClass(ZC);class YC extends qC{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return qC.className}}YC.className="HeUniform",c.registerClass(YC);class JC extends qC{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return qC.className}}JC.className="LeCunNormal",c.registerClass(JC);class QC extends qC{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return qC.className}}QC.className="LeCunNormal",c.registerClass(QC);class eN extends PC{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new TI("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return dy(()=>{if(e.length<2)throw new TI("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const t=EC(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let n=$w.gramSchmidt(t);return e[0]>e[1]&&(n=Tx(n)),kb(this.gain,n)})}getConfig(){return{gain:this.gain,seed:this.seed}}}eN.className="Orthogonal",c.registerClass(eN);const tN={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function nN(e,t={}){return zI(e,c.SerializationMap.getMap().classNameMap,t,"initializer")}function rN(e){return LI(e)}function sN(e){if("string"==typeof e){const t=e in tN?tN[e]:e;if("GlorotNormal"===t)return new XC;if("GlorotUniform"===t)return new KC;if("HeNormal"===t)return new ZC;if("HeUniform"===t)return new YC;if("LeCunNormal"===t)return new JC;if("LeCunUniform"===t)return new QC;{const e={};return e.className=t,e.config={},nN(e)}}return e instanceof PC?e:nN(e)}let aN=0;function iN(){return aN++}const oN={};function lN(e=""){return e in oN||(oN[e]=0),oN[e]+=1,e+oN[e].toString()}function uN(e){return Array.isArray(e)&&Array.isArray(e[0])}function cN(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function hN(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new NI("Expected Tensor length to be 1; got "+e.length);t=e[0]}else t=e;return t}function dN(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return(e=e)[0];throw new NI("Expected exactly 1 Shape; got "+e.length)}return e}function pN(e){let t=0;for(const n of e)t+=0===n.shape.length?1:n.shape.reduce((e,t)=>e*t);return t}class fN{constructor(e,t="float32",n="Variable",r=!0,s=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=iN(),this.originalName=pC(n=null==n?"Variable":n),this.name=fC(this.originalName),this.trainable_=r,this.constraint=s,this.val=function(e,t=!0,n,r){return dm.makeVariable(e,t,n,r)}(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function mN(e){return e.map(e=>e.read())}function gN(e){e.forEach(e=>{e[0].write(e[1])})}class yN{constructor(e){this.dtype=e.dtype,this.shape=e.shape,this.ndim=null!=e.shape?e.shape.length:e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class bN{constructor(e,t,n,r,s,a,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=s,this.outputTensorIndex=i,this.id=iN(),null!=a&&(this.originalName=pC(a),this.name=fC(this.originalName)),this.rank=t.length}}let xN=0;class wN{constructor(e,t){this.callArgs=t,this.id=xN++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const n of e.inboundLayers)null!=n&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)e.push(null!=t?t.name:null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let vN=0;class kN extends c.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=vN++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=DI(e)+"_"+lN(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}this.initialWeights=null!=e.weights?e.weights:null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new CI(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new NI(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return $I(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return $I(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new II("Layer "+this.name+' has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use `getInputAt(nodeIndex)` instead.');if(0===this.inboundNodes.length)throw new II("Layer "+this.name+" is not connected, no input to return.");return $I(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new II("Layer "+this.name+" has no inbound nodes.");if(this.inboundNodes.length>1)throw new II("Layer "+this.name+' has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use `getOutputAt(nodeIndex)` instead.');return $I(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=FI(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=FI(this.inputSpec);if(e.length!==t.length)throw new NI(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: `+e);for(let n=0;n<e.length;n++){const r=e[n],s=t[n];if(null==s)continue;const a=r.rank;if(null!=s.ndim&&a!==s.ndim)throw new NI(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${a}`);if(null!=s.maxNDim&&a>s.maxNDim)throw new NI(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${a}`);if(null!=s.minNDim&&a<s.minNDim)throw new NI(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${a}.`);if(null!=s.dtype&&r.dtype!==s.dtype)throw new NI(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${r.dtype}.`);if(s.axes){const e=r.shape;for(const t in s.axes){const r=Number(t),a=s.axes[t],i=r>=0?e[r]:e[e.length+r];if(null!=a&&-1===[a,null].indexOf(i))throw new NI(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${a} but got shape ${e}.`)}}if(null!=s.shape)for(let e=0;e<s.shape.length;++e){const t=s.shape[e],a=r.shape[e];if(null!=t&&null!=a&&t!==a)throw new NI(`Input ${n} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=FI(e);let r=!0;for(const a of n)if(!(a instanceof bN)){r=!1;break}let s=!0;for(const a of n)if(a instanceof bN){s=!1;break}if(r===s)throw new NI("Arguments to apply() must be all SymbolicTensors or all Tensors");return dC(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of FI(e))t.push(n.shape);this.build($I(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&s&&(this._refCount=1)}if(this.assertInputCompatibility(e),s){let r=this.call(e,t);const s=FI(r),a=[];for(let e of s)-1!==n.indexOf(e)&&(e=e.clone()),a.push(e);if(r=$I(a),null!=this.activityRegularizer)throw new TI("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=FI(e);const t=[];for(const n of e)t.push(n.shape);return $I(t)}(e),r=this.computeOutputShape(n);let s;const a="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),s=null!=r&&r.length>0&&Array.isArray(r[0])?r.map((n,r)=>new bN(a,n,this,FI(e),t,this.name,r)):new bN(a,r,this,FI(e),t,this.name),this.addInboundNode(e,s,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new TI("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}})}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn("The rank of the input tensor provided (shape: "+JSON.stringify(e)+") does not match that of the "+`batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer `+this.name);else{let t=!1;this.batchInputShape.forEach((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: `+JSON.stringify(this.batchInputShape))}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new II(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new II(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new CI(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return pN(this.weights)}build(e){this.built=!0}getWeights(e=!1){return mN(e?this.trainableWeights:this.weights)}setWeights(e){dy(()=>{const t=this.weights;if(t.length!==e.length)throw new NI(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],s=mN(t);for(let a=0;a<s.length;++a){const i=s[a],o=t[a],l=e[a];if(!r.arraysEqual(i.shape,l.shape))throw new NI(`Layer weight shape ${i.shape} not compatible with provided weight shape `+l.shape);n.push([o,l])}gN(n)})}addWeight(e,t,n,r,s,a,i,o){if(-1!==this._addedWeightNames.indexOf(e))throw new NI(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=o?o():sN("zeros"));const l=r.apply(t,n),u=new fN(l,n,e,a,i);return l.dispose(),null!=s&&this.addLoss(()=>s.apply(u.read())),null==a&&(a=!0),a?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=FI(e),null!=this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach(e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)})}return null}return t}addInboundNode(e,t,n,r,s,a,i=null){const o=FI(e);t=FI(t),n=FI(n),r=FI(r),s=cN(s),a=cN(a);const l=[],u=[],c=[];for(const h of o)l.push(h.sourceLayer),u.push(h.nodeIndex),c.push(h.tensorIndex);new wN({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:s,outputShapes:a},i);for(let h=0;h<t.length;h++)t[h].sourceLayer=this,t[h].nodeIndex=this.inboundNodes.length-1,t[h].tensorIndex=h}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}class SN extends kN{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:lN("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new NI("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new NI("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new NI("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new bN(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new wN({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new NI("Cannot pass any input to an InputLayer's apply() method. InputLayer name: "+this.name)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}async function IN(e){if(null==e)return;const t=[],n=[],r=[];for(const s in e){const a=e[s];if("number"!=typeof a){const e=a;t.push(e.data()),n.push(s),r.push(e)}}if(t.length>0){const s=await Promise.all(t);for(let t=0;t<s.length;++t)e[n[t]]=s[t][0];py(r)}}function CN(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var NN;SN.className="InputLayer",c.registerClass(SN),function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(NN||(NN={}));class TN{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class _N{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class EN extends TN{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const r in t){const e=t[r];if("number"==typeof e)this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+e*n;else{let t;r in this.totals?t=this.totals[r]:this.totals[r]=0;const s=dy(()=>wy(this.totals[r],kb(e,n)));this.totals[r]=s,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const n of this.params.metrics)null!=this.totals[n]&&("number"==typeof this.totals[n]?t[n]=this.totals[n]/this.seen:dy(()=>{const e=kb(ib(1,this.seen),this.totals[n]);t[n]=e,this.totals[n].dispose(),fy(t[n])}))}}class AN extends TN{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const n in t)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){const e=[],t=[],n=[];for(const s in this.history){const r=this.history[s];for(let a=0;a<r.length;++a)"number"!=typeof r[a]&&(e.push(r[a].data()),t.push(s),n.push(a))}const r=await Promise.all(e);for(let s=0;s<r.length;++s)this.history[t[s]][n[s]].dispose(),this.history[t[s]][n[s]]=r[s][0]}}class RN extends TN{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||Ww,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");r.isNumber(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let s,a=null!=n?n():r.now();return(...i)=>{const o=null!=n?n():r.now();return o-a<t||(a=o,s=e(...i)),s}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await IN(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await IN(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await IN(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await IN(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await IN(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):r.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await IN(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await IN(e),await this.trainEnd(e))}}function $N(e,t){return null==e&&(e={}),e instanceof TN?[e]:Array.isArray(e)&&e[0]instanceof TN?e:FI(e).map(e=>new RN(e,t))}class FN{constructor(){}static registerCallbackConstructor(e,t){r.assert(e>=0&&Number.isInteger(e),()=>"Verbosity level is expected to be an integer >= 0, but got "+e),FN.checkForDuplicate(t),null==FN.constructors[e]&&(FN.constructors[e]=[]),FN.constructors[e].push(t)}static checkForDuplicate(e){for(const t in FN.constructors)FN.constructors[+t].forEach(t=>{if(t===e)throw new NI("Duplicate callback constructor.")})}static clear(){FN.constructors={}}static createCallbacks(e){const t=[];for(const n in FN.constructors){const r=+n;e>=r&&t.push(...FN.constructors[r])}return t.map(e=>new e)}}function DN(e,t,n,r,s,a,i,o,l){const u=new AN,c=[new EN,...FN.createCallbacks(t)];null!=e&&c.push(...e),c.push(u);const h=new _N(c);return h.setParams({epochs:n,initialEpoch:r,samples:s,steps:a,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:h,history:u}}function ON(e,t={},n=!1){return zI(e,c.SerializationMap.getMap().classNameMap,t,"layer",n)}function MN(e,t){return dy(()=>{"float32"!==e.dtype&&(e=yg(e,"float32"));const n=Ib($C(e),t,!0),r=pb(n.shape,SI()),s=gx(Ab(n,r));return ib(e,s)})}function LN(e,t){return dy(()=>Rb($C(Sb(t,e)),-1))}function zN(e,t){return dy(()=>Rb(xy(Sb(t,e)),-1))}function PN(e,t){return dy(()=>{const n=Sb(e,t),r=Hy(xy(e),SI(),Number.MAX_VALUE),s=xy(ib(n,r));return kb(100,Rb(s,-1))})}function BN(e,t,n=!1){return dy(()=>{if(n)t=px(t);else{const e=Ib(t,t.shape.length-1,!0);t=ib(t,e)}return t=Hy(t,SI(),1-SI()),Wb(Ib(kb(yg(e,"float32"),xb(t)),t.shape.length-1))})}function UN(e,t,n=!1){return dy(()=>{const r=yg(fb(function(e){const t=[yC(e.shape)];return zy(e,t)}(e)),"int32"),s=(t=Hy(t,SI(),1-SI())).shape;return BN(zy(Hb(r,s[s.length-1]),s),t,n)})}function VN(e,t){return dy(()=>{let n;return n=Hy(t,SI(),1-SI()),n=xb(ib(n,Sb(1,n))),Rb(function(e,t){if(!r.arraysEqual(e.shape,t.shape))throw new NI(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return dy(()=>{const n=rx(t),r=Wb(xy(t));return wy(Sb(n,kb(t,e)),wb(ub(r)))})}(e,n),-1)})}function WN(e,t){return dy(()=>{const n=MN(e,-1),r=MN(t,-1),s=kb(n,r);return Wb(Ib(s,-1))})}FN.constructors={};const GN={meanSquaredError:LN,meanAbsoluteError:zN,meanAbsolutePercentageError:PN,meanSquaredLogarithmicError:function(e,t){return dy(()=>{const n=Hy(t,SI(),Number.MAX_VALUE),r=xb(wy(1,n)),s=Hy(e,SI(),Number.MAX_VALUE),a=xb(wy(1,s));return Rb($C(Sb(r,a)),-1)})},squaredHinge:function(e,t){return dy(()=>{const n=Ab(0,Sb(1,kb(e,t)));return Rb($C(n),-1)})},hinge:function(e,t){return dy(()=>{const n=Ab(0,Sb(1,kb(e,t)));return Rb(n,-1)})},categoricalHinge:function(e,t){return dy(()=>{const n=Ib(kb(e,t),-1),r=vb(kb(Sb(1,e),t),-1);return Ab(0,wy(1,Sb(r,n)))})},logcosh:function(e,t){return dy(()=>{const n=Math.log(2),r=Sb(t,e),s=Sb(wy(r,fx(kb(-2,r))),n);return Rb(s,-1)})},categoricalCrossentropy:BN,sparseCategoricalCrossentropy:UN,binaryCrossentropy:VN,kullbackLeiblerDivergence:function(e,t){return dy(()=>{const n=Hy(e,SI(),1),r=Hy(t,SI(),1);return Ib(kb(e,xb(ib(n,r))),-1)})},poisson:function(e,t){return dy(()=>{const n=xb(wy(SI(),t));return Rb(Sb(t,kb(e,n)),-1)})},cosineProximity:WN};function HN(e){if("string"==typeof e){if(e in GN)return GN[e];let t="Unknown loss "+e;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new NI(t)}return e}function jN(e,t){return dy(()=>{const n=kb(.5,Kb(t)),r=vC(gb(t,n),e.dtype);return Rb(lb(e,r),-1)})}function qN(e,t){return dy(()=>vC(lb(Sy(e,-1),Sy(t,-1)),"float32"))}function KN(e,t){return VN(e,t)}function XN(e,t){return e.rank===t.rank&&(e=yx(e,[e.rank-1])),(t=Sy(t,-1)).dtype!==e.dtype&&(t=yg(t,e.dtype)),yg(lb(e,t),"float32")}const ZN=BN,YN=UN,JN={binaryAccuracy:jN,categoricalAccuracy:qN,precision:function(e,t){return dy(()=>{const n=function(e,t){return dy(()=>yg(Ib(Nb(lb(e,1),lb(t,1))),"float32"))}(e,t),r=function(e,t){return dy(()=>yg(Ib(Nb(lb(e,0),lb(t,1))),"float32"))}(e,t),s=wy(n,r);return yg(Cx(gb(s,0),ib(n,s),0),"float32")})},categoricalCrossentropy:ZN,sparseCategoricalCrossentropy:YN,mse:LN,MSE:LN,mae:zN,MAE:zN,mape:PN,MAPE:PN,cosine:WN};function QN(e){if("string"==typeof e&&e in JN)return JN[e];if("string"!=typeof e&&null!=e)return e;throw new NI("Unknown metric "+e)}function eT(e){if(AI(null!==e,"Unknown LossOrMetricFn "+e),"string"==typeof e)return e;{let t;for(const n of Object.keys(GN))if(GN[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(JN))if(JN[n]===e){t=n;break}return void 0!==t?t:e.name}}function tT(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!function e(t){if(null===t)return!0;if("object"==typeof t){if(Object.getPrototypeOf(t)===Object.prototype){const n=Object.keys(t);for(const r of n){if("string"!=typeof r)return!1;if(!e(t[r]))return!1}return!0}if(Array.isArray(t)){for(const n of t)if(!e(n))return!1;return!0}return!1}{const e=typeof t;return"string"===e||"number"===e||"boolean"===e}}(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function nT(e,t,n=console.log){let r="";for(let s=0;s<e.length;++s)s>0&&(r=r.slice(0,r.length-1)+" "),r+=e[s],r=r.slice(0,t[s]),r+=" ".repeat(t[s]-r.length);n(r)}function rT(e,t,n){let r;try{r=JSON.stringify(e.outputShape)}catch(dG){r="multiple"}nT([`${e.name} (${e.getClassName()})`,r,e.countParams().toString()],t,n)}function sT(e,t,n,r){let s;try{s=JSON.stringify(e.outputShape)}catch(dG){s="multiple"}const a=[];for(const u of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(u)))for(let e=0;e<u.inboundLayers.length;++e)a.push(`${u.inboundLayers[e].name}[${u.nodeIndices[e]}][${u.tensorIndices[e]}]`);const i=e.name,o=e.getClassName(),l=0===a.length?"":a[0];nT([`${i} (${o})`,s,e.countParams().toString(),l],t,r);for(let u=1;u<a.length;++u)nT(["","","",a[u]],t,r)}function aT(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function iT(e,t){if(null===e)return null;if("string"==typeof e)return OI(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];aT(t,s,r)?n.push(r):n.push(iT(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{const e=OI(n);t[e]=iT(r,e)}}return t}}class oT{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof oT)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new NI(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return yg(t,e.dtype)}catch(dG){throw new NI(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof bN){if(null==this.id2Value[e.id])throw new NI("Nonexistent key: "+e.name);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new NI("Feed dict has no SymbolicTensor name: "+e);return this.id2Value[t]}}getMask(e){if(e instanceof bN){if(null==this.id2Value[e.id])throw new NI("Nonexistent key: "+e.name);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new NI("Feed dict has no SymbolicTensor name: "+e);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&py(this.id2Mask)}}const lT={},uT={};function cT(e,t,n,s){const a=null!=n&&n.training,i=Array.isArray(e),o=i?e:[e],l=o.map(e=>e.name),u=[],c=t.names();for(const r of l)-1!==c.indexOf(r)?u.push(t.getValue(r)):u.push(null);null!=s&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);const h=l.join(",")+"|"+t.names().join(",");let d,p;if(null==lT[h]){const e=function(e,t){r.assert(null!=e&&e.length>0,()=>"Expected at least one fetch, got none");let n=[],s={};if(1===e.length){const r=dT(e[0],t);n=r.sorted,s=r.recipientMap}else{const r=new Set;for(const a of e){const{sorted:e,recipientMap:i}=dT(a,t);for(const t of e)r.has(t.name)||(n.push(t),r.add(t.name));for(const t in i)null==s[t]&&(s[t]=new Set),i[t].forEach(e=>s[t].add(e))}}return{sorted:n,recipientCounts:hT(s)}}(o,t);d=e.sorted,p=e.recipientCounts,lT[h]=d,uT[h]=p}d=lT[h],p={},a||Object.assign(p,uT[h]);const f=new oT(t);for(let r=0;r<d.length;++r){if(null!=s){const e=hy().numTensors;e>s.maxNumTensors&&(s.maxNumTensors=e),e<s.minNumTensors&&(s.minNumTensors=e)}const e=d[r],i=e.sourceLayer;if(i instanceof SN)continue;const o=[],c=[],h=[];let m=!1;for(const n of e.inputs){const e=f.getValue(n),r=f.getMask(n);o.push(e),c.push(r),null!=r&&(m=!0),a||(p[n.name]--,0!==p[n.name]||t.hasKey(n)||-1!==l.indexOf(n.name)||e.isDisposed||!0===n.sourceLayer.stateful||h.push(e))}m&&((n=n||{}).mask=c[0]);const g=FI(i.apply(o,n));let y=null;i.supportsMasking&&(y=i.computeMask(o,c));const b=pT(e),x=Array.isArray(b)?b:[b];for(let t=0;t<x.length;++t){f.hasKey(x[t])||f.add(x[t],g[t],Array.isArray(y)?y[0]:y);const e=l.indexOf(x[t].name);-1!==e&&(u[e]=g[t])}a||py(h)}return f.disposeMasks(),i?u:u[0]}function hT(e){const t={};for(const n in e)t[n]=e[n].size;return t}function dT(e,t){const n=new Set,r=[],s={};for(const o of t.names())n.add(o);const a=[],i=[];for(a.push(e);a.length>0;){const e=a[a.length-1];if(n.has(e.name)){a.pop();continue}const t=i[i.length-1]===a.length-1;if(0===e.inputs.length||t)a.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(a.length-1);for(const t of e.inputs)null==s[t.name]&&(s[t.name]=new Set),s[t.name].add(e.name),n.has(t.name)||a.push(t)}}return{sorted:r,recipientMap:s}}function pT(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}class fT extends kN{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=lN(e)}if(this.supportsMasking=!1,this.trainable_=!0,this.inputs=Array.isArray(e.inputs)?e.inputs.slice():[e.inputs],this.outputs=Array.isArray(e.outputs)?e.outputs.slice():[e.outputs],BI(this.inputs).length!==this.inputs.length)throw new NI("The list of inputs passed to the model is redundant. All inputs should only appear once. Found: "+this.inputs.map(e=>e.name));BI(this.outputs).length!==this.outputs.length&&console.warn("The list of outputs passed to the model is redundant. All outputs should only appear once. Found: "+this.outputs.map(e=>e.name)),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const y of this.outputs){const e=y.nodeIndex,t=y.tensorIndex;this.outputLayers.push(y.sourceLayer),this.outputLayersNodeIndices.push(e),this.outputLayersTensorIndices.push(t)}for(const y of this.inputs){const e=y.sourceLayer,t=y.nodeIndex,n=y.tensorIndex;AI(0===t,"input layer has >1 nodes"),AI(0===n,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(t),this.inputLayersTensorIndices.push(n)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let y=0;y<this.inputLayers.length;y++){const t=this.inputLayers[y];if(!(t instanceof SN))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${y} (0-based) originates from layer type ${t.getClassName()}.`);this.inputNames.push(t.name),this.feedInputShapes.push(t.batchInputShape),this.feedInputNames.push(t.name)}for(const y of this.outputLayers)this.outputNames.push(y.name);this.internalInputShapes=this.inputs.map(e=>e.shape),this.internalOutputShapes=this.outputs.map(e=>e.shape);const t={},n={},r={},s={},a={},i=[],o=(e,t,n,r,s,l)=>{null!=r&&null!=s&&null!=l||(r=e.sourceLayer,s=e.nodeIndex,l=e.tensorIndex);const u=r.inboundNodes[s];if(-1!==n.indexOf(u))throw new CI(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(u))return;this.containerNodes.add(fT.nodeKey(r,s)),r.id in a||(a[r.id]=Object.keys(a).length),-1===n.indexOf(u)&&n.push(u);const c=u.inboundLayers.length;for(let a=0;a<c;a++)o(u.inputTensors[a],t,n,u.inboundLayers[a],u.nodeIndices[a],u.tensorIndices[a]);for(t.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);i.push(u)},l=[],u=[];for(const y of this.outputs)o(y,l,u);const c=i.slice().reverse();for(const y of c){n[y.id]=y,y.id in t||(t[y.id]=0);let e=t[y.id];e=Math.max(e,null==r[y.outboundLayer.id]?0:r[y.outboundLayer.id]),r[y.outboundLayer.id]=e,s[y.outboundLayer.id]=y.outboundLayer,t[y.id]=e;for(let r=0;r<y.inboundLayers.length;r++){const s=y.inboundLayers[r].inboundNodes[y.nodeIndices[r]];t[s.id]=Math.max(e+1,null==t[s.id]?0:t[s.id]),n[s.id]=s}}const h={};for(const y in t){const e=t[y];e in h||(h[e]=[]),h[e].push(n[y])}const d={};for(const y in r){const e=r[y];e in d||(d[e]=[]),d[e].push(s[y])}let p=Object.keys(d).map(e=>parseInt(e,10)).sort(PI);this.layers=[];for(const y of p){const e=d[y];e.sort((e,t)=>{const n=a[e.id],r=a[t.id];return n<r?-1:n>r?1:0});for(const t of e)t instanceof fT&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=d,p=Object.keys(h).map(e=>parseInt(e,10)).sort(PI);const f=this.inputs.slice(),m=[];for(const y of p)for(const e of h[y]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===f.indexOf(n))throw new CI("Graph disconnected: cannot obtain value for tensor "+n+` at layer "${t.name}". The following previous layers were accessed without issue: `+m);for(const t of e.outputTensors)f.push(t);m.push(t.name)}}this.nodesByDepth=h;const g=this.layers.map(e=>e.name);for(const y of g){const e=g.filter(e=>e===y).length;if(1!==e)throw new CI(`The name "${y}" is used ${e} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new wN({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(e=>null),outputMasks:this.outputs.map(e=>null),inputShapes:this.inputs.map(e=>e.shape),outputShapes:this.outputs.map(e=>e.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(t=>t.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new NI("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let r=0;for(const a of this.layers)for(const e of a.weights){if(null!=n[e.originalName])throw new NI("Duplicate weight name: "+e.originalName);n[e.originalName]=e,r++}const s=[];for(const a in e){let r=a;if(null==n[a]){const e=a.split("/");r=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[r])s.push([n[r],e[a]]);else if(t)throw new NI("Provided weight data has no target variable: "+a);delete n[r]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new NI(`${e.length} of ${r} weights are not set: `+e)}gN(s)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion="tfjs-layers 3.12.0",t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=function e(t,n){if(null==t)return null;if("string"==typeof t)return DI(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const r=[],s=t.length;for(let a=0;a<s;++a){const s=t[a];aT(n,a,s)?r.push(s):r.push(e(s,n))}return r}{const n={};for(const r of Object.keys(t)){const s=t[r];n[DI(r)]="name"!==r&&"className"!==r||"string"!=typeof s?e(s,r):s}return n}}(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return dy(()=>{e=FI(e);const n=new oT;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return cT(this.outputs,n,t)})}computeMask(e,t){return dy(()=>{let n;return e=FI(e),n=null==t?EI(null,e.length):FI(t),this.runInternalGraph(e,n)[1]})}computeOutputShape(e){const t=cN(e);if(t.length!==this.inputLayers.length)throw new NI(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let i=0;i<t.length;i++)n[this.inputLayers[i].name+"_0_0"]=t[i];const r=Object.keys(this.nodesByDepth).map(e=>parseInt(e,10)).sort(PI);if(r.length>1)for(const i of r){const e=this.nodesByDepth[i];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map(e=>e.id).indexOf(e.id))continue;const r=[];for(let i=0;i<t.inboundLayers.length;i++)r.push(n[`${t.inboundLayers[i].name}_${t.nodeIndices[i]}_${t.tensorIndices[i]}`]);const s=cN(e.computeOutputShape($I(r))),a=e.inboundNodes.indexOf(t);for(let t=0;t<s.length;t++)n[`${e.name}_${a}_${t}`]=s[t]}}const s=[],a=[];for(let i=0;i<this.outputLayers.length;i++)a.push(`${this.outputLayers[i].name}_${this.outputLayersNodeIndices[i]}_${this.outputLayersTensorIndices[i]}`);for(let i=0;i<a.length;i++){const e=a[i];AI(e in n),s.push(n[e])}return $I(s)}runInternalGraph(e,t){null==t&&(t=EI(null,e.length));const n={};for(let o=0;o<this.inputs.length;++o)n[this.inputs[o].id]=[e[o],t[o]];const r=Object.keys(this.nodesByDepth).map(e=>parseInt(e,10)).sort(PI);for(const o of r){const e=this.nodesByDepth[o];for(const t of e){const e=t.outboundLayer,r=t.inputTensors,s=t.outputTensors,a=new Array;for(const t of r)t.id in n&&a.push(n[t.id]);if(a.length===r.length){let r,i,o,l,u={};if(null!=t.callArgs&&(u=t.callArgs),1===a.length){const[t,n]=a[0];null==u.mask&&(u.mask=n),o=FI(e.call(t,u)),l=FI(e.computeMask(t,n)),r=[t],i=[n]}else r=a.map(e=>e[0]),i=a.map(e=>e[1]),null==u.mask&&(u.mask=i),o=FI(e.call(r,u)),l=FI(e.computeMask(r,i));if(e.activityRegularizer)throw new TI("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<s.length;++e)n[s[e].id]=[o[e],l[e]]}}}const s=[],a=[],i=[];for(const o of this.outputs){AI(o.id in n,`Could not compute output ${o.name} : ${o.id}`);const[e,t]=n[o.id];i.push(e.shape),s.push(e),a.push(t)}return[s,a,i]}buildNodeConversionMap(e){const t={};let n;for(const r of this.layers){n=r instanceof fT?1:0;for(let e=0;e<r.inboundNodes.length;e++){const s=fT.nodeKey(r,e);this.containerNodes.has(s)&&(t[s]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new NI(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new NI("Provide either a layer name or layer index");for(const n of this.layers)if(n.name===e)return n;throw new NI("No such layer: "+e)}calculateLosses(){return dy(()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=fT.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e})}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const a of this.layers){const e=a.getClassName(),r=a.getConfig(),s=[];for(let n=0;n<a.inboundNodes.length;n++){const e=a.inboundNodes[n],r=fT.nodeKey(a,n);let i={};if(this.containerNodes.has(r)){if(e.callArgs)try{JSON.stringify(e.callArgs),i=e.callArgs}catch(dG){console.warn(`Layer ${a.name} was passed non-serializable keyword arguments: `+e.callArgs+". They will not be included in the serialized model (and thus will be missing at deserialization time)."),i={}}if(e.inboundLayers.length>0){const n=[];for(let r=0;r<e.inboundLayers.length;r++){const s=e.inboundLayers[r],a=e.tensorIndices[r];let o=t[fT.nodeKey(s,e.nodeIndices[r])];null==o&&(o=0),n.push([s.name,o,a,i])}s.push(n)}}}const i={};i.name=a.name,i.className=e,i.config=r,i.inboundNodes=s,n.push(i)}e.layers=n;const r=[];for(let a=0;a<this.inputLayers.length;a++){const e=this.inputLayers[a],n=fT.nodeKey(e,this.inputLayersNodeIndices[a]);if(!this.containerNodes.has(n))continue;let s=t[n];null==s&&(s=0),r.push([e.name,s,this.inputLayersTensorIndices[a]])}e.inputLayers=r;const s=[];for(let a=0;a<this.outputLayers.length;a++){const e=this.outputLayers[a],n=fT.nodeKey(e,this.outputLayersNodeIndices[a]);if(!this.containerNodes.has(n))continue;let r=t[n];null==r&&(r=0),s.push([e.name,r,this.outputLayersTensorIndices[a]])}return e.outputLayers=s,e}static fromConfig(e,t,n={},r=!1){const s={},a={};function i(e,t){e.name in a?a[e.name].push(t):a[e.name]=[t]}function o(e,t){const n=[];let r;for(const a of t){const o=a[0],l=a[1],u=a[2];if(r=null==a[3]?{}:a[3],!(o in s))return void i(e,t);const c=s[o];if(c.inboundNodes.length<=l)return void i(e,t);n.push(c.inboundNodes[l].outputTensors[u])}n.length>0&&e.apply($I(n),r)}function l(e){const n=e.name,a=ON(e,null!=t.customObjects?t.customObjects:{});a.setFastWeightInitDuringBuild(r),s[n]=a,e.inboundNodes.forEach(e=>{if(!(e instanceof Array))throw new NI("Corrupted configuration, expected array for nodeData: "+e);i(a,e)})}const u=t.name,c=t.layers;for(const m of c)l(m);for(;!UI(a);)for(const e of c){const t=s[e.name];if(t.name in a){const e=a[t.name];delete a[t.name];for(const n of e)o(t,n)}}const h=[],d=[],p=t.inputLayers;for(const m of p){const e=m[0],t=m[1],n=m[2];AI(e in s),h.push(s[e].inboundNodes[t].outputTensors[n])}const f=t.outputLayers;for(const m of f){const e=m[0],t=m[1],n=m[2];AI(e in s),d.push(s[e].inboundNodes[t].outputTensors[n])}return new e({inputs:h,outputs:d,name:u})}get stateful(){if(this._stateful)throw new NI("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){dy(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}}function mT(e,t){return function(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map(e=>null);if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided classWeight is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach(t=>{n.push(t in e?e[t]:null)}),n}throw new Error(`The model has multiple (${r}) outputs, so classWeight must be either an array with ${r} elements or an object with ${t} keys. Provided classWeight not understood: ${JSON.stringify(e)}`)}(e,t)}async function gT(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=dy(()=>{if(1===e.shape.length)return bg(e);if(2===e.shape.length){if(e.shape[1]>1)return Sy(e,1);if(1===e.shape[1])return zy(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),r=Array.from(await t.data());py(t);const s=[];return r.forEach(e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);s.push(n[e])}),wx(s,"float32")}return null}function yT(e,t){return kb(e,t)}function bT(e,t){let n,s;n=t.xs,s=t.ys,r.assert(null!=n&&null!=s,()=>"A Dataset iterator for fitDataset() is expected to generate objects of the form `{xs: xVal, ys: yVal}`, where the two values may be `tf.Tensor`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates "+t);const a=xT("input",e.inputNames,n),i=xT("output",e.outputNames,s),o=a[0].shape[0];r.assert(a.length===e.inputs.length,()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: `+JSON.stringify(e.inputNames)+")"),r.assert(i.length===e.outputs.length,()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: `+JSON.stringify(e.outputNames)+")");for(let l=0;l<a.length;l++)r.assert(a[l].shape[0]===o,()=>`Batch size mismatch: input ${e.inputNames[l]} has ${a[l].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`);for(let l=0;l<i.length;l++)r.assert(i[l].shape[0]===o,()=>`Batch size mismatch: output ${e.outputNames[l]} has ${i[l].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`);return{xs:a,ys:i}}function xT(e,t,n){if(n instanceof qf)return[n];if(Array.isArray(n))return r.assert(n.length===t.length,()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`),n;{const r=[];for(const s of t){if(null==n[s])throw new NI(`The feature data generated by the dataset lacks the required ${e} key '${s}'.`);r.push(n[s])}return r}}function wT(e){return"function"==typeof e.iterator}function vT(e){r.assert(e>0&&Number.isInteger(e),()=>"batchSize is required to be a positive integer, but got "+e)}function kT(e,t,n){return null==e?[null]:Array.isArray(e)?e.map(e=>SC(e,t,n-t)):SC(e,t,n-t)}function ST(e,t){return dy(()=>null==e?null:Array.isArray(e)?e.map(e=>ST(e,t)):RC(e,"int32"===t.dtype?t:yg(t,"int32")))}function IT(e,t){const n=[];let r=0,s=null;for(;r<e;)s=r+t,s>=e&&(s=e),n.push([r,s]),r=s;return n}function CT(e){const t=[];e instanceof qf&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(kC(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function NT(e,t){if(null==e)return;const n=[];if(t instanceof qf)n.push(t.id);else if(Array.isArray(t))t.forEach(e=>n.push(e.id));else if(null!=t)for(const s in t)n.push(t[s].id);const r=[];if(e instanceof qf)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach(e=>{-1===n.indexOf(e.id)&&r.push(e)});else if(null!=e)for(const s in e){const t=e[s];-1===n.indexOf(t.id)&&r.push(t)}r.forEach(e=>{e.isDisposed||e.dispose()})}function TT(e){return Array.isArray(e)}function _T(e){return!function(e){return e instanceof qf}(e)&&!TT(e)}function ET(e,t,n,r=!0,s=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(TT(e)&&e.length>0)t=!0;else if(_T(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new NI(`Error when checking model ${s} expected no data, but got `+e)}return[]}if(null==e)return t.map(e=>null);let a;if(_T(e)){e=e,a=[];for(const n of t){if(null==e[n])throw new NI(`No data provided for "${n}". Need data for each key in: `+t);a.push(e[n])}}else if(TT(e)){if((e=e).length!==t.length)throw new NI(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): `+e);a=e}else{if(e=e,t.length>1)throw new NI(`The model ${s} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape `+e.shape);a=[e]}if(a=CT(a),null!=n)for(let i=0;i<t.length;++i){if(null==n[i])continue;const e=a[i];if(e.shape.length!==n[i].length)throw new NI(`Error when checking ${s}: expected ${t[i]} to have ${n[i].length} dimension(s). but got array with shape `+e.shape);for(let t=0;t<n[i].length;++t){if(0===t&&!r)continue;const a=e.shape[t],o=n[i][t];if(null!=o&&o>=0&&a!==o)throw new NI(s+" expected a batch of elements where each "+`example has shape [${n[i].slice(1,n[i].length)}] `+`(i.e.,tensor shape [*,${n[i].slice(1,n[i].length)}])`+` but the ${s} received an input with ${e.shape[0]}`+` examples, each with shape [${e.shape.slice(1,e.shape.length)}]`+` (tensor shape [${e.shape}])`)}}return a}function AT(e,t,n,r=!0,s=""){let a;if(Array.isArray(e)){if(e.length!==t.length)throw new NI(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);a=e}else{if(t.length>1)throw new NI(`The model expects ${t.length} ${s} Tensors, but only received one Tensor. Found: array with shape `+JSON.stringify(e.shape)+".");a=[e]}if(null!=n)for(let i=0;i<t.length;++i){if(null==n[i])continue;const e=a[i];if(e.shape.length!==n[i].length)throw new NI(`Error when checking ${s}: expected ${t[i]} to have ${n[i].length} dimension(s), but got array with shape `+JSON.stringify(e.shape));for(let a=0;a<n[i].length;++a){if(0===a&&!r)continue;const o=e.shape[a],l=n[i][a];if(null!=l&&l!==o)throw new NI(`Error when checking ${s}: expected ${t[i]} to have shape ${JSON.stringify(n[i])} but got array with shape ${JSON.stringify(e.shape)}.`)}}}class RT extends fT{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new NI("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n,r=console.log){const s=function(e){let t=!0;const n=[],r=[];for(const s in e.nodesByDepth)n.push(e.nodesByDepth[s]);for(const s of n){if(s.length>1||1===s.length&&s[0].inboundLayers.length>1){t=!1;break}r.push(...s)}if(t)for(const s of e.layers){let e=!1;for(const n of s.inboundNodes)if(-1!==r.indexOf(n)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),a=["Layer (type)","Output shape","Param #"];let i;if(s?(t=t||65,n=n||[.45,.85,1]):(t=t||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map(e=>Math.floor(t*e))),!s){a.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}r("_".repeat(t)),nT(a,n,r),r("=".repeat(t));const o=e.layers;for(let c=0;c<o.length;++c)s?rT(o[c],n,r):sT(o[c],n,i,r),r((c===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const l=function(e){let t;return t=pN(null!=e.collectedTrainableWeights?e.collectedTrainableWeights:e.trainableWeights),t}(e),u=pN(e.nonTrainableWeights);r("Total params: "+(l+u)),r("Trainable params: "+l),r("Non-trainable params: "+u),r("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>Uw.adagrad(.01),Adadelta:()=>Uw.adadelta(1,.95,SI()),Adam:()=>Uw.adam(.001,.9,.999,SI()),Adamax:()=>Uw.adamax(.002,.9,.999,SI(),0),RMSProp:()=>Uw.rmsprop(.001,.9,0,SI()),SGD:()=>Uw.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new NI("Unknown Optimizer "+e)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof by))throw new NI("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new NI(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(e=>HN(e))}else{const n=HN(e.loss);this.outputs.forEach(e=>{t.push(n)})}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new NI(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: `+this.outputNames);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(HN(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){const e=this.internalOutputShapes[a];this.feedOutputNames.push(this.outputNames[a]),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[a])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],dC("loss",()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}});const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map(e=>[]);let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError("Type of metrics argument not understood. Expected an string,function, Array, or Object, found: "+e);n=e}if(Array.isArray(n))return t.map(e=>n);{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),s=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};dC("metric",()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,r,a;for(const i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let s;1===t[t.length-1]||this.lossFunctions[e]===VN?-1!==["accuracy","acc"].indexOf(i)?r=jN:-1!==["crossentropy","ce"].indexOf(i)&&(r=KN):this.lossFunctions[e]===UN?-1!==["accuracy","acc"].indexOf(i)?r=XN:-1!==["crossentropy","ce"].indexOf(i)&&(r=YN):-1!==["accuracy","acc"].indexOf(i)?r=qN:-1!==["crossentropy","ce"].indexOf(i)&&(r=ZN),-1!==["accuracy","acc"].indexOf(i)?s="acc":-1!==["crossentropy","ce"].indexOf(i)&&(s="ce"),a=r,n=""+s}else{const e=QN(i);a=e,n=""+eT(i)}let t;dC(n,()=>{t=a}),s(e,n,t)}})(r[e])}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const r=null==n.batchSize?32:n.batchSize;vT(r);const s=this.standardizeUserDataXY(e,t,!0,r);try{const a=s[0].concat(s[1]);return this.makeTestFunction(),$I(this.testLoop(this.testFunction,a,r,n.verbose,n.steps))}finally{NT(s[0],e),NT(s[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const s=null!=(n=n||{}).batches,a=e.testFunction;let i=[];if(n.verbose>0)throw new TI("Verbose mode is not implemented yet.");r.assert(!s||n.batches>0&&Number.isInteger(n.batches),()=>"Test loop expects `batches` to be a positive integer, but received "+JSON.stringify(n.batches));const o="function"==typeof t.next?t:await t.iterator();let l=0,u=0;for(;!s||u<n.batches;){const t=await o.next();if(i=dy(()=>{if(t.value){const{xs:n,ys:r}=bT(e,t.value),s=n.concat(r),o=dy(()=>a(s));if(py(s),0===u)for(let e=0;e<o.length;++e)i.push(yy(0));const c=s[0].shape[0];for(let e=0;e<o.length;++e){const t=o[e],n=i[e];i[e]=dy(()=>wy(i[e],kb(c,t))),u>0&&py(n)}py(o),l+=c,++u}return i}),t.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let r=0;r<i.length;++r){const e=i[r];i[r]=ib(i[r],l),py(e)}return $I(i)}(this,e,t)}checkNumSamples(e,t,n,r="steps"){let s;if(null!=n){if(s=null,null!=t)throw new NI(`If ${r} is set, batchSize must be null or undefined.Got batchSize = `+t)}else{if(null==e)throw new NI("Either the input data should have a defined shape, or "+r+" shoud be specified.");s=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return s}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new NI("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=this.retrieveSymbolicTensors(n?t:[t]),s=new oT;if(e instanceof qf&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new NI(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)s.add(this.inputs[t],e[t])}else for(const i of this.inputs){const t=e[i.name];if(null==t)throw new NI("No value is provided for the model's input "+i.name);s.add(i,t)}const a=cT(r,s);return n?a:a[0]}retrieveSymbolicTensors(e){const t=EI(null,e.length);let n=e.length;for(const r of this.layers){const s=Array.isArray(r.output)?r.output:[r.output],a=s.map(e=>e.name);for(let r=0;r<e.length;++r){const i=a.indexOf(e[r]);if(-1!==i&&(t[r]=s[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach((t,r)=>{null==t&&n.push(e[r])}),new NI("Cannot find SymbolicTensors for output name(s): "+JSON.stringify(n))}return t}predictLoop(e,t=32,n=!1){return dy(()=>{const r=this.checkNumSamples(e);if(n)throw new TI("Verbose predictLoop() is not implemented yet.");const s=IT(r,t),a=this.outputs.map(e=>[]);for(let t=0;t<s.length;++t)dy(()=>{const n=kT(e,s[t][0],s[t][1]),r=[];if(Array.isArray(n))for(let e=0;e<n.length;++e)r.push({key:this.inputs[e],value:n[e]});else r.push({key:this.inputs[0],value:n});const a=new oT(r);return cT(this.outputs,a)}).forEach((e,t)=>a[t].push(e));return $I(a.map(e=>jy(e,0)))})}predict(e,t={}){const n=CT(e);AT(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==t.batchSize?32:t.batchSize;return vT(r),this.predictLoop(n,r)}finally{NT(n,e)}}predictOnBatch(e){AT(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,s){if(null==this.optimizer_)throw new CI("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const a=[];for(let r=0;r<this.feedOutputShapes.length;++r){const e=this.feedOutputShapes[r];a.push(this.feedLossFns[r]===UN?e.slice(0,e.length-1).concat([1]):e)}if(function(e,t,n){const s=BI(e.map(e=>e.shape[0]));s.sort();const a=BI(t.map(e=>e.shape[0]));if(a.sort(),s.length>1)throw new NI("All input Tensors (x) should have the same number of samples. Got array shapes: "+JSON.stringify(e.map(e=>e.shape)));if(a.length>1)throw new NI("All target Tensors (y) should have the same number of samples. Got array shapes: "+JSON.stringify(t.map(e=>e.shape)));if(s.length>0&&a.length>0&&!r.arraysEqual(s,a))throw new NI(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${a[0]} target sample(s).`)}(e=ET(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=ET(t,this.feedOutputNames,a,!1,"target")),function(e,t,n){const r=[LN,VN,BN];for(let s=0;s<e.length;++s){const a=e[s],i=t[s],o=n[s];if(null!=i){if(i===BN&&1===a.shape[a.shape.length-1])throw new NI(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){const e=a.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const r=e[n],s=t[n];if(null!=s&&r!==s)throw new NI(`A target Tensor with shape ${a.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=s&&s>0&&e[0].shape[0]%s!=0)throw new NI(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${s}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,s=!0,a){const[i,o]=this.standardizeUserDataXY(e,t,s,a);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=r){const e=mT(r,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await gT(o[t],null,e[t]))}return[i,o,l]}testLoop(e,t,n,r=0,s){return dy(()=>{const a=this.checkNumSamples(t,n,s,"steps"),i=[];if(r>0)throw new TI("Verbose mode is not implemented yet.");if(null!=s)throw new TI("steps mode in testLoop() is not implemented yet");{const r=IT(a,n),s=wx(wC(0,a));for(let n=0;n<r.length;++n){const a=r[n][0],o=r[n][1],l=SC(s,a,o-a),u=ST(t,l),c=e(u);if(0===n)for(let e=0;e<c.length;++e)i.push(yy(0));for(let e=0;e<c.length;++e)i[e]=wy(i[e],kb(o-a,c[e]))}for(let e=0;e<i.length;++e)i[e]=ib(i[e],a)}return i})}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let s=r;RI(e,r)>1&&(s+="_"+RI(e.slice(0,n),r)),t.push(s)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),a=[],i=this.collectedTrainableWeights.map(e=>e.read());return[this.optimizer_.minimize(()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new oT(e),o=cT(this.outputs,i,{training:!0});let l;for(let n=0;n<this.lossFunctions.length;++n){let e=(0,this.lossFunctions[n])(r[n],o[n]);null!=s[n]&&(e=yT(e,s[n]));const a=Rb(e);t.push(a),l=0===n?e:wy(l,e)}for(let n=0;n<this.metricsTensors.length;++n){let e;if(this.outputs.length>1&&n<this.outputs.length)e=t[n];else{const t=this.metricsTensors[n][1];e=Rb((0,this.metricsTensors[n][0])(r[t],o[t]))}fy(e),a.push(e)}return l=Rb(l),this.calculateLosses().forEach(e=>{l=wy(l,e)}),l},!0,i)].concat(a)}}makeTestFunction(){this.testFunction=e=>dy(()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let e=0;e<this.inputs.length;++e)a.push({key:this.inputs[e],value:r[e]});const i=new oT(a),o=cT(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const r=Rb((0,this.lossFunctions[e])(s[e],o[e]));n=0===e?r:wy(n,r),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][1],r=Rb((0,this.metricsTensors[e][0])(s[n],o[n]));t.push(r)}return t})}async fit(e,t,n={}){return async function(e,t,n,s={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let a,i,o,l,u,c,h;e.isTraining=!0;try{const d=null==s.batchSize?32:s.batchSize;vT(d);const p=!1,f=await e.standardizeUserData(t,n,s.sampleWeight,s.classWeight,p,d);a=f[0],i=f[1],h=f[2];let m,g=!1;if(null!=s.validationData&&s.validationData.length>0){if(g=!0,2!==s.validationData.length)throw 3===s.validationData.length?new TI("validationData including sample weights is not supported yet."):new NI("When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; "+s.validationData+" is invalid.");o=s.validationData[0],l=s.validationData[1];const t=!0,n=await e.standardizeUserData(o,l,null,null,t,d);u=n[0],c=n[1],m=u.concat(c)}else if(null!=s.validationSplit&&s.validationSplit>0&&s.validationSplit<1){g=!0;const e=Math.floor(a[0].shape[0]*(1-s.validationSplit)),t=a[0].shape[0];u=kT(a,e,t),a=kT(a,0,e),c=kT(i,e,t),i=kT(i,0,e),m=u.concat(c)}else null!=s.validationSteps&&(g=!0);const y=a.concat(i).concat(h);e.checkTrainableWeightsConsistency();const b=e.makeTrainFunction(),x=e.getDedupedMetricsNames();let w,v;g?(e.makeTestFunction(),w=e.testFunction,v=x.slice().concat(x.map(e=>"val_"+e))):(w=null,m=[],v=x.slice());const k=$N(s.callbacks,s.yieldEvery);return await async function(e,t,n,s,a,i,o,l,u,c,h,d,p,f,m){null==a&&(a=32),null==i&&(i=1),null==h&&(h=!0),null==p&&(p=0);let g=!1;null!=u&&null!=c&&(g=!0);const y=e.checkNumSamples(n,a,null,"steps_per_epoch");let b;null!=y&&(b=wC(0,y)),null==o&&(o=1);const{callbackList:x,history:w}=DN(l,o,i,p,y,null,a,g,d);x.setModel(e),e.history=w,await x.onTrainBegin(),e.stopTraining_=!1;for(let v=p;v<i;++v){await x.onEpochBegin(v);const i={};{if("batch"===h)throw new TI("batch shuffling is not implemneted yet");h&&r.shuffle(b);const o=wx(b),l=IT(y,a);for(let r=0;r<l.length;++r){const h={};if(await x.onBatchBegin(r,h),dy(()=>{const d=l[r][0],p=l[r][1],f=SC(o,d,p-d);h.batch=r,h.size=p-d;const m=ST(n,f),y=t(m);for(let e=0;e<s.length;++e){const t=y[e];h[s[e]]=t,fy(t)}if(r===l.length-1&&g){const t=e.testLoop(u,c,a);for(let e=0;e<s.length;++e){const n=s[e],r=t[e];fy(r),i["val_"+n]=r}}}),await x.onBatchEnd(r,h),CN(h),e.stopTraining_)break}o.dispose()}if(await x.onEpochEnd(v,i),e.stopTraining_)break}return await x.onTrainEnd(),await e.history.syncData(),e.history}(e,b,y,x,d,s.epochs,s.verbose,k,w,m,s.shuffle,v,s.initialEpoch)}finally{e.isTraining=!1,NT(a,t),NT(i,n),NT(u,o),NT(c,l),null!=h&&py(h)}}(this,e,t,n)}async fitDataset(e,t){return async function(e,t,n){const s=null!=n.batchesPerEpoch;if(r.assert(null!=e.optimizer,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),r.assert(null!=n,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),r.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),()=>"For fitDataset(), config.epochs is expected to be a positive integer, but got "+n.epochs),r.assert(!s||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>"For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got "+n.batchesPerEpoch),r.assert(null==n.validationSplit,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const a=null!=n.validationData;let i,o;if(a)if(wT(n.validationData))r.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>"For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got "+n.validationBatches);else{const e=function(e){if(3===e.length)throw new TI("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);i=e.xs,o=e.ys}const l=e.makeTrainFunction(),u=e.getDedupedMetricsNames();let c;c=a?u.slice().concat(u.map(e=>"val_"+e)):u.slice();const h=$N(n.callbacks,n.yieldEvery),d=null==n.verbose?1:n.verbose,{callbackList:p,history:f}=DN(h,d,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,a,c);p.setModel(e),e.history=f,await p.onTrainBegin(),e.stopTraining_=!1;let m=null==n.initialEpoch?0:n.initialEpoch,g=await t.iterator();for(;m<n.epochs;){const r={};await p.onEpochBegin(m);let c=0,h=0;for(s||(g=await t.iterator());!s||c<n.batchesPerEpoch;){const t=await g.next();if(s&&t.done){console.warn("You provided `batchesPerEpoch` as "+n.batchesPerEpoch+", but your dataset iterator ran out of data after "+c+" batches; interrupting training. Make sure that your dataset can generate at least `batchesPerEpoch * epochs` batches (in this case, "+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:r,ys:s}=bT(e,t.value),a={};a.batch=h,a.size=r[0].shape[0],await p.onBatchBegin(h,a);const i=[];if(null!=n.classWeight){const t=mT(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await gT(s[e],null,t[e]))}const o=r.concat(s).concat(i),d=l(o);py(o);for(let e=0;e<u.length;++e){const t=d[e];a[u[e]]=t,fy(t)}await p.onBatchEnd(h,a),CN(a),h++,c++}if(s?c>=n.batchesPerEpoch:t.done){if(a){let t;t=wT(n.validationData)?FI(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):FI(e.evaluate(i,o,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)r["val_"+e.metricsNames[n]]=t[n]}break}if(e.stopTraining_)break}if(await p.onEpochEnd(m,r),m++,e.stopTraining_)break}return await p.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],s=n[1],a=this.makeTrainFunction()(r.concat(s)),i=[];for(const o of a){const e=await o.data();i.push(e[0])}return py(a),$I(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let a=0;a<r.length;++a)n&&!r[a].trainable||t.push({name:r[a].originalName,tensor:s[a]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=hy().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-hy().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=DI(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(e=>DI(e))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=DI(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[DI(eT(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>DI(eT(e)));{const e={};for(const t in this.metrics)e[t]=DI(eT(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=ON(iT(e.optimizer_config));let n,r;if("string"==typeof e.loss)n=OI(e.loss);else if(Array.isArray(e.loss))n=e.loss.map(e=>OI(e));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=OI(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map(e=>OI(e));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=OI(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"==typeof e){const t=i.getSaveHandlers(e);if(0===t.length)throw new NI(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new NI(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new NI("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await i.encodeWeights(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v3.12.0",convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:s}=await i.encodeWeights(await this.optimizer.getWeights(),e);n.specs.push(...s),n.data=i.concatenateArrayBuffers([n.data,t])}return null!=this.userDefinedMetadata&&(tT(this.userDefinedMetadata,this.name,!0),r.userDefinedMetadata=this.userDefinedMetadata),r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){tT(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}RT.className="Model",c.registerClass(RT);class $T extends RT{}$T.className="Functional",c.registerClass($T);class FT extends RT{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:lN("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(e=>e<0))throw new NI("Negative dimension size caused by adding layer "+e.name+" with input shape ["+e.inboundNodes[0].inputTensors[0].shape+"]")}add(e){const t=e instanceof FT||e instanceof RT;let n;if(t){if(n=e,1!==n.outputs.length)throw new NI("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new NI("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new NI("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=function(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new NI("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new SN({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new NI(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new NI("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=function e(t,n,r){if((null==n||null!=r&&r>0)&&(n=t.sourceLayer,r=t.nodeIndex),0===n.inboundNodes.length)return[t];{const t=n.inboundNodes[r];if(0===t.inboundLayers.length)return t.inputTensors;{const n=[];for(let r=0;r<t.inboundLayers.length;r++){const s=e(t.inputTensors[r],t.inboundLayers[r],t.nodeIndices[r]);for(const e of s)-1===n.indexOf(e)&&n.push(e)}return n}}}(this.outputs[0])}this.inboundNodes=[],new wN({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:EI(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(e=>e.shape),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(dN(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new RT({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new CI("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new CI("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new CI("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new CI("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},s=!1){let a,i={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new NI("Legacy serialization format not supported yet.");a=t}else r.assert(null!=t.layers,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),a=t.layers,delete t.layers,i=t;const o=new e(i);if(!(o instanceof FT))throw new TI("Sequential.fromConfig called on non-Sequential input: "+o);for(const r of a){const e=ON(r,void 0,s);s&&e.setFastWeightInitDuringBuild(!0),o.add(e)}return o}set stopTraining(e){if(null==this.model)throw new NI("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new NI("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}FT.className="Sequential",c.registerClass(FT);class DT extends c.Serializable{getConfig(){return{}}}class OT extends DT{apply(e,t=1){return function(e,t=1){if(1!==t)throw new TI(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return ob(e)}(e,t)}}OT.className="elu",c.registerClass(OT);class MT extends DT{apply(e){return ax(e)}}MT.className="selu",c.registerClass(MT);class LT extends DT{apply(e){return rx(e)}}LT.className="relu",c.registerClass(LT);class zT extends DT{apply(e){return dy(()=>$b(6,rx(e)))}}zT.className="relu6",c.registerClass(zT);class PT extends DT{apply(e){return e}}PT.className="linear",c.registerClass(PT);class BT extends DT{apply(e){return ox(e)}}BT.className="sigmoid",c.registerClass(BT);class UT extends DT{apply(e){return function(e){return dy(()=>{const t=wy(.5,kb(.2,e));return Hy(t,0,1)})}(e)}}UT.className="hardSigmoid",c.registerClass(UT);class VT extends DT{apply(e){return fx(e)}}VT.className="softplus",c.registerClass(VT);class WT extends DT{apply(e){return function(e){return dy(()=>ib(e,wy(xy(e),1)))}(e)}}WT.className="softsign",c.registerClass(WT);class GT extends DT{apply(e){return xx(e)}}GT.className="tanh",c.registerClass(GT);class HT extends DT{apply(e,t=-1){return px(e,t)}}HT.className="softmax",c.registerClass(HT);class jT extends DT{apply(e,t=-1){return Cb(e,t)}}jT.className="logSoftmax",c.registerClass(jT);class qT extends DT{apply(e,t=1){return dy(()=>kb(ox(kb(e,t)),e))}}qT.className="swish",c.registerClass(qT);class KT extends DT{apply(e){return dy(()=>kb(e,xx(fx(e))))}}function XT(e){return e.getClassName()}function ZT(e,t={}){return zI(e,c.SerializationMap.getMap().classNameMap,t,"activation")}function YT(e){if(null==e)return ZT({className:"linear",config:{}});if("string"==typeof e){const t={};return t.className=e,t.config={},ZT(t)}return e instanceof DT?e:ZT(e)}KT.className="mish",c.registerClass(KT);class JT extends c.Serializable{}class QT extends JT{constructor(e){super(),function(e){if(null!=e&&"object"!=typeof e)throw new Error("Argument to L1L2 regularizer's constructor is expected to be an object, but received: "+e)}(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return dy(()=>{let t=jb([1]);return this.hasL1&&(t=wy(t,Ib(kb(this.l1,xy(e))))),this.hasL2&&(t=wy(t,Ib(kb(this.l2,$C(e))))),zy(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}QT.className="L1L2",c.registerClass(QT);const e_={l1l2:"L1L2"};function t_(e){return LI(e)}function n_(e,t={}){return zI(e,c.SerializationMap.getMap().classNameMap,t,"regularizer")}function r_(e){return null==e?null:"string"==typeof e?n_({className:e in e_?e_[e]:e,config:{}}):e instanceof JT?e:n_(e)}class s_ extends kN{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=hN(e);let n=rx(e);return null!=this.maxValue&&(n=Hy(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}s_.className="ReLU",c.registerClass(s_);class a_ extends kN{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=hN(e);return bb(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}a_.className="LeakyReLU",c.registerClass(a_);class i_ extends kN{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=sN(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=r_(e.alphaRegularizer),this.alphaConstraint=tC(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new NI("Expected sharedAxes to be a number or an array of numbers, but got "+e.sharedAxes);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=dN(e)).slice(1);if(null!=this.sharedAxes)for(const r of this.sharedAxes)t[r-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let r=1;r<e.length;++r)n[r]=e[r];this.inputSpec=[new yN({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=hN(e),Yb(e,this.alpha.read())}getConfig(){const e={alphaInitializer:rN(this.alphaInitializer),alphaRegularizer:t_(this.alphaRegularizer),alphaConstraint:QI(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}i_.className="PReLU",c.registerClass(i_);class o_ extends kN{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new TI(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=hN(e);return ob(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}o_.className="ELU",c.registerClass(o_);class l_ extends kN{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=hN(e);return kb(n,yg(gb(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}l_.className="ThresholdedReLU",c.registerClass(l_);class u_ extends kN{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new HT).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=hN(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function c_(e,t,n){if("number"==typeof e)return EI(e,t);if(e.length!==t)throw new NI(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let s=0;s<t;++s){const a=e[s];if((r=a)!==parseInt(r.toString(),10))throw new NI(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number `+a)}return e;var r}function h_(e,t,n,r,s=1){if(null==e)return e;let a;return a="same"===n?e:e-(t+(t-1)*(s-1))+1,Math.floor((a+r-1)/r)}function d_(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+xC([n-t,0]);else{if("same"!==r)throw new NI(`Unsupport padding mode: ${r}.`);e*=t}return e}function p_(e,t){return dy(()=>(lC(t),"channelsFirst"===t?Tx(e,[0,2,3,1]):e))}function f_(e,t){return dy(()=>(lC(t),"channelsFirst"===t?Tx(e,[0,2,3,4,1]):e))}function m_(e,t,n,r=[1,1],s="valid",a,i,o=null){return dy(()=>{if(null==a&&(a="channelsLast"),lC(a),3!==e.rank&&4!==e.rank)throw new NI(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new NI(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=p_(e,a);if("causal"===s)throw new TI("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=h.conv2d({x:l,filter:t,strides:r,pad:"same"===s?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===a&&(l=Tx(l,[0,3,1,2])),l})}u_.className="Softmax",c.registerClass(u_);class g_ extends kN{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",g_.verifyArgs(t),this.rank=e,GI(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new TI(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=c_(t.kernelSize,e,"kernelSize"),this.strides=c_(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,uC(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,lC(this.dataFormat),this.activation=YT(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=sN(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=tC(t.biasConstraint),this.biasRegularizer=r_(t.biasRegularizer),this.activityRegularizer=r_(t.activityRegularizer),this.dilationRate=c_(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new NI("dilationRate must be a number or an array of a single number for 1D convolution, but received "+JSON.stringify(this.dilationRate));if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new NI("dilationRate must be a number or array of two numbers for 2D convolution, but received "+JSON.stringify(this.dilationRate))}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new NI("dilationRate must be a number or array of three numbers for 3D convolution, but received "+JSON.stringify(this.dilationRate))}static verifyArgs(e){if(AI("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!WI(e.kernelSize,"number",1,3))throw new NI(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:XT(this.activation),useBias:this.useBias,biasInitializer:rN(this.biasInitializer),biasRegularizer:t_(this.biasRegularizer),activityRegularizer:t_(this.activityRegularizer),biasConstraint:QI(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class y_ extends g_{constructor(e,t){super(e,t),this.kernel=null,y_.verifyArgs(t),this.filters=t.filters,GI(this.filters,"filters"),this.kernelInitializer=sN(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=tC(t.kernelConstraint),this.kernelRegularizer=r_(t.kernelRegularizer)}build(e){e=dN(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new NI("The channel dimension of the input should be defined. Found "+e[t]);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return dy(()=>{let t;e=hN(e);const n=null==this.bias?null:this.bias.read(),r=HI(this.activation.getClassName());if(null!=r&&2===this.rank)t=m_(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=function(e,t,n,r=1,s="valid",a,i=1){return dy(()=>{if(null==a&&(a="channelsLast"),lC(a),3!==e.shape.length)throw new NI("The input of a conv1dWithBias operation should be 3, but is "+e.shape.length+" instead.");if(3!==t.shape.length)throw new NI("The kernel for a conv1dWithBias operation should be 3, but is "+t.shape.length+" instead");if(null!=n&&1!==n.shape.length)throw new NI("The bias for a conv1dWithBias operation should be 1, but is "+t.shape.length+" instead");if("channelsFirst"===a&&(e=Tx(e,[0,2,1])),"causal"===s)throw new TI("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=Jy(e,t,r,"same"===s?"same":"valid","NWC",i);return null!=n&&(o=DC(o,n)),o})}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=m_(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new TI("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,r=[1,1,1],s="valid",a,i){return dy(()=>{if(null==a&&(a="channelsLast"),lC(a),4!==e.rank&&5!==e.rank)throw new NI("conv3dWithBias expects input to be of rank 4 or 5, but received "+e.rank+".");if(4!==t.rank&&5!==t.rank)throw new NI("conv3dWithBias expects kernel to be of rank 4 or 5, but received "+e.rank+".");let o=f_(e,a);if("causal"===s)throw new TI("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=tb(o,t,r,"same"===s?"same":"valid","NDHWC",i),null!=n&&(o=DC(o,n)),"channelsFirst"===a&&(o=Tx(o,[0,4,1,2,3])),o})}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t})}computeOutputShape(e){e=dN(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let s=0;s<n.length;++s){const e=h_(n[s],this.kernelSize[s],this.padding,this.strides[s],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[s]);t.push(e)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:rN(this.kernelInitializer),kernelRegularizer:t_(this.kernelRegularizer),kernelConstraint:QI(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new NI("Convolution layer expected config.filters to be a 'number' > 0 but got "+JSON.stringify(e.filters))}}class b_ extends y_{constructor(e){super(2,e),b_.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!WI(e.kernelSize,"number",1,2))throw new NI(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}b_.className="Conv2D",c.registerClass(b_);class x_ extends y_{constructor(e){super(3,e),x_.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new NI(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}x_.className="Conv3D",c.registerClass(x_);class w_ extends b_{constructor(e){if(super(e),this.inputSpec=[new yN({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new NI("Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode "+this.padding)}build(e){if(4!==(e=dN(e)).length)throw new NI("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new NI("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new yN({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return dy(()=>{let t=hN(e);if(4!==t.shape.length)throw new NI("Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-"+t.shape.length);const n=t.shape;let r,s;"channelsFirst"===this.dataFormat?(r=2,s=3):(r=1,s=2);const a=n[s],i=this.kernelSize[1],o=this.strides[1],l=[n[0],d_(n[r],this.strides[0],this.kernelSize[0],this.padding),d_(a,o,i,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Tx(t,[0,2,3,1]));let u=eb(t,this.kernel.read(),l,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(u=Tx(u,[0,3,1,2])),null!=this.bias&&(u=DC(u,this.bias.read(),this.dataFormat)),null!=this.activation&&(u=this.activation.apply(u)),u})}computeOutputShape(e){const t=(e=dN(e)).slice();let n,r,s;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3):(n=3,r=1,s=2);const a=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[r]=d_(t[r],o,a,this.padding),t[s]=d_(t[s],l,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}w_.className="Conv2DTranspose",c.registerClass(w_);class v_ extends x_{constructor(e){if(super(e),this.inputSpec=[new yN({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new NI("Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode "+this.padding)}build(e){if(5!==(e=dN(e)).length)throw new NI("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new NI("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new yN({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return dy(()=>{let t=hN(e);if(5!==t.shape.length)throw new NI("Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-"+t.shape.length);const n=t.shape;let r,s,a;"channelsFirst"===this.dataFormat?(a=2,r=3,s=4):(a=1,r=2,s=3);const i=n[r],o=n[s],l=this.kernelSize[1],u=this.kernelSize[2],c=this.strides[1],h=this.strides[2],d=[n[0],d_(n[a],this.strides[0],this.kernelSize[0],this.padding),d_(i,c,l,this.padding),d_(o,h,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Tx(t,[0,2,3,4,1]));let p=rb(t,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=Tx(p,[0,4,1,2,3])),null!==this.bias&&(p=DC(p,this.bias.read(),this.dataFormat)),null!==this.activation&&(p=this.activation.apply(p)),p})}computeOutputShape(e){const t=(e=dN(e)).slice();let n,r,s,a;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3,a=4):(n=4,r=1,s=2,a=3);const i=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],c=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[r]=d_(t[r],u,i,this.padding),t[s]=d_(t[s],c,o,this.padding),t[a]=d_(t[a],h,l,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}v_.className="Conv3DTranspose",c.registerClass(v_);class k_ extends y_{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new NI("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new NI("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new NI(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received `+JSON.stringify(t.padding));this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=sN(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=r_(t.depthwiseRegularizer),this.depthwiseConstraint=tC(t.depthwiseConstraint),this.pointwiseInitializer=sN(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=r_(t.pointwiseRegularizer),this.pointwiseConstraint=tC(t.pointwiseConstraint)}build(e){if((e=dN(e)).length<this.rank+2)throw new NI(`Inputs to SeparableConv${this.rank}D should have rank `+(this.rank+2)+", but received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new NI("The channel dimension of the inputs should be defined, but found "+JSON.stringify(e[t]));const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let a=0;a<this.rank;++a)s.push(1);s.push(n*this.depthMultiplier,this.filters),this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,!0,this.pointwiseConstraint),this.bias=this.useBias?this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):null,this.inputSpec=[new yN({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return dy(()=>{let t;if(e=hN(e),1===this.rank)throw new TI("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=Tx(e,[0,2,3,1])),t=ix(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=DC(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=Tx(t,[0,3,1,2])),t})}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=rN(this.depthwiseInitializer),e.pointwiseInitializer=rN(this.pointwiseInitializer),e.depthwiseRegularizer=t_(this.depthwiseRegularizer),e.pointwiseRegularizer=t_(this.pointwiseRegularizer),e.depthwiseConstraint=QI(this.depthwiseConstraint),e.pointwiseConstraint=QI(this.pointwiseConstraint),e}}k_.className="SeparableConv";class S_ extends k_{constructor(e){super(2,e)}}S_.className="SeparableConv2D",c.registerClass(S_);class I_ extends y_{constructor(e){super(1,e),I_.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!WI(e.kernelSize,"number",1,1))throw new NI(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}I_.className="Conv1D",c.registerClass(I_);class C_ extends kN{constructor(e){super(e),this.cropping="number"==typeof e.cropping?[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return dy(()=>{if(e=hN(e),"channelsLast"===this.dataFormat){const t=CC(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return CC(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=CC(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return CC(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}C_.className="Cropping2D",c.registerClass(C_);class N_ extends kN{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,lC(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,VI(rC,"InterpolationFormat",this.interpolation)}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],null==e[2]?null:this.size[0]*e[2],null==e[3]?null:this.size[1]*e[3]]:[e[0],null==e[1]?null:this.size[0]*e[1],null==e[2]?null:this.size[1]*e[2],e[3]]}call(e,t){return dy(()=>{let t=hN(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=Tx(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],s="nearest"===this.interpolation?Rw.resizeNearestNeighbor(t,[e,r]):Rw.resizeBilinear(t,[e,r]);return Tx(s,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?Rw.resizeNearestNeighbor(t,[e,r]):Rw.resizeBilinear(t,[e,r])}})}getConfig(){const e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}N_.className="UpSampling2D",c.registerClass(N_);class T_ extends g_{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=sN(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=tC(e.depthwiseConstraint),this.depthwiseRegularizer=r_(e.depthwiseRegularizer)}build(e){if((e=dN(e)).length<4)throw new NI(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new NI(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t];this.depthwiseKernel=this.addWeight("depthwise_kernel",[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier],null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.bias=this.useBias?this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):null,this.built=!0}call(e,t){return dy(()=>{let t=function(e,t,n=[1,1],r="valid",s,a){return dy(()=>{null==s&&(s="channelsLast"),lC(s);let i=p_(e,s);if(4!==e.rank)throw new NI("Input for depthwiseConv2d is required to be 4-D, but is instead "+e.rank+"-D");if(4!==t.rank)throw new NI("depthwiseKernel is required to be 4-D, but is instead "+t.rank+"-D");return i=sb(i,t,n,"same"===r?"same":"valid","NHWC",a),"channelsFirst"===s&&(i=Tx(i,[0,3,1,2])),i})}(e=hN(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=DC(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t})}computeOutputShape(e){e=dN(e);const t="channelsFirst"===this.dataFormat?e[3]:e[2],n="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=h_("channelsFirst"===this.dataFormat?e[2]:e[1],this.kernelSize[0],this.padding,this.strides[0]),s=h_(t,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],n,r,s]:[e[0],r,s,n]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=rN(this.depthwiseInitializer),e.depthwiseRegularizer=t_(this.depthwiseRegularizer),e.depthwiseConstraint=QI(this.depthwiseRegularizer),e}}function __(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new NI("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function s(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=s(t),constants:n=s(n)}}function E_(e,t,n,r=!1,s,a,i=!1,o=!1){return dy(()=>{const l=t.shape.length;if(l<3)throw new NI(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(wC(2,l));if(t=Tx(t,u),null!=a)throw new TI("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&((s=yg(yg(s,"bool"),"float32")).rank===l-1&&(s=cb(s,-1)),s=Tx(s,u)),r&&(t=sx(t,0),null!=s&&(s=sx(s,0)));const c=[];let h,d=n;const p=t.shape[0],f=Sx(t);let m,g;null!=s&&(m=Sx(s));for(let t=0;t<p;++t){const n=f[t],r=dy(()=>e(n,d));if(null==s)h=r[0],d=r[1];else{const e=dy(()=>{const e=m[t],n=Sb(Kb(e),e);return{output:wy(kb(r[0],e),kb(d[0],n)),newStates:d.map((t,s)=>wy(kb(r[1][s],e),kb(t,n)))}});h=e.output,d=e.newStates}o&&c.push(h)}return o&&(g=bx(c,1)),[h,g,d]})}T_.className="DepthwiseConv2D",c.registerClass(T_);class A_ extends kN{constructor(e){let t;if(super(e),null==e.cell)throw new NI("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new z_({cells:e.cell}):e.cell,null==t.stateSize)throw new NI("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new yN({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?wC(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map(e=>null):this.states_}setStates(e){this.states_=e}computeOutputShape(e){uN(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return dy(()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map(e=>null);return[e].concat(t)}return e})}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new TI("Constants support is not implemented in RNN yet.");uN(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new yN({shape:[t,null,...n]});const s=[e[0]].concat(e.slice(2));let a;if(this.cell.build(s),a=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!r.arraysEqual(this.stateSpec.map(e=>e.shape[e.shape.length-1]),a))throw new NI(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is `+this.cell.stateSize)}else this.stateSpec=a.map(e=>new yN({shape:[null,e]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){dy(()=>{if(!this.stateful)throw new II("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new NI("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)this.states_=Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(e=>jb([n,e])):[jb([n,this.cell.stateSize])];else if(null==e)py(this.states_),null!=this.keptStates&&(py(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(e=>jb([n,e])):this.states_[0]=jb([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new NI(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: `+e);!0===t?this.keptStates.push(this.states_.slice()):py(this.states_);for(let t=0;t<this.states_.length;++t){const s=e[t],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,i=[n,a];if(!r.arraysEqual(s.shape,i))throw new NI(`State ${t} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${s.shape}`);this.states_[t]=s}}this.states_=this.states_.map(e=>fy(e.clone()))})}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=__(e,n,r,this.numConstants);e=s.inputs,n=s.initialState,r=s.constants;let a=[],i=[];if(null!=n){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new yN({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=r&&(t.constants=r,a=a.concat(r),this.numConstants=r.length),a[0]instanceof bN){const n=[e].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return dy(()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let s=null==t?null:t.initialState;e=hN(e),null==s&&(s=this.stateful?this.states_:this.getInitialState(e));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==a)throw new NI(`RNN Layer has ${a} state(s) but was passed `+s.length+" initial state(s).");this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},o=E_((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]},e,s,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const h=this.returnSequences?u:l;return this.returnState?[h].concat(c):h})}getInitialState(e){return dy(()=>{let t=jb(e.shape);return t=Ib(t,[1,2]),t=kC(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(e=>e>1?_C(t,[1,e]):t):this.cell.stateSize>1?[_C(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===A_.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){const r=ON(t.cell,n);return new e(Object.assign(t,{cell:r}))}}A_.className="RNN",c.registerClass(A_);class R_ extends kN{}class $_ extends R_{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,GI(this.units,"units"),this.activation=YT(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=sN(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=sN(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=sN(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=r_(e.kernelRegularizer),this.recurrentRegularizer=r_(e.recurrentRegularizer),this.biasRegularizer=r_(e.biasRegularizer),this.kernelConstraint=tC(e.kernelConstraint),this.recurrentConstraint=tC(e.recurrentConstraint),this.biasConstraint=tC(e.biasConstraint),this.dropout=bC([1,xC([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=bC([1,xC([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=dN(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.bias=this.useBias?this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):null,this.built=!0}call(e,t){return dy(()=>{if(2!==(e=e).length)throw new NI(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let s;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=P_({ones:()=>Kb(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=P_({ones:()=>Kb(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=this.recurrentDropoutMask;s=AC(null!=a?kb(e,a):e,this.kernel.read()),null!=this.bias&&(s=DC(s,this.bias.read())),null!=i&&(n=kb(n,i));let o=wy(s,AC(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:XT(this.activation),useBias:this.useBias,kernelInitializer:rN(this.kernelInitializer),recurrentInitializer:rN(this.recurrentInitializer),biasInitializer:rN(this.biasInitializer),kernelRegularizer:t_(this.kernelRegularizer),recurrentRegularizer:t_(this.recurrentRegularizer),biasRegularizer:t_(this.biasRegularizer),activityRegularizer:t_(this.activityRegularizer),kernelConstraint:QI(this.kernelConstraint),recurrentConstraint:QI(this.recurrentConstraint),biasConstraint:QI(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}}$_.className="SimpleRNNCell",c.registerClass($_);class F_ extends A_{constructor(e){e.cell=new $_(e),super(e)}call(e,t){return dy(()=>(null!=this.cell.dropoutMask&&(py(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(py(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),super.call(e,{mask:null==t?null:t.mask,training:null==t?null:t.training,initialState:null==t?null:t.initialState})))}static fromConfig(e,t){return new e(t)}}F_.className="SimpleRNN",c.registerClass(F_);class D_ extends R_{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new NI("GRUCell does not support reset_after parameter set to true.");this.units=e.units,GI(this.units,"units"),this.activation=YT(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=YT(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=sN(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=sN(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=sN(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=r_(e.kernelRegularizer),this.recurrentRegularizer=r_(e.recurrentRegularizer),this.biasRegularizer=r_(e.biasRegularizer),this.kernelConstraint=tC(e.kernelConstraint),this.recurrentConstraint=tC(e.recurrentConstraint),this.biasConstraint=tC(e.biasConstraint),this.dropout=bC([1,xC([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=bC([1,xC([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=dN(e),this.kernel=this.addWeight("kernel",[e[e.length-1],3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.bias=this.useBias?this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):null,this.built=!0}call(e,t){return dy(()=>{if(2!==(e=e).length)throw new NI("GRUCell expects 2 input Tensors (inputs, h, c), got "+e.length+".");const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=P_({ones:()=>Kb(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=P_({ones:()=>Kb(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const s=this.recurrentDropoutMask;let a,i,o;0<this.dropout&&this.dropout<1&&(e=kb(e,this.dropoutMask[0]));let l=AC(e,this.kernel.read());this.useBias&&(l=DC(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=kb(r,s[0]));const u=this.recurrentKernel.read(),[c,h]=mx(u,[2*this.units,this.units],u.rank-1),d=AC(r,c),[p,f,m]=mx(l,3,l.rank-1),[g,y]=mx(d,2,d.rank-1);a=this.recurrentActivation.apply(wy(p,g)),i=this.recurrentActivation.apply(wy(f,y));const b=AC(kb(i,r),h);o=this.activation.apply(wy(m,b));const x=wy(kb(a,r),kb(wy(1,Wb(a)),o));return[x,x]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:XT(this.activation),recurrentActivation:XT(this.recurrentActivation),useBias:this.useBias,kernelInitializer:rN(this.kernelInitializer),recurrentInitializer:rN(this.recurrentInitializer),biasInitializer:rN(this.biasInitializer),kernelRegularizer:t_(this.kernelRegularizer),recurrentRegularizer:t_(this.recurrentRegularizer),biasRegularizer:t_(this.biasRegularizer),activityRegularizer:t_(this.activityRegularizer),kernelConstraint:QI(this.kernelConstraint),recurrentConstraint:QI(this.recurrentConstraint),biasConstraint:QI(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}}D_.className="GRUCell",c.registerClass(D_);class O_ extends A_{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new D_(e),super(e)}call(e,t){return dy(()=>(null!=this.cell.dropoutMask&&(py(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(py(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),super.call(e,{mask:null==t?null:t.mask,training:null==t?null:t.training,initialState:null==t?null:t.initialState})))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}O_.className="GRU",c.registerClass(O_);class M_ extends R_{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,GI(this.units,"units"),this.activation=YT(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=YT(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=sN(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=sN(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=sN(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=r_(e.kernelRegularizer),this.recurrentRegularizer=r_(e.recurrentRegularizer),this.biasRegularizer=r_(e.biasRegularizer),this.kernelConstraint=tC(e.kernelConstraint),this.recurrentConstraint=tC(e.recurrentConstraint),this.biasConstraint=tC(e.biasConstraint),this.dropout=bC([1,xC([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=bC([1,xC([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;let n;if(e=dN(e),this.kernel=this.addWeight("kernel",[e[e.length-1],4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,r=this.units;n=new((t=class extends PC{apply(t,n){const s=e.apply([r]),a=(new UC).apply([r]),i=e.apply([2*r]);return TC(TC(s,a),i)}}).className="CustomInit",t)}else n=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,n,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return dy(()=>{const n=null!=t.training&&t.training;if(3!==(e=e).length)throw new NI("LSTMCell expects 3 input Tensors (inputs, h, c), got "+e.length+".");let r=e[1];const s=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=P_({ones:()=>Kb(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=P_({ones:()=>Kb(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const a=this.recurrentDropoutMask;let i,o,l,u;0<this.dropout&&this.dropout<1&&(e=kb(e,this.dropoutMask[0]));let c=AC(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=kb(r,a[0])),c=wy(c,AC(r,this.recurrentKernel.read())),this.useBias&&(c=DC(c,this.bias.read()));const[h,d,p,f]=mx(c,4,c.rank-1);i=this.recurrentActivation.apply(h),o=this.recurrentActivation.apply(d),l=wy(kb(o,s),kb(i,this.activation.apply(p))),u=this.recurrentActivation.apply(f);const m=kb(u,this.activation.apply(l));return[m,m,l]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:XT(this.activation),recurrentActivation:XT(this.recurrentActivation),useBias:this.useBias,kernelInitializer:rN(this.kernelInitializer),recurrentInitializer:rN(this.recurrentInitializer),biasInitializer:rN(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:t_(this.kernelRegularizer),recurrentRegularizer:t_(this.recurrentRegularizer),biasRegularizer:t_(this.biasRegularizer),activityRegularizer:t_(this.activityRegularizer),kernelConstraint:QI(this.kernelConstraint),recurrentConstraint:QI(this.recurrentConstraint),biasConstraint:QI(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}}M_.className="LSTMCell",c.registerClass(M_);class L_ extends A_{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new M_(e),super(e)}call(e,t){return dy(()=>(null!=this.cell.dropoutMask&&(py(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(py(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),super.call(e,{mask:null==t?null:t.mask,training:null==t?null:t.training,initialState:null==t?null:t.initialState})))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}L_.className="LSTM",c.registerClass(L_);class z_ extends R_{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return dy(()=>{let n=(e=e).slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const s=[];let a;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=r[i],a=0===i?[e[0]].concat(n):[a[0]].concat(n),a=o.call(a,t),s.push(a.slice(1))}n=[];for(const e of s.slice().reverse())n.push(...e);return[a[0]].concat(n)})}build(e){let t;uN(e)&&(e=e[0]),e=e,this.cells.forEach((n,r)=>{dC("RNNCell_"+r,()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){const e=super.getConfig(),t=this.cells.map(e=>({className:e.getClassName(),config:e.getConfig()}));return Object.assign({},e,{cells:t})}static fromConfig(e,t,n={}){const r=[];for(const s of t.cells)r.push(ON(s,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return mN(e)}setWeights(e){const t=[];for(const n of this.cells){const r=e.splice(n.weights.length);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],r[e]])}gN(t)}}function P_(e){const{ones:t,rate:n,training:r=!1,count:s=1,dropoutFunc:a}=e,i=()=>null!=a?a(t(),n):OC(t(),n),o=()=>MC(i,t,r);return!s||s<=1?fy(o().clone()):Array(s).fill(void 0).map(o).map(e=>fy(e.clone()))}var B_,U_;z_.className="StackedRNNCells",c.registerClass(z_);class V_ extends A_{constructor(e){if(e.unroll)throw new TI("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new TI("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new yN({ndim:5})]}call(e,t){return dy(()=>{if(null!=this.cell.dropoutMask&&(py(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(py(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new NI("ConvRNN2D cell does not support constants");return super.call(e,{mask:null==t?null:t.mask,training:null==t?null:t.training,initialState:null==t?null:t.initialState})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return dy(()=>{const{stateSize:t}=this.cell,n=this.computeSingleOutputShape(e.shape),r=jb([n[0],...n.slice(2)]);return Array.isArray(t)?Array(t.length).fill(r):[r]})}resetStates(e,t=!1){dy(()=>{if(!this.stateful)throw new II("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,s=this.computeSingleOutputShape(n),a=[s[0],...s.slice(2)];if(null==n[0])throw new NI("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())this.states_=Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(()=>jb(a)):[jb(a)];else if(null==e)py(this.states_),null!=this.keptStates&&(py(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>jb(a)):this.states_[0]=jb(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new NI(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: `+e);t?this.keptStates.push(this.states_.slice()):py(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],s=a;if(!r.arraysEqual(n.shape,s))throw new NI(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map(e=>fy(e.clone()))})}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:s,strides:a,dilationRate:i}=this.cell,o="channelsFirst"===t,l=e[o?4:3],u=h_(e[o?3:2],r[0],s,a[0],i[0]),c=h_(l,r[1],s,a[1],i[1]);return[...e.slice(0,2),...o?[n,u,c]:[u,c,n]]}}V_.className="ConvRNN2D";class W_ extends M_{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:s,dataFormat:a,dilationRate:i}=e;super(Object.assign({},e,{units:t})),this.filters=t,GI(this.filters,"filters"),this.kernelSize=c_(n,2,"kernelSize"),this.kernelSize.forEach(e=>GI(e,"kernelSize")),this.strides=c_(r||1,2,"strides"),this.strides.forEach(e=>GI(e,"strides")),this.padding=s||"valid",uC(this.padding),this.dataFormat=a||"channelsLast",lC(this.dataFormat),this.dilationRate=c_(i||1,2,"dilationRate"),this.dilationRate.forEach(e=>GI(e,"dilationRate"))}build(e){var t;e=dN(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new NI("The channel dimension of the input should be defined. Found "+e[n]);const r=this.kernelSize.concat([e[n],4*this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const s=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",s,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends PC{apply(e,t){return NC([n.apply([r]),qb([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return dy(()=>{if(3!==e.length)throw new NI("ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got "+e.length+".");const n=t.training||!1,r=e[0],s=e[1],a=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=P_({ones:()=>Kb(r),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?kb(t[n],e):e;let l=o(r,i,0),u=o(r,i,1),c=o(r,i,2),h=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=P_({ones:()=>Kb(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const d=this.recurrentDropoutMask;let p=o(s,d,0),f=o(s,d,1),m=o(s,d,2),g=o(s,d,3);const[y,b,x,w]=mx(this.kernel.read(),4,3),[v,k,S,I]=this.useBias?mx(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,y,v,this.padding),u=this.inputConv(u,b,k,this.padding),c=this.inputConv(c,x,S,this.padding),h=this.inputConv(h,w,I,this.padding);const[C,N,T,_]=mx(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,C),f=this.recurrentConv(f,N),m=this.recurrentConv(m,T),g=this.recurrentConv(g,_);const E=this.recurrentActivation.apply(wy(l,p)),A=this.recurrentActivation.apply(wy(u,f)),R=wy(kb(A,a),kb(E,this.activation.apply(wy(c,m)))),$=kb(this.recurrentActivation.apply(wy(h,g)),this.activation.apply(R));return[$,$,R]})}getConfig(){const e=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(e);s<r.length;s++)t.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(e,r[s])&&(n[r[s]]=e[r[s]])}return n}(super.getConfig(),["units"]);return Object.assign({},e,{filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides})}inputConv(e,t,n,r){const s=Yy(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?DC(s,n,this.dataFormat):s}recurrentConv(e,t){return Yy(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}W_.className="ConvLSTM2DCell",c.registerClass(W_);class G_ extends V_{constructor(e){const t=new W_(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}}G_.className="ConvLSTM2D",c.registerClass(G_);class H_ extends kN{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let r=0;r<this.noiseShape.length;++r)n.push(null==this.noiseShape[r]?t[r]:this.noiseShape[r]);return n}call(e,t){return dy(()=>{this.invokeCallHook(e,t);const n=hN(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return MC(()=>OC(n,this.rate,r,this.seed),()=>n,e)}return e})}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}H_.className="Dropout",c.registerClass(H_);class j_ extends H_{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}j_.className="SpatialDropout1D",c.registerClass(j_);class q_ extends kN{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,GI(this.units,"units"),this.activation=YT(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=sN(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=sN(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=tC(e.kernelConstraint),this.biasConstraint=tC(e.biasConstraint),this.kernelRegularizer=r_(e.kernelRegularizer),this.biasRegularizer=r_(e.biasRegularizer),this.activityRegularizer=r_(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=dN(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=dN(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return dy(()=>{this.invokeCallHook(e,t);const n=hN(e),r=HI(this.activation.getClassName());let s;return null!=r?s=AC(n,this.kernel.read(),r,this.bias?this.bias.read():null):(s=AC(n,this.kernel.read()),null!=this.bias&&(s=DC(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s})}getConfig(){const e={units:this.units,activation:XT(this.activation),useBias:this.useBias,kernelInitializer:rN(this.kernelInitializer),biasInitializer:rN(this.biasInitializer),kernelRegularizer:t_(this.kernelRegularizer),biasRegularizer:t_(this.biasRegularizer),activityRegularizer:t_(this.activityRegularizer),kernelConstraint:QI(this.kernelConstraint),biasConstraint:QI(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}q_.className="Dense",c.registerClass(q_);class K_ extends kN{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=dN(e);for(const t of e.slice(1))if(null==t)throw new NI(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],yC(e,1)]}call(e,t){return dy(()=>{this.invokeCallHook(e,t);let n=hN(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=Tx(n,e)}return function(e){if(e.rank<=1)throw new NI(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],yC(e.shape,1)];return zy(e,t)}(n)})}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}K_.className="Flatten",c.registerClass(K_);class X_ extends kN{constructor(e){super(e),this.supportsMasking=!0,this.activation=YT(e.activation)}call(e,t){return dy(()=>{this.invokeCallHook(e,t);const n=hN(e);return this.activation.apply(n)})}getConfig(){const e={activation:XT(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}X_.className="Activation",c.registerClass(X_);class Z_ extends kN{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return dy(()=>{return e=hN(e),t=e,n=this.n,dy(()=>{if(2!==t.shape.length)throw new NI(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return _C(kC(t,1),[1,n,1])});var t,n})}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}Z_.className="RepeatVector",c.registerClass(Z_);class Y_ extends kN{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let s=1,a=null;for(let o=0;o<r.length;++o){const e=r[o];if(this.isUnknown(e)){if(null!==a)throw new NI("Can only specifiy one unknown dimension.");a=o}else s*=e}const i=yC(e);if(null!==a){if(0===s||i%s!=0)throw new NI(n);r[a]=i/s}else if(i!==s)throw new NI(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return dy(()=>{this.invokeCallHook(e,t);const n=hN(e),r=n.shape,s=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return zy(n,s)})}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}Y_.className="Reshape",c.registerClass(Y_);class J_ extends kN{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error("Permute constructor requires `dims` to be an Array, but received "+e.dims+" instead.");const t=wC(1,e.dims.length+1);if(!r.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new yN({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=dN(e)).slice();return this.dims.forEach((n,r)=>{t[r+1]=e[n]}),t}call(e,t){return Tx(hN(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}J_.className="Permute",c.registerClass(J_);class Q_ extends kN{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=hN(e);return ky(Gb(n,this.maskValue),-1)}call(e,t){return dy(()=>{this.invokeCallHook(e,t);const n=hN(e),r=ky(Gb(n,this.maskValue),-1,!0);return kb(n,yg(r,n.dtype))})}}Q_.className="Masking",c.registerClass(Q_);class eE extends kN{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=null==e.inputLength?[t,null]:[t].concat(FI(e.inputLength))}this.inputDim=e.inputDim,GI(this.inputDim,"inputDim"),this.outputDim=e.outputDim,GI(this.outputDim,"outputDim"),this.embeddingsInitializer=sN(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=r_(e.embeddingsRegularizer),this.activityRegularizer=r_(e.activityRegularizer),this.embeddingsConstraint=tC(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return dy(()=>this.maskZero?(e=hN(e),Gb(e,Nx(e))):null)}computeOutputShape(e){if(e=dN(e),null==this.inputLength)return[...e,this.outputDim];const t=FI(this.inputLength);if(t.length!==e.length-1)throw new NI(`"inputLength" is ${this.inputLength}, but received input shape has shape `+e);{let n=0;for(let r=0;r<t.length;++r){const s=t[r],a=e[r+1];if(null!=s&&null!=a&&s!==a)throw new NI(`"inputLength" is ${this.inputLength}, but received input shape has shape `+e);null==s&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return dy(()=>{this.invokeCallHook(e,t);let n=hN(e);"int32"!==n.dtype&&(n=vC(n,"int32"));const r=RC(this.embeddings.read(),zy(n,[n.size]));return zy(r,dN(this.computeOutputShape(n.shape)))})}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:rN(this.embeddingsInitializer),embeddingsRegularizer:t_(this.embeddingsRegularizer),activityRegularizer:t_(this.activityRegularizer),embeddingsConstraint:QI(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}eE.className="Embedding",c.registerClass(eE);class tE extends kN{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new TI}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const s=e[e.length-t.length+r],a=t[r];if(null==s||null==a||s<0||a<0)n.push(null);else if(1===s)n.push(a);else if(1===a)n.push(s);else{if(s!==a)throw new NI("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(s)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[dN(e)]),(e=e).length<2)throw new NI(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const s of e)null!=s&&null!==s[0]&&t.push(s[0]);if(t=BI(t),t.length>1)throw new NI(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let s=1;s<e.length;++s){const t=null==e[s]?null:e[s].slice(1);n=this.computeElementwiseOpOutputShape(n,t)}const r=e.map(e=>e.length);this.reshapeRequired=-1!==e.indexOf(null)||1!==BI(r).length}call(e,t){return dy(()=>{if(e=e,this.reshapeRequired){const t=[],n=e.map(e=>e.rank);if(-1===n.indexOf(null)){const r=xC(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=kC(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const a of e){const e=a.rank;if(null==e){const e=a.shape,r=e[0],s=e.slice(1).concat([r]);let i=zy(a,[r].concat(yC(e.slice(1))));i=Tx(i,[1,0]),i=zy(i,s),t.push(i),n=!0}else if(e>1){const r=wC(1,e).concat([0]);t.push(Tx(a,r)),n=!0}else t.push(a)}let r=this.mergeFunction(t);const s=r.rank;if(n)if(null==s){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=zy(Tx(zy(r,[-1,t]),[1,0]),n)}else if(s>1){const e=[s-1].concat(wC(0,s-1));r=Tx(r,e)}return r}}return this.mergeFunction(e)})}computeOutputShape(e){let t;t=null==(e=e)[0]?null:e[0].slice(1);for(let r=1;r<e.length;++r){const n=null==e[r]?null:e[r].slice(1);t=this.computeElementwiseOpOutputShape(t,n)}let n=[];for(const r of e)null!=r&&null!==r[0]&&n.push(r[0]);return n=BI(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return dy(()=>{if(null==t)return null;if(!Array.isArray(t))throw new NI("`mask` should be an Array");if(!Array.isArray(e))throw new NI("`inputs` should be an Array");if(t.length!==e.length)throw new NI(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(e=>null==e))return null;let n=(t=t.map(e=>null==e?e:cb(e,0)))[0];for(let e=1;e<t.length-1;++e)n=Nb(n,t[e]);return n})}}class nE extends tE{constructor(e){super(e)}mergeFunction(e){return dy(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=wy(t,e[n]);return t})}}nE.className="Add",c.registerClass(nE);class rE extends tE{constructor(e){super(e)}mergeFunction(e){return dy(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=kb(t,e[n]);return t})}}rE.className="Multiply",c.registerClass(rE);class sE extends tE{constructor(e){super(e)}mergeFunction(e){return dy(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=wy(t,e[n]);return kb(1/e.length,t)})}}sE.className="Average",c.registerClass(sE);class aE extends tE{constructor(e){super(e)}mergeFunction(e){return dy(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Ab(t,e[n]);return t})}}aE.className="Maximum",c.registerClass(aE);class iE extends tE{constructor(e){super(e)}mergeFunction(e){return dy(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=$b(t,e[n]);return t})}}iE.className="Minimum",c.registerClass(iE);class oE extends tE{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new NI("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const r of e)if(null!=r){t=!1;break}if(t)return;const n=[];for(let s=0;s<e.length;++s){const t=e[s].slice();t.splice(this.axis,1);let a=!1;for(const e of n)if(r.arraysEqual(e,t)){a=!0;break}a||n.push(t)}if(n.length>1)throw new NI("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return dy(()=>NC(e,this.axis))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new NI("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const s of t.slice(1)){if(null==n[r]||null==s[r]){n[r]=null;break}n[r]+=s[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new NI("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new NI("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new NI(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return dy(()=>{let n=!0;if(t.forEach(e=>{null==e||(n=!1)}),n)return null;const r=[];for(let a=0;a<e.length;++a)r.push(null==t[a]?yg(Kb(e[a]),"bool"):t[a].rank<e[a].rank?cb(t[a],-1):t[a]);const s=jy(r,this.axis);return vy(s,-1,!1)})}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function lE(e,t){for(;e<0;)e+=t;return e}oE.className="Concatenate",c.registerClass(oE);class uE extends tE{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){r.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new TI("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(t,n);if(t[s[0]]!==n[s[1]])throw new NI(`Dimension incompatibility: ${t[s[0]]} !== ${n[s[1]]}`)}mergeFunction(e){if(2!==e.length)throw new NI(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],s=e[1];return t=Array.isArray(this.axes)?this.axes.map((t,n)=>lE(t,e[n].shape.length)):[lE(this.axes,n.shape.length),lE(this.axes,s.shape.length)],this.normalize&&(n=MN(n,t[0]),s=MN(s,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new TI("batchDot is not implemented for tensors of 4D or higher rank yet");if(r.assert(e.shape.length>=2,()=>"batchDot requires the rank of x to be >= 2, but got "+e.shape.length),r.assert(e.shape.length>=2,()=>"batchDot requires the rank of y to be >= 2, but got "+t.shape.length),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new TI("batchDot is not implemented for complex64-type Tensors yet.");const s=e.shape.length,a=t.shape.length;null==n&&(n=[s-1,a-2]);const i=n;return dy(()=>{let n,r;if(s>a){n=s-a;const e=[];for(let t=0;t<n;++t)e.push(1);t=zy(t,t.shape.concat(e))}else if(a>s){n=a-s;const t=[];for(let e=0;e<n;++e)t.push(1);e=zy(e,e.shape.concat(t))}else n=0;if(r=2===e.shape.length&&2===t.shape.length?i[0]===i[1]?Ib(kb(e,t),i[0]):Ib(kb(Tx(e,[1,0]),t),i[1]):Tb(e,t,i[0]!==e.shape.length-1,i[1]===t.shape.length-1),n>0){let e;e=s>a?s+a-3:s-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);r=yx(r,t)}return 1===r.shape.length&&(r=cb(r,1)),r})}(n,s,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[lE(this.axes,e.length),lE(this.axes,t.length)],n}computeOutputShape(e){r.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new TI("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(t,n);t.splice(s[0],1),n.splice(s[1],1),n.splice(0,1);const a=t.concat(n);return 1===a.length&&a.push(1),a}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}uE.className="Dot",c.registerClass(uE);class cE extends kN{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return dy(()=>{this.invokeCallHook(e,t);const n=hN(e);return MC(()=>wy(EC(n.shape,0,this.stddev),n),()=>n,t.training||!1)})}}cE.className="GaussianNoise",c.registerClass(cE);class hE extends kN{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return dy(()=>{this.invokeCallHook(e,t);const n=hN(e);return this.rate>0&&this.rate<1?MC(()=>{const e=Math.sqrt(this.rate/(1-this.rate));return kb(n,EC(n.shape,1,e))},()=>n,t.training||!1):n})}}hE.className="GaussianDropout",c.registerClass(hE);class dE extends kN{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||hN(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return dy(()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e);return MC(()=>{const t=hN(e),r=-1.7580993408473766;let s=yb(nx(n),this.rate);s=vC(s,"float32");const a=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-a*r*this.rate,o=wy(kb(t,s),kb(wy(s,-1),r));return wy(kb(o,a),i)},()=>hN(e),t.training||!1)}return e})}}function pE(e,t,n,r,s,a=.001){let i;if(2===e.rank)i=Vy(e,t,n,r,s,a);else if(3===e.rank)i=Wy(e,t,n,r,s,a);else{if(4!==e.rank)throw new TI(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=Gy(e,t,n,r,s,a)}return i}dE.className="AlphaDropout",c.registerClass(dE);class fE extends kN{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=sN(e.betaInitializer||"zeros"),this.gammaInitializer=sN(e.gammaInitializer||"ones"),this.movingMeanInitializer=sN(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=sN(e.movingVarianceInitializer||"ones"),this.betaConstraint=tC(e.betaConstraint),this.gammaConstraint=tC(e.gammaConstraint),this.betaRegularizer=r_(e.betaRegularizer),this.gammaRegularizer=r_(e.gammaRegularizer)}build(e){e=dN(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new NI(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape `+JSON.stringify(e)+".");this.inputSpec=[new yN({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return dy(()=>{const n=null!=t.training&&t.training,s=hN(e),a=s.shape,i=a.length,o=wC(0,i),l=this.axis>=0?this.axis:this.axis+i;o.splice(l,1);const u=EI(1,i);u[l]=a[l];const c=o.slice();c.sort();const h=!r.arraysEqual(c,wC(0,i).slice(0,i-1));if(!n)return(()=>{if(h){const e=zy(this.movingMean.read(),u),t=zy(this.movingVariance.read(),u),n=this.center?zy(this.beta.read(),u):null,r=this.scale?zy(this.gamma.read(),u):null;return pE(s,e,t,n,r,this.epsilon)}return pE(s,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[d,p,f]=function(e,t,n,s,a=.001){return r.arraysEqual(s.slice().sort(),wC(0,e.rank-1))?function(e,t,n,r,s=.001){return dy(()=>{const a=Vb(e,r),i=a.mean,o=a.variance;return[pE(e,i,o,n,t,s),i,o]})}(e,t,n,s,a):function(e,t,n,r,s=.001){return dy(()=>{const a=Vb(e,r),i=a.mean,o=a.variance,l=[];for(const t of wC(0,e.rank))-1!==r.indexOf(t)?l.push(1):l.push(e.shape[t]);const u=zy(i,l),c=zy(o,l),h=null==t?null:zy(t,l),d=null==n?null:zy(n,l);return[pE(e,u,c,d,h,s),i,o]})}(e,t,n,s,a)}(s,this.gamma.read(),this.beta.read(),o,this.epsilon),m=(e,t,n)=>{dy(()=>{const r=1-n,s=e.read(),a=kb(Sb(s,t),r);e.write(Sb(s,a))})};return(()=>{m(this.movingMean,p,this.momentum),m(this.movingVariance,f,this.momentum)})(),d})}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:rN(this.betaInitializer),gammaInitializer:rN(this.gammaInitializer),movingMeanInitializer:rN(this.movingMeanInitializer),movingVarianceInitializer:rN(this.movingVarianceInitializer),betaRegularizer:t_(this.betaRegularizer),gammaRegularizer:t_(this.gammaRegularizer),betaConstraint:QI(this.betaConstraint),gammaConstraint:QI(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}fE.className="BatchNormalization",c.registerClass(fE);class mE extends kN{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error("Expected axis to be an integer, but received "+this.axis)}else{if(!Array.isArray(this.axis))throw new Error("Expected axis to be an integer or an array of integers, but received "+JSON.stringify(this.axis));for(const e of this.axis)if(!Number.isInteger(e))throw new Error("Expected axis to be an array of integers, but received "+JSON.stringify(this.axis))}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=sN(e.betaInitializer||"zeros"),this.gammaInitializer=sN(e.gammaInitializer||"ones"),this.betaRegularizer=r_(e.betaRegularizer),this.gammaRegularizer=r_(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=dN(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=t);for(const r of this.axis)if(r<0||r>=t)throw new Error("Invalid axis: "+r);if(this.axis.length!==BI(this.axis).length)throw new Error("Found duplicate axes in: "+this.axis);const n=this.axis.map(t=>e[t]);this.gamma=this.scale?this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):null,this.beta=this.center?this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):null,this.built=!0}call(e,t){const n=hN(e),r=n.shape,s=r.length;return dy(()=>{let{mean:e,variance:t}=Vb(n,this.axis,!0);const a=EI(1,s);for(const n of this.axis)a[n]=r[n];const i=e=>null!=e&&e.shape.length!==s?zy(e,a):e;let o=i(this.gamma.read()),l=i(this.beta.read());const u=[],c=[];for(let n=0;n<s;++n)-1!==this.axis.indexOf(n)?(u.push(r[n]),c.push(1)):(u.push(1),c.push(r[n]));return e=hb(e,u),t=hb(t,u),o=hb(o,c),l=hb(l,c),pE(n,e,t,l,o,this.epsilon)})}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:rN(this.betaInitializer),gammaInitializer:rN(this.gammaInitializer),betaRegularizer:t_(this.betaRegularizer),gammaRegularizer:t_(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}mE.className="LayerNormalization",c.registerClass(mE);class gE extends kN{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new NI(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new NI(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new NI(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new yN({ndim:4})]}computeOutputShape(e){let t,n;return e=dN(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return dy(()=>{return t=hN(e),n=this.padding,r=this.dataFormat,dy(()=>{if(4!==t.rank)throw new NI("temporalPadding expects input tensor to be 4-D, but received a "+t.rank+"-D tensor.");if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new NI("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new NI(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],Xb(t,e)});var t,n,r})}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function yE(e,t,n,r,s,a){return dy(()=>{let i;lC(s),cC(a),uC(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),e=p_(e,s);const o="same"===r?"same":"valid";return i="max"===a?_b(e,t,n,o):Py(e,t,n,o),"channelsFirst"===s&&(i=Tx(i,[0,3,1,2])),i})}function bE(e,t,n,r,s,a){return dy(()=>{let i;lC(s),cC(a),uC(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),e=f_(e,s);const o="same"===r?"same":"valid";return i="max"===a?Eb(e,t,n,o):By(e,t,n,o),"channelsFirst"===s&&(i=Tx(i,[0,4,1,2,3])),i})}gE.className="ZeroPadding2D",c.registerClass(gE);class xE extends kN{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new NI("poolSize for 1D convolutional layer must be a number or an Array of a single number, but received "+JSON.stringify(e.poolSize));this.poolSize=e.poolSize}if(GI(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new NI("strides for 1D convolutional layer must be a number or an Array of a single number, but received "+JSON.stringify(e.strides));this.strides=e.strides}GI(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,uC(this.padding),this.inputSpec=[new yN({ndim:3})]}computeOutputShape(e){const t=h_((e=dN(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return dy(()=>{this.invokeCallHook(e,t),e=kC(hN(e),2);const n=this.poolingFunction(hN(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return yx(n,[2])})}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class wE extends xE{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return lC(s),uC(r),yE(e,t,n,r,s,"max")}}wE.className="MaxPooling1D",c.registerClass(wE);class vE extends xE{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return lC(s),uC(r),yE(e,t,n,r,s,"avg")}}vE.className="AveragePooling1D",c.registerClass(vE);class kE extends kN{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new NI("If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length "+e.strides.length+".");this.strides=e.strides}else this.strides=[e.strides,e.strides];GI(this.poolSize,"poolSize"),GI(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,lC(this.dataFormat),uC(this.padding),this.inputSpec=[new yN({ndim:4})]}computeOutputShape(e){e=dN(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=h_(t,this.poolSize[0],this.padding,this.strides[0]),n=h_(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return dy(()=>(this.invokeCallHook(e,t),this.poolingFunction(hN(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class SE extends kE{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return lC(s),uC(r),yE(e,t,n,r,s,"max")}}SE.className="MaxPooling2D",c.registerClass(SE);class IE extends kE{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return lC(s),uC(r),yE(e,t,n,r,s,"avg")}}IE.className="AveragePooling2D",c.registerClass(IE);class CE extends kN{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new NI("If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length "+e.strides.length+".");this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];GI(this.poolSize,"poolSize"),GI(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,lC(this.dataFormat),uC(this.padding),this.inputSpec=[new yN({ndim:5})]}computeOutputShape(e){e=dN(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=h_(t,this.poolSize[0],this.padding,this.strides[0]),n=h_(n,this.poolSize[1],this.padding,this.strides[1]),r=h_(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return dy(()=>(this.invokeCallHook(e,t),this.poolingFunction(hN(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class NE extends CE{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return lC(s),uC(r),bE(e,t,n,r,s,"max")}}NE.className="MaxPooling3D",c.registerClass(NE);class TE extends CE{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return lC(s),uC(r),bE(e,t,n,r,s,"avg")}}TE.className="AveragePooling3D",c.registerClass(TE);class _E extends kN{constructor(e){super(e),this.inputSpec=[new yN({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new TI}}class EE extends _E{constructor(e){super(e||{})}call(e,t){return dy(()=>{const t=hN(e);return Rb(t,1)})}}EE.className="GlobalAveragePooling1D",c.registerClass(EE);class AE extends _E{constructor(e){super(e||{})}call(e,t){return dy(()=>{const t=hN(e);return vb(t,1)})}}AE.className="GlobalMaxPooling1D",c.registerClass(AE);class RE extends kN{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,lC(this.dataFormat),this.inputSpec=[new yN({ndim:4})]}computeOutputShape(e){return e=e,"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new TI}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class $E extends RE{call(e,t){return dy(()=>{const t=hN(e);return Rb(t,"channelsLast"===this.dataFormat?[1,2]:[2,3])})}}$E.className="GlobalAveragePooling2D",c.registerClass($E);class FE extends RE{call(e,t){return dy(()=>{const t=hN(e);return vb(t,"channelsLast"===this.dataFormat?[1,2]:[2,3])})}}FE.className="GlobalMaxPooling2D",c.registerClass(FE);class DE extends kN{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=ON(t.layer,n);delete t.layer;const s={layer:r};return Object.assign(s,t),new e(s)}}class OE extends DE{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=dN(e)).length<3)throw new NI("TimeDistributed layer expects an input shape >= 3D, but received input shape "+JSON.stringify(e));this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=dN(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t);return[n[0],e[1]].concat(n.slice(1))}call(e,t){return dy(()=>E_((e,n)=>[hN(this.layer.call(e,t)),[]],e=hN(e),[],!1,null,null,!1,!0)[1])}}OE.className="TimeDistributed",c.registerClass(OE);class ME extends DE{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=ON(n),t.goBackwards=!0!==t.goBackwards;const r={};if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=ON(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,VI(iC,"BidirectionalMergeMode",this.mergeMode),e.weights)throw new TI("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=Math.floor(e.length/2);this.forwardLayer.setWeights(e.slice(0,t)),this.backwardLayer.setWeights(e.slice(t))}computeOutputShape(e){let t,n,r,s=this.forwardLayer.computeOutputShape(e);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),s=s,this.returnState?(r=s.slice(1),t=s[0]):t=s[0],t=t,"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):$I(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=__(e,n,r,this.numConstants);if(e=s.inputs,n=s.initialState,r=s.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const a=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new NI("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);const r=n.map(e=>new yN({shape:e.shape}));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new TI("Support for constants in Bidirectional layers is not implemented yet.");const o=a[0]instanceof bN;for(const l of a)if(l instanceof bN!==o)throw new NI("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return dy(()=>{const n=t.initialState;let r,s,a,i;if(null==n)r=this.forwardLayer.call(e,t),s=this.backwardLayer.call(e,t);else{const a=n.slice(0,n.length/2),i=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),s=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(r)&&(a=r.slice(1).concat(s.slice(1))),r=r[0],s=s[0]),this.returnSequences&&(s=sx(s,1)),"concat"===this.mergeMode?i=NC([r,s]):"sum"===this.mergeMode?i=wy(r,s):"ave"===this.mergeMode?i=kb(.5,wy(r,s)):"mul"===this.mergeMode?i=kb(r,s):null==this.mergeMode&&(i=[r,s]),this.returnState?null==this.mergeMode?i.concat(a):[i].concat(a):i})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){dC(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),dC(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map(e=>null);return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=ON(t.layer);if(delete t.layer,null!=t.numConstants)throw new TI("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}ME.className="Bidirectional",c.registerClass(ME),tf().registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")}),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(B_||(B_={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(U_||(U_={}));const LE=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],zE=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],PE=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],BE=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],UE=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],VE=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],WE=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],GE=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],HE=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],jE=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],qE=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],KE=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],XE=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],ZE=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],YE=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],JE=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],QE=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],eA=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],tA=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];function nA(e){return null===e?null:rA(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function rA(e){let t=!1;if(tf().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:r}=n(4);t=e instanceof r}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof qf)&&!(e instanceof Promise)&&!t)}function sA(e){return e instanceof qf?{value:e.clone(),recurse:!1}:rA(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}Sm({addN_:function(e){fp(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),fp(e.length>=1,()=>"Must pass at least one tensor to tf.addN(), but got "+e.length);const t=e.map((e,t)=>vm(e,"tensors"+t,"addN")),n=t[0];return t.forEach(e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(e=>{if(!wp(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}),dm.runKernel("AddN",t)}}),Sm({maxPoolWithArgmax_:function(e,t,n,r,s=!1){const a=vm(e,"x","maxPoolWithArgmax"),i=dm.runKernel("MaxPoolWithArgmax",{x:a},{filterSize:t,strides:n,pad:r,includeBatchInIndex:s});return{result:i[0],indexes:i[1]}}}),Sm({multinomial_:function(e,t,n,r=!1){const s=vm(e,"logits","multinomial"),a=s.size,i=s.rank;if(a<2)throw new Error("Error in multinomial: you need at least 2 outcomes, but got "+a+".");if(i>2)throw new Error("Rank of probabilities must be 1 or 2, but is "+i);n=n||Math.random();const o=1===i?zy(s,[1,-1]):s,l=dm.runKernel("Multinomial",{logits:o},{numSamples:t,seed:n,normalized:r});return 1===i?zy(l,[l.size]):l}}),Sm({einsum_:function(e,...t){const n=t.map((e,t)=>vm(e,"tensors"+t,"einsum"));return dm.runKernel("Einsum",n,{equation:e})}}),Sm({sparseToDense_:function(e,t,n,r=0){const s=vm(e,"sparseIndices","sparseToDense","int32"),a=vm(t,"sparseValues","sparseToDense"),i=vm(r,"defaultValue","sparseToDense",a.dtype);return function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const s=e.rank>0?e.shape[0]:1,a=e.rank>1?e.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);if(0!==t.rank&&(1!==t.rank||t.size!==s))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${s}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(s,a,n,i),dm.runKernel("SparseToDense",{sparseIndices:s,sparseValues:a,defaultValue:i},{outputShape:n})}}),Sm({denseBincount_:function(e,t,n,r=!1){const s=vm(e,"x","denseBincount"),a=vm(t,"weights","denseBincount");return fp("int32"===s.dtype,()=>"Error in denseBincount: input dtype must be int32, but got "+s.dtype),fp(s.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`),fp(n>=0,()=>`size must be non-negative, but got ${n}.`),fp(a.size===s.size||0===a.size,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: `+a.shape+"."),dm.runKernel("DenseBincount",{x:s,weights:a},{size:n,binaryOutput:r})}}),Sm({scatterND_:function(e,t,n){const r=vm(e,"indices","scatterND","int32"),s=vm(t,"updates","scatterND");return nv(s,r,n),dm.runKernel("ScatterNd",{indices:r,updates:s},{shape:n})}}),Sm({gatherND_:function(e,t){const n=vm(t,"indices","gatherND","int32"),r=vm(e,"x","gatherND","string_or_numeric");return dm.runKernel("GatherNd",{params:r,indices:n})}}),Sm({broadcastArgs_:function(e,t){const n=vm(e,"s0","broadcastArgs","int32"),r=vm(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error("broadcastArgs(): first input must be a vector (rank=1). Has rank "+n.rank);if(1!==r.rank)throw new Error("broadcastArgs(): second input must be a vector (rank=1). Has rank "+r.rank);return dm.runKernel("BroadcastArgs",{s0:n,s1:r})}});class aA{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class iA extends aA{constructor(){super(iA.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let r=0;r<n;r++)t[r]=this.get(this.wrap(this.begin+r));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}iA.INITIAL_CAPACITY=32;class oA{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new gA(this,e)}filter(e){return new fA(this,e)}map(e){return new mA(this,e)}mapAsync(e){return new yA(this,e)}serialMapAsync(e){return new yA(this,e).serial()}flatmap(e){return new xA(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(e=>!0===e)}rowMajorBatch(e,t=!0){return new pA(this,e,t)}columnMajorBatch(e,t=!0,n=nA){return this.rowMajorBatch(e,t).map(e=>function(e,t=nA){return function e(t,n,r=new Set){const s=t[0];if(r.has(s))throw new Error("Circular references are not supported.");const a=n(t);if(a.recurse&&null!==a.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(a.recurse){if(rA(s)){const a=Array.isArray(s)?[]:{};r.add(s);for(const i in s){const s=e(t.map(e=>e[i]),n,r);a[i]=s}return r.delete(s),a}throw new Error("Can't recurse into non-iterable type: "+s)}return a.value}(e,t)}(e,n))}concatenate(e,t){return new wA(new lA([this,e]),t)}take(e){return e<0||null==e?this:new dA(this,e)}skip(e){return e<0||null==e?this:new hA(this,e)}prefetch(e){return new kA(this,e)}shuffle(e,t){return new SA(this,e,t)}serial(){return new cA(this)}}class lA extends oA{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:(t=e,function e(t,n,r=new Map,s=new Set){if(null==t)return null;if("function"==typeof Blob&&t instanceof Blob)return t.slice();if(s.has(t))throw new Error("Circular references are not supported.");if(r.has(t))return r.get(t);const a=n(t);if(a.recurse&&null!==a.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(a.recurse){if(rA(t)){const a=Array.isArray(t)?[]:{};s.add(t);for(const i in t){const o=e(t[i],n,r,s);a[i]=o}return s.delete(t),t.__proto__&&(a.__proto__=t.__proto__),a}throw new Error("Can't recurse into non-iterable type: "+t)}return r.set(t,a.value),a.value}(t,sA)),done:!1};var t}}class uA extends oA{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message="Error thrown while iterating through a dataset: "+e.message,e}}}class cA extends oA{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Serial"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}}class hA extends oA{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Skip"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;py(e.value)}return this.upstream.next()}}class dA extends oA{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return this.upstream.summary()+" -> Take"}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class pA extends oA{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> RowMajorBatch"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class fA extends oA{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Filter"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;py(e.value)}}}class mA extends oA{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return this.upstream.summary()+" -> Map"}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=s.getTensorsInContainer(e.value),n=this.transform(e.value),r=s.getTensorsInContainer(n);for(const a of t)s.isTensorInList(a,r)||a.dispose();return{value:n,done:!1}}}class gA extends oA{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> handleErrors"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class yA extends oA{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return this.upstream.summary()+" -> AsyncMap"}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=s.getTensorsInContainer(e.value),n=await this.transform(e.value),r=s.getTensorsInContainer(n);for(const a of t)s.isTensorInList(a,r)||a.dispose();return{value:n,done:!1}}}class bA extends oA{constructor(){super(),this.outputQueue=new iA,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!(await this.pump()))return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class xA extends bA{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return this.upstream.summary()+" -> Flatmap"}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=s.getTensorsInContainer(e.value),n=this.transform(e.value),r=s.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(const a of t)s.isTensorInList(a,r)||a.dispose();return!0}}class wA extends oA{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}var vA;!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(vA||(vA={}));class kA extends oA{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new aA(t)}summary(){return this.upstream.summary()+" -> Prefetch"}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class SA extends kA{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=Jb.alea(n||r.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class IA{constructor(){this.size=null}batch(e,t=!0){const n=this;let s;return r.assert(e>0,()=>"batchSize needs to be positive, but it is\n      "+e),s=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),CA(async()=>(await n.iterator()).columnMajorBatch(e,t,NA),s)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,CA(async()=>(await t.iterator()).concatenate(await e.iterator()),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,CA(async()=>(await t.iterator()).filter(t=>dy(()=>e(t))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return CA(async()=>(await t.iterator()).map(t=>dy(()=>e(t))),this.size)}mapAsync(e){const t=this;return CA(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return CA(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,CA(async()=>{return n=(r=async()=>({value:await t.iterator(),done:!1}),new uA(r)).take(e),new wA(n,void 0);var n,r},n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,CA(async()=>(await t.iterator()).skip(e),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const s=this,a=Jb.alea(t||r.now().toString());return CA(async()=>{let t=a.int32();return n&&(t+=a.int32()),(await s.iterator()).shuffle(e,t.toString())},this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,CA(async()=>(await t.iterator()).take(e),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function CA(e,t=null){return new class extends IA{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function NA(e){return null===e?null:null==(t=e[0])||null===(n=t)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(t)||"object"==typeof t&&t instanceof qf||r.isTypedArray(t)?{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof qf?bx(e):Nm(e)}(e),recurse:!1}:{value:null,recurse:!0};var t,n}function TA(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&r.assert("complex64"!==e.dtype,()=>t+" does not support complex64 tensors in the CPU backend.")})}IA.MAX_BUFFER_SIZE=1e4,Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");const _A=f.whereImpl;class EA extends sp{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new rp(this,cy())}nextDataId(){return EA.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,tf().get("IS_NODE")&&p.warn("\n============================\nHi there \u{1f44b}. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let s;if("string"===t&&null!=n&&n.length>0&&r.isString(n[0])){const a=n.map(e=>r.encodeString(e));s=this.write(a,e,t)}else s=this.write(n,e,t);return{dataId:s,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,r,s){this.data.set(e,{values:t,dtype:r,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){const e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return p.mergeRealAndImagArrays(e,t)}return this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map(e=>r.decodeString(e))}catch(s){throw new Error("Failed to decode encoded string bytes into utf-8")}return gg(e.shape,e.dtype,n)}makeOutput(e,t,n){const r=this.write(e,t,n);return cy().makeTensorFromDataId(r,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=r.now();return e(),{kernelMs:r.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){TA([e],"where");const t=this.readSync(e.dataId);return _A(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function AA(e,t,n){return({inputs:s,attrs:a,backend:i})=>{const{x:o}=s;if(TA(o,e),"string"===o.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const l=i,u=l.data.get(o.dataId).values,c=r.sizeFromShape(o.shape),h=n||o.dtype,d=r.getArrayFromDType(h,c);for(let e=0;e<c;++e)d[e]=t(u[e],a);return l.makeTensorInfo(o.shape,h,d)}}function RA(e,t,n){return({inputs:r,attrs:s,backend:a})=>{const{x:i}=r;if(TA(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=a,l=o.data.get(i.dataId).values,u=n||i.dtype,c=t(l,u,s);return o.makeTensorInfo(i.shape,u,c)}}EA.nextDataId=0,my("cpu",()=>new EA,1);const $A=AA("Elu",e=>e>=0?e:Math.exp(e)-1),FA={kernelName:"Elu",backendName:"cpu",kernelFunc:$A};function DA(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const OA={kernelName:"Identity",backendName:"cpu",kernelFunc:DA};function MA(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{alpha:i}=s;TA([a],"leakyRelu");const o=r.sizeFromShape(a.shape),l=n.data.get(a.dataId).values,u=r.getTypedArrayFromDType("float32",o);for(let r=0;r<l.length;r++)u[r]=l[r]<0?i*l[r]:l[r];return n.makeTensorInfo(a.shape,"float32",u)}const LA={kernelName:"LeakyRelu",backendName:"cpu",kernelFunc:MA};function zA(e){return(t,n,s,a,i)=>{const o=p.assertAndGetBroadcastShape(t,n),l=o.length,u=r.computeStrides(o),c=r.sizeFromShape(o),h=r.getTypedArrayFromDType(i,c),d=t.length,f=n.length,m=r.computeStrides(t),g=r.computeStrides(n),y=p.getBroadcastDims(t,o),b=p.getBroadcastDims(n,o);if(y.length+b.length===0)for(let r=0;r<h.length;++r)h[r]=e(s[r%s.length],a[r%a.length]);else for(let p=0;p<h.length;++p){const t=r.indexToLoc(p,l,u),n=t.slice(-d);y.forEach(e=>n[e]=0);const i=r.locToIndex(n,d,m),o=t.slice(-f);b.forEach(e=>o[e]=0);const c=r.locToIndex(o,f,g);h[p]=e(s[i],a[c])}return[h,o]}}const PA=zA((e,t)=>e<0?t*e:e);function BA(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t;TA([r,s],"prelu");const a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,[o,l]=PA(r.shape,s.shape,a,i,"float32");return n.makeTensorInfo(l,"float32",o)}const UA={kernelName:"Prelu",backendName:"cpu",kernelFunc:BA},VA=AA("Relu",e=>Math.max(0,e)),WA={kernelName:"Relu",backendName:"cpu",kernelFunc:VA},GA=AA("Relu6",e=>Math.min(Math.max(0,e),6)),HA={kernelName:"Relu6",backendName:"cpu",kernelFunc:GA};function jA(e){return(t,n,s)=>{const a=r.getTypedArrayFromDType(n,t.length);for(let r=0;r<t.length;++r)a[r]=e(t[r],s);return a}}const qA=jA(e=>1/(1+Math.exp(-e))),KA=AA("Sigmoid",e=>1/(1+Math.exp(-e))),XA={kernelName:"Sigmoid",backendName:"cpu",kernelFunc:KA};function ZA(e,t,n,r,s){if("linear"===n)return DA({inputs:{x:t},backend:e});if("relu"===n)return VA({inputs:{x:t},backend:e});if("elu"===n)return $A({inputs:{x:t},backend:e});if("relu6"===n)return GA({inputs:{x:t},backend:e});if("prelu"===n)return BA({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return MA({inputs:{x:t},backend:e,attrs:{alpha:s}});if("sigmoid"===n)return KA({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function YA(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",a),imag:n.makeTensorInfo(s.shape,"float32",i)},o}const JA={kernelName:"Complex",backendName:"cpu",kernelFunc:YA};function QA(e,t,n="float32"){if("complex64"===n)return YA({inputs:{real:QA(e,t,"float32"),imag:QA(e,t,"float32")},backend:e});const s=r.makeZerosTypedArray(r.sizeFromShape(t),n);return e.makeTensorInfo(t,n,s)}function eR(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.real,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const tR={kernelName:"Real",backendName:"cpu",kernelFunc:eR};function nR(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{dtype:i}=s;if("complex64"===i){if("complex64"===a.dtype)return DA({inputs:{x:a},backend:n});const e=QA(n,a.shape,a.dtype),t=nR({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),r=YA({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===a.dtype){const e=eR({inputs:{input:a},backend:n}),t=nR({inputs:{x:e},backend:n,attrs:{dtype:i}});return n.disposeIntermediateTensorInfo(e),t}if(!r.hasEncodingLoss(a.dtype,i)){const e=DA({inputs:{x:a},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:i}}if("int32"===i){const e=n.data.get(a.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(a.shape,"int32",t)}if("bool"===i){const e=n.data.get(a.dataId).values,t=r.toTypedArray([0],a.dtype),[s,i]=zA((e,t)=>e!==t?1:0)(a.shape,[],e,t,"bool");return n.makeTensorInfo(i,"bool",s)}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${i}`)}const rR={kernelName:"Cast",backendName:"cpu",kernelFunc:nR};function sR(e,t,n,r){return null==n?({inputs:n,backend:s})=>{const{a,b:i}=n,o=s;TA([a,i],e);const l=o.data.get(a.dataId).values,u=o.data.get(i.dataId).values,c="string"===a.dtype?p.fromUint8ToStringArray(l):l,h="string"===a.dtype?p.fromUint8ToStringArray(u):u,d=r||a.dtype,[f,m]=t(a.shape,i.shape,c,h,d);return o.makeTensorInfo(m,d,f)}:({inputs:e,backend:s})=>{const{a,b:i}=e,o=s;if("complex64"===a.dtype||"complex64"===i.dtype){const e=nR({inputs:{x:a},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),r=t.complexTensorInfos.imag,s=o.data.get(t.complexTensorInfos.real.dataId).values,l=o.data.get(r.dataId).values,u=nR({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),c=o.data.get(u.dataId),h=c.complexTensorInfos.imag,d=o.data.get(c.complexTensorInfos.real.dataId).values,p=o.data.get(h.dataId).values,[f,m,g]=n(a.shape,i.shape,s,l,d,p),y=o.makeTensorInfo(g,"float32",f),b=o.makeTensorInfo(g,"float32",m),x=YA({inputs:{real:y,imag:b},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(u),o.disposeIntermediateTensorInfo(y),o.disposeIntermediateTensorInfo(b),x}{const e=o.data.get(a.dataId).values,n=o.data.get(i.dataId).values,s=r||a.dtype,[l,u]=t(a.shape,i.shape,e,n,s);return o.makeTensorInfo(u,s,l)}}}function aR(e){return(t,n,s,a,i,o)=>{const l=p.assertAndGetBroadcastShape(t,n),u=r.sizeFromShape(l),c=l.length,h=r.computeStrides(l),d=r.getTypedArrayFromDType("float32",u),f=r.getTypedArrayFromDType("float32",u),m=p.getBroadcastDims(t,l),g=p.getBroadcastDims(n,l),y=p.mergeRealAndImagArrays(s,a),b=p.mergeRealAndImagArrays(i,o),x=t.length,w=r.computeStrides(t),v=n.length,k=r.computeStrides(n);if(m.length+g.length===0)for(let r=0;r<d.length;r++){const t=r%y.length,n=r%b.length,s=e(y[2*t],y[2*t+1],b[2*n],b[2*n+1]);d[r]=s.real,f[r]=s.imag}else for(let p=0;p<d.length;p++){const t=r.indexToLoc(p,c,h),n=t.slice(-x);m.forEach(e=>n[e]=0);const s=r.locToIndex(n,x,w),a=t.slice(-v);g.forEach(e=>a[e]=0);const i=r.locToIndex(a,v,k),o=e(y[2*s],y[2*s+1],b[2*i],b[2*i+1]);d[p]=o.real,f[p]=o.imag}return[d,f,l]}}const iR=zA((e,t)=>e+t),oR=aR((e,t,n,r)=>({real:e+n,imag:t+r})),lR=sR("Add",iR,oR),uR={kernelName:"Add",backendName:"cpu",kernelFunc:lR};function cR(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{shape:i}=s,o=r.sizeFromShape(a.shape),l=r.inferFromImplicitShape(i,o),u=r.sizeFromShape(l);r.assert(o===u,()=>`The new shape (${l}) has ${u} elements and the old shape (${a.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`),n.incRef(a.dataId);const c=n.data.get(a.dataId);if(null!=c.complexTensorInfos){const e=c.complexTensorInfos.imag;c.complexTensorInfos.real.shape=l,e.shape=l}return{dataId:a.dataId,shape:l,dtype:a.dtype}}const hR={kernelName:"Reshape",backendName:"cpu",kernelFunc:cR};function dR(e){const{inputs:t,backend:n,attrs:s}=e,{a,b:i}=t,{transposeA:l,transposeB:u}=s;TA([a,i],"matMul");const c=a.shape.length,h=i.shape.length,d=l?a.shape[c-2]:a.shape[c-1],p=u?i.shape[h-1]:i.shape[h-2],f=l?a.shape[c-1]:a.shape[c-2],m=u?i.shape[h-2]:i.shape[h-1],g=a.shape.slice(0,-2),y=i.shape.slice(0,-2),b=r.sizeFromShape(g),x=r.sizeFromShape(y),w=o.assertAndGetBroadcastShape(a.shape.slice(0,-2),i.shape.slice(0,-2)).concat([f,m]);r.assert(d===p,()=>`Error in matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${a.shape} and ${i.shape} and transposeA=${l} and transposeB=${u} must match.`);const v=u?[x,m,p]:[x,p,m],k=cR({inputs:{x:a},backend:n,attrs:{shape:l?[b,d,f]:[b,f,d]}}),S=cR({inputs:{x:i},backend:n,attrs:{shape:v}}),I=l?k.shape[1]:k.shape[2],C=l?k.shape[2]:k.shape[1],N=u?S.shape[1]:S.shape[2],T=Math.max(b,x),_=n.data.get(k.dataId).values,E=n.data.get(S.dataId).values,A=r.computeStrides(k.shape),R=r.computeStrides(S.shape),[$,F,D]=l?[A[0],1,A[1]]:[A[0],A[1],1],[O,M,L]=u?[1,R[1],R[0]]:[R[1],1,R[0]],z=C*N,P=gg([T,C,N],k.dtype),B=P.values,U=n.blockSize;for(let r=0;r<T;r++)for(let e=0;e<C;e+=U)for(let t=0;t<N;t+=U)for(let n=0;n<I;n+=U){const s=Math.min(e+U,C),a=Math.min(t+U,N),i=Math.min(n+U,I);for(let o=e;o<s;o++)for(let e=t;e<a;e++){let t=0;for(let s=n;s<i;s++){const n=Math.min(r,b-1)*$,a=Math.min(r,x-1)*L;t+=_[n+o*F+s*D]*E[s*O+e*M+a]}B[r*z+(o*N+e)]+=t}}return n.disposeIntermediateTensorInfo(k),n.disposeIntermediateTensorInfo(S),n.makeTensorInfo(w,P.dtype,P.values)}const pR={kernelName:"BatchMatMul",backendName:"cpu",kernelFunc:dR},fR={kernelName:"_FusedMatMul",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=r;let d,p,f;const m=[];d=dR({inputs:{a:s,b:a},attrs:{transposeA:l,transposeB:u},backend:n}),i&&(p=lR({inputs:{a:d,b:i},backend:n}),m.push(d),d=p),c&&(f=ZA(n,d,c,o,h),m.push(d),d=f);for(const g of m)n.disposeIntermediateTensorInfo(g);return d}};function mR(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const gR={kernelName:"Abs",backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;TA(t,"abs");let s=new Float32Array(r.sizeFromShape(t.shape));return s=mR(n.data.get(t.dataId).values),n.makeOutput(s,t.shape,t.dtype)}},yR={kernelName:"Acos",backendName:"cpu",kernelFunc:AA("Acos",e=>Math.acos(e))},bR={kernelName:"Acosh",backendName:"cpu",kernelFunc:AA("Acosh",e=>Math.acosh(e))},xR={kernelName:"AddN",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;TA(t,"addN");const s=r.map(e=>n.data.get(e.dataId).values),a=gg(r[0].shape,r[0].dtype),i=a.values;for(let o=0;o<r.length;o++){const e=s[o];for(let t=0;t<i.length;t++)i[t]+=e[t]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}};function wR(e,t,n,s,a){const i=t.length,o=r.sizeFromShape(t),l=r.computeStrides(t),u=r.computeStrides(a),c=r.getTypedArrayFromDType(n,r.sizeFromShape(a));for(let h=0;h<o;++h){const t=r.indexToLoc(h,i,l),n=new Array(t.length);for(let e=0;e<n.length;e++)n[e]=t[s[e]];c[r.locToIndex(n,i,u)]=e[h]}return c}function vR(e){const{inputs:t,attrs:n,backend:r}=e,{x:s}=t,{perm:a}=n;TA(s,"transpose");const i=new Array(s.shape.length);for(let l=0;l<i.length;l++)i[l]=s.shape[a[l]];const o=wR(r.data.get(s.dataId).values,s.shape,s.dtype,a,i);return{dataId:r.write(o,i,s.dtype),shape:i,dtype:s.dtype}}const kR={kernelName:"Transpose",backendName:"cpu",kernelFunc:vR},SR={kernelName:"All",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,keepDims:o}=s;TA(a,"all");const l=r.parseAxisParam(i,a.shape);let u=l;const c=p.getAxesPermutation(u,a.shape.length);let h=a;null!=c&&(h=vR({inputs:{x:a},backend:n,attrs:{perm:c}}),u=p.getInnerMostAxes(u.length,a.shape.length)),p.assertAxesAreInnerMostDims("all",u,h.shape.length);const[d,f]=p.computeOutAndReduceShapes(h.shape,u),m=r.sizeFromShape(f),g=r.makeZerosTypedArray(r.sizeFromShape(d),h.dtype),y=n.data.get(h.dataId).values;for(let r=0;r<g.length;++r){const e=r*m;let t=y[e];for(let n=0;n<m;++n){const r=y[e+n];t=t&&r}g[r]=t}null!=c&&n.disposeIntermediateTensorInfo(h);const b=n.makeTensorInfo(d,h.dtype,g);if(o){const e=cR({inputs:{x:b},backend:n,attrs:{shape:p.expandShapeToKeepDim(d,l)}});return n.disposeIntermediateTensorInfo(b),e}return b}},IR={kernelName:"Any",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,keepDims:o}=s;TA(a,"any");const l=r.parseAxisParam(i,a.shape);let u=l;const c=p.getAxesPermutation(u,a.shape.length);let h=a;null!=c&&(h=vR({inputs:{x:a},backend:n,attrs:{perm:c}}),u=p.getInnerMostAxes(u.length,a.shape.length)),p.assertAxesAreInnerMostDims("any",u,h.shape.length);const[d,f]=p.computeOutAndReduceShapes(h.shape,u),m=r.sizeFromShape(f),g=r.makeZerosTypedArray(r.sizeFromShape(d),h.dtype),y=n.data.get(h.dataId).values;for(let r=0;r<g.length;++r){const e=r*m;let t=y[e];for(let n=0;n<m;++n){const r=y[e+n];t=t||r}g[r]=t}null!=c&&n.disposeIntermediateTensorInfo(h);const b=n.makeTensorInfo(d,h.dtype,g);if(o){const e=cR({inputs:{x:b},backend:n,attrs:{shape:p.expandShapeToKeepDim(d,l)}});return n.disposeIntermediateTensorInfo(b),e}return b}},CR={kernelName:"ArgMax",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i}=s;TA(a,"argMax");let o=r.parseAxisParam(i,a.shape);const l=p.getAxesPermutation(o,a.shape.length);let u=a;const c=[];null!=l&&(u=vR({inputs:{x:a},backend:n,attrs:{perm:l}}),c.push(u),o=p.getInnerMostAxes(o.length,u.shape.length)),o=[o[0]],p.assertAxesAreInnerMostDims("argMax",o,u.shape.length);const[h,d]=p.computeOutAndReduceShapes(u.shape,o),f=r.sizeFromShape(h),m=r.makeZerosTypedArray(f,"int32"),g=r.sizeFromShape(d),y=n.data.get(u.dataId).values;for(let r=0;r<m.length;++r){const e=r*g;let t=y[e],n=0;for(let r=0;r<g;++r){const s=y[e+r];s>t&&(t=s,n=r)}m[r]=n}return c.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(h,"int32",m)}},NR={kernelName:"ArgMin",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i}=s;TA(a,"argMin");let o=r.parseAxisParam(i,a.shape);const l=p.getAxesPermutation(o,a.shape.length);let u=a;const c=[];null!=l&&(u=vR({inputs:{x:a},backend:n,attrs:{perm:l}}),c.push(u),o=p.getInnerMostAxes(o.length,u.shape.length)),o=[o[0]],p.assertAxesAreInnerMostDims("argMin",o,u.shape.length);const[h,d]=p.computeOutAndReduceShapes(u.shape,o),f=r.sizeFromShape(h),m=r.makeZerosTypedArray(f,"int32"),g=r.sizeFromShape(d),y=n.data.get(u.dataId).values;for(let r=0;r<m.length;++r){const e=r*g;let t=y[e],n=0;for(let r=0;r<g;++r){const s=y[e+r];s<t&&(t=s,n=r)}m[r]=n}return c.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(h,"int32",m)}},TR={kernelName:"Asin",backendName:"cpu",kernelFunc:AA("Asin",e=>Math.asin(e))},_R={kernelName:"Asinh",backendName:"cpu",kernelFunc:AA("Asinh",e=>Math.asinh(e))},ER={kernelName:"Atan",backendName:"cpu",kernelFunc:AA("Atan",e=>Math.atan(e))},AR={kernelName:"Atan2",backendName:"cpu",kernelFunc:sR("Atan2",zA((e,t)=>Math.atan2(e,t)))},RR={kernelName:"Atanh",backendName:"cpu",kernelFunc:AA("Atanh",e=>Math.atanh(e))};function $R(e,t,n,r,s,a){const i=s.strideHeight,o=s.strideWidth,l=s.dilationHeight,u=s.dilationWidth,c=s.effectiveFilterHeight,h=s.effectiveFilterWidth,d=s.padInfo.top,p=s.padInfo.left,f="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=gg(s.outShape,n),g=m.values,y=s.outShape[1]*s.outShape[2]*s.outShape[3],b=s.outShape[2]*s.outShape[3],x=s.outShape[3];for(let w=0;w<s.batchSize;++w){const t=w*y,n=w*r[0];for(let m=0;m<s.inChannels;++m)for(let y=0;y<s.outHeight;++y){const w=y*i-d,v=Math.max(0,w),k=Math.min(s.inHeight,c+w),S=t+y*b;for(let t=0;t<s.outWidth;++t){const i=t*o-p,c=Math.max(0,i),d=Math.min(s.inWidth,h+i);let y=f,b=0,w=0;for(let t=v;t<k;t+=l){const s=n+t*r[1];for(let t=c;t<d;t+=u){const n=e[s+t*r[2]+m];"max"===a&&n>y?y=n:"avg"===a&&(b+=n,w++)}if(isNaN(y))break}g[S+t*x+m]="avg"===a?b/w:y}}}return m}function FR(e,t,n,r,s=!1,a=!1){const i=gg(r.outShape,"int32"),o=r.strideHeight,l=r.strideWidth,u=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,d=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,m=gg(t,n,e);for(let g=0;g<r.batchSize;++g)for(let e=0;e<r.inChannels;++e)for(let t=0;t<r.outHeight;++t){const n=t*o-p;let y=n;for(;y<0;)y+=u;const b=Math.min(r.inHeight,h+n);for(let o=0;o<r.outWidth;++o){const h=o*l-f;let p=h;for(;p<0;)p+=c;const x=Math.min(r.inWidth,d+h);let w=Number.NEGATIVE_INFINITY,v=-1;for(let t=y;t<b;t+=u){const i=t-n;for(let n=p;n<x;n+=c){const o=n-h,l=m.get(g,t,n,e);l>w&&(w=l,v=s?a?((g*r.inHeight+t)*r.inWidth+n)*r.inChannels+e:(t*r.inWidth+n)*r.inChannels+e:i*d+o)}}i.set(v,g,t,o,e)}}return i}function DR(e,t,n,r,s,a){const i=s.strideDepth,o=s.strideHeight,l=s.strideWidth,u=s.dilationDepth,c=s.dilationHeight,h=s.dilationWidth,d=s.effectiveFilterDepth,p=s.effectiveFilterHeight,f=s.effectiveFilterWidth,m=s.padInfo.front,g=s.padInfo.top,y=s.padInfo.left,b="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=gg(s.outShape,n),w=x.values,v=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],k=s.outShape[2]*s.outShape[3]*s.outShape[4],S=s.outShape[3]*s.outShape[4],I=s.outShape[4];for(let C=0;C<s.batchSize;++C){const t=C*v,n=C*r[0];for(let x=0;x<s.inChannels;++x)for(let v=0;v<s.outDepth;++v){const C=v*i-m;let N=C;for(;N<0;)N+=u;const T=Math.min(s.inDepth,d+C),_=t+v*k;for(let t=0;t<s.outHeight;++t){const i=t*o-g;let d=i;for(;d<0;)d+=c;const m=Math.min(s.inHeight,p+i),v=_+t*S;for(let t=0;t<s.outWidth;++t){const i=t*l-y;let o=i;for(;o<0;)o+=h;const p=Math.min(s.inWidth,f+i),g=v+t*I;let k=b,S=0,C=0;for(let t=N;t<T;t+=u){const s=n+t*r[1];for(let t=d;t<m;t+=c){const n=s+t*r[2];for(let t=o;t<p;t+=h){const s=e[n+t*r[3]+x];if("max"===a&&s>k?k=s:"avg"===a&&(S+=s,C++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}w[g+x]="avg"===a?S/C:k}}}}return x}const OR={kernelName:"AvgPool",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t;TA(a,"avgPool");const{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=s;r.assert(p.eitherStridesOrDilationsAreOne(o,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`);const c=p.computePool2DInfo(a.shape,i,o,1,l,u);let h;if(1===c.filterWidth&&1===c.filterHeight&&r.arraysEqual(c.inShape,c.outShape))h=DA({inputs:{x:a},backend:n});else{const e=n.data.get(a.dataId).values,t=r.computeStrides(a.shape),s=$R(e,0,a.dtype,t,c,"avg");h=n.makeTensorInfo(c.outShape,a.dtype,s.values)}return h}},MR={kernelName:"AvgPool3D",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u,dataFormat:c}=s;TA(a,"avgPool3d");const h=p.computePool3DInfo(a.shape,i,o,1,l,u,c),d=DR(n.data.get(a.dataId).values,0,a.dtype,r.computeStrides(a.shape),h,"avg");return n.makeTensorInfo(d.shape,"float32",d.values)}},LR={kernelName:"AvgPool3DGrad",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;TA([s,a],"avgPool3DGrad");const c=p.computePool3DInfo(a.shape,i,o,1,l,u),h=c.strideDepth,d=c.strideHeight,f=c.strideWidth,m=c.filterDepth,g=c.filterHeight,y=c.filterWidth,b=c.dilationDepth,x=c.dilationHeight,w=c.dilationWidth,v=c.effectiveFilterDepth,k=c.effectiveFilterHeight,S=c.effectiveFilterWidth,I=v-1-c.padInfo.front,C=S-1-c.padInfo.left,N=k-1-c.padInfo.top,T=gg(a.shape,"float32"),_=1/(m*g*y),E=n.bufferSync(s);for(let p=0;p<c.batchSize;++p)for(let e=0;e<c.inChannels;++e)for(let t=0;t<c.inDepth;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const s=t-I,a=n-N,i=r-C;let o=0;for(let t=0;t<v;t+=b){const n=(s+t)/h;if(!(n<0||n>=c.outDepth||Math.floor(n)!==n))for(let t=0;t<k;t+=x){const r=(a+t)/d;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let t=0;t<S;t+=w){const s=(i+t)/f;s<0||s>=c.outWidth||Math.floor(s)!==s||(o+=E.get(p,n,r,s,e))}}}T.set(o*_,p,t,n,r,e)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}},zR={kernelName:"AvgPoolGrad",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a;TA([s,a],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=r,c=p.computePool2DInfo(i.shape,o,l,1,u),h=c.strideHeight,d=c.strideWidth,f=c.filterHeight,m=c.filterWidth,g=c.dilationHeight,y=c.dilationWidth,b=c.effectiveFilterHeight,x=c.effectiveFilterWidth,w=x-1-c.padInfo.left,v=b-1-c.padInfo.top,k=gg(i.shape,"float32"),S=1/(f*m),I=n.data.get(s.dataId).values,C=gg(s.shape,"float32",I);for(let p=0;p<c.batchSize;++p)for(let e=0;e<c.inChannels;++e)for(let t=0;t<c.inHeight;++t)for(let n=0;n<c.inWidth;++n){const r=t-v,s=n-w;let a=0;for(let t=0;t<b;t+=g){const n=(r+t)/h;if(!(n<0||n>=c.outHeight||Math.floor(n)!==n))for(let t=0;t<x;t+=y){const r=(s+t)/d;r<0||r>=c.outWidth||Math.floor(r)!==r||(a+=C.get(p,n,r,e))}}k.set(a*S,p,t,n,e)}return n.makeTensorInfo(k.shape,k.dtype,k.values)}},PR={kernelName:"FusedBatchNorm",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,scale:i,offset:o,mean:l,variance:u}=t;r.assert(l.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),r.assert(null==o||l.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),r.assert(null==i||l.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),TA([a,l,u,i,o],"batchNorm");let{varianceEpsilon:c}=s;null==c&&(c=.001);const h=n.data.get(a.dataId).values,d=n.data.get(l.dataId).values,p=n.data.get(u.dataId).values,f=i?n.data.get(i.dataId).values:new Float32Array([1]),m=o?n.data.get(o.dataId).values:new Float32Array([0]),g=new Float32Array(h.length),y=m.length,b=f.length,x=p.length,w=d.length;let v=0,k=0,S=0,I=0;for(let r=0;r<h.length;++r)g[r]=m[v++]+(h[r]-d[k++])*f[S++]/Math.sqrt(p[I++]+c),v>=y&&(v=0),k>=w&&(k=0),S>=b&&(S=0),I>=x&&(I=0);return n.makeTensorInfo(a.shape,a.dtype,g)}};function BR(e,t,n,s,a){const i=u.isSliceContinous(s,t,n),o=r.sizeFromShape(n),l=r.computeStrides(s);if(i){const n=u.computeFlatOffset(t,l);return"string"===a?e.slice(n,n+o):e.subarray(n,n+o)}const c=gg(s,a,"string"===a?p.fromUint8ToStringArray(e):e),h=gg(n,a);for(let r=0;r<h.size;++r){const e=h.indexToLoc(r),n=e.map((e,n)=>e+t[n]);h.set(c.get(...n),...e)}return"string"===a?p.fromStringArrayToUint8(h.values):h.values}function UR(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:i}=r;TA(s,"slice");const[o,l]=u.parseSliceParams(s,a,i);u.assertParamsValid(s,o,l);const c=BR(n.data.get(s.dataId).values,o,l,s.shape,s.dtype);return n.makeTensorInfo(l,s.dtype,c)}const VR={kernelName:"Slice",backendName:"cpu",kernelFunc:UR},WR={kernelName:"BatchToSpaceND",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:i}=r;TA([s],"batchToSpaceND");const o=a.reduce((e,t)=>e*t),l=p.getReshaped(s.shape,a,o),u=p.getPermuted(l.length,a.length),c=p.getReshapedPermuted(s.shape,a,o),h=p.getSliceBeginCoords(i,a.length),d=p.getSliceSize(c,i,a.length),f=cR({inputs:{x:s},backend:n,attrs:{shape:l}}),m=vR({inputs:{x:f},backend:n,attrs:{perm:u}}),g=cR({inputs:{x:m},backend:n,attrs:{shape:c}}),y=UR({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),y}};function GR(e,t,n,s,a){const i=r.sizeFromShape(s),o=r.makeZerosTypedArray(a,n);for(let r=0;r<e.length;r++){const n=e[r];if(n<0)throw new Error("Input x must be non-negative!");n>=a||(o[n]+=i>0?t[r]:1)}return o}function HR(e,t,n,r=!1){const s=e.shape[0],a=e.shape[1],i=gg([s,n],t.dtype);for(let o=0;o<s;o++)for(let s=0;s<a;s++){const a=e.get(o,s);if(a<0)throw new Error("Input x must be non-negative!");a>=n||i.set(r?1:t.size>0?i.get(o,a)+t.get(o,s):i.get(o,a)+1,o,a)}return i}const jR={kernelName:"Bincount",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i}=r,o=GR(n.data.get(s.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,o)}},qR={kernelName:"BroadcastArgs",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:s}=t,a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,o=p.assertAndGetBroadcastShape(Array.from(a),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},KR=jA(e=>Math.ceil(e)),XR={kernelName:"Ceil",backendName:"cpu",kernelFunc:RA("Ceil",KR)},ZR={kernelName:"ClipByValue",backendName:"cpu",kernelFunc:AA("ClipByValue",(e,t)=>e>t.clipValueMax?t.clipValueMax:e<t.clipValueMin?t.clipValueMin:e)},YR={kernelName:"ComplexAbs",backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,s=new Float32Array(r.sizeFromShape(t.shape)),a=n.data.get(t.dataId),i=a.complexTensorInfos.imag,o=n.data.get(a.complexTensorInfos.real.dataId).values,l=n.data.get(i.dataId).values;for(let r=0;r<o.length;r++)s[r]=Math.hypot(o[r],l[r]);return n.makeOutput(s,t.shape,"float32")}};function JR(e,t,n,s){const a=r.getArrayFromDType(n,r.sizeFromShape(t));if(s&&"string"!==n){let t=0;e.forEach(e=>{const n=r.sizeFromShape(e.shape);a.set(e.vals,t),t+=n})}else{let r=0;e.forEach(e=>{const s="string"===n?p.fromUint8ToStringArray(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)a[o+t]=s[i++]}r+=e.shape[1]})}return a}function QR(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.imag,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const e$={kernelName:"Imag",backendName:"cpu",kernelFunc:QR};function t$(e){const{inputs:t,backend:n,attrs:s}=e,{axis:a}=s,i=r.parseAxisParam(a,t[0].shape)[0];let o=p.computeOutShape(t.map(e=>e.shape),i);if(0===r.sizeFromShape(o))return n.makeTensorInfo(o,t[0].dtype,[]);const l=t.filter(e=>r.sizeFromShape(e.shape)>0);if(1===l.length)return DA({inputs:{x:l[0]},backend:n});const u=l.map(e=>e.shape);if(p.assertParamsConsistent(u,i),"complex64"===l[0].dtype){const e=l.map(e=>eR({inputs:{input:e},backend:n})),t=l.map(e=>QR({inputs:{input:e},backend:n})),r=t$({inputs:e,backend:n,attrs:{axis:i}}),s=t$({inputs:t,backend:n,attrs:{axis:i}}),a=YA({inputs:{real:r,imag:s},backend:n});return e.forEach(e=>n.disposeIntermediateTensorInfo(e)),t.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),a}const c=l.map(e=>{const t=r.sizeFromShape(e.shape.slice(i));return cR({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})}),h=c.map(e=>({vals:n.data.get(e.dataId).values,shape:e.shape}));o=p.computeOutShape(c.map(e=>e.shape),1);const d=JR(h,o,t[0].dtype,1===c[0].shape[0]),f=p.computeOutShape(l.map(e=>e.shape),i),m=n.makeTensorInfo(f,t[0].dtype,d);return c.forEach(e=>n.disposeIntermediateTensorInfo(e)),m}const n$={kernelName:"Concat",backendName:"cpu",kernelFunc:t$};function r$(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:i}=t,{strides:o,pad:l,dataFormat:u,dilations:c,dimRoundingMode:h}=s;TA([a,i],"conv2d");const d=p.convertConv2DDataFormat(u),f=p.computeConv2DInfo(a.shape,i.shape,o,c,l,h,!1,d),m=f.filterHeight,g=f.filterWidth,y=f.dilationHeight,b=f.dilationWidth,x=f.padInfo.left,w=f.padInfo.top,v="channelsLast"===f.dataFormat,k=new Wf(f.outShape,a.dtype),S=r.computeStrides(a.shape),I=r.computeStrides(i.shape),C=S[0],N=v?S[1]:S[2],T=v?S[2]:1,_=v?1:S[1],E=k.strides[0],A=v?k.strides[1]:k.strides[2],R=v?k.strides[2]:1,$=v?1:k.strides[1],F=n.data.get(a.dataId).values,D=n.data.get(i.dataId).values,O=k.values;for(let r=0;r<f.batchSize;++r){const e=r*C,t=r*E;for(let n=0;n<f.outHeight;++n){const r=t+n*A,s=n*f.strideHeight-w;for(let t=0;t<m;++t){const n=s+t*y;if(n<0||n>=f.inHeight)continue;const a=t*I[0],i=e+n*N;for(let e=0;e<f.outWidth;++e){const t=r+e*R,n=e*f.strideWidth-x;for(let e=0;e<g;++e){const r=n+e*b;if(r<0||r>=f.inWidth)continue;const s=i+r*T;let o=a+e*I[1];for(let e=0;e<f.inChannels;++e){const n=F[s+e*_];for(let e=0;e<f.outChannels;++e)O[t+e*$]+=n*D[o+e];o+=f.outChannels}}}}}}return n.makeTensorInfo(k.shape,k.dtype,O)}const s$={kernelName:"Conv2D",backendName:"cpu",kernelFunc:r$},a$={kernelName:"Conv2DBackpropFilter",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=r;TA([s,a],"conv2dBackpropFilter");const h=p.convertConv2DDataFormat(l),d=p.computeConv2DInfo(s.shape,c,i,1,o,u,!1,h),{strideHeight:f,strideWidth:m,filterHeight:g,filterWidth:y}=d,b="channelsLast"===d.dataFormat,x=new Wf(d.filterShape,"float32"),w=d.padInfo.left,v=d.padInfo.top,k=n.data.get(s.dataId).values,S=n.data.get(a.dataId).values,I=new Wf(s.shape,s.dtype,k),C=new Wf(a.shape,a.dtype,S);for(let p=0;p<g;++p){const e=Math.max(0,Math.ceil((v-p)/f)),t=Math.min(d.outHeight,(d.inHeight+v-p)/f);for(let n=0;n<y;++n){const r=Math.max(0,Math.ceil((w-n)/m)),s=Math.min(d.outWidth,(d.inWidth+w-n)/m);for(let a=0;a<d.inChannels;++a)for(let i=0;i<d.outChannels;++i){let o=0;for(let l=0;l<d.batchSize;++l)for(let u=e;u<t;++u){const e=p+u*f-v;for(let t=r;t<s;++t){const r=n+t*m-w;o+=b?I.get(l,e,r,a)*C.get(l,u,t,i):I.get(l,a,e,r)*C.get(l,i,u,t)}}x.set(o,p,n,a,i)}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}},i$={kernelName:"Conv2DBackpropInput",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,filter:i}=t,{inputShape:o,strides:l,pad:u,dataFormat:c,dimRoundingMode:h}=s;TA([a,i],"conv2dBackpropInput");const d=r.computeStrides(i.shape),f=r.computeStrides(a.shape);let m=p.convertConv2DDataFormat(c);const g=p.computeConv2DInfo(o,i.shape,l,1,u,h,!1,m),y=new Wf(g.inShape,"float32"),b=y.values,x=n.data.get(a.dataId).values,w=n.data.get(i.dataId).values,[v,k,S]=d,{batchSize:I,filterHeight:C,filterWidth:N,inChannels:T,inHeight:_,inWidth:E,outChannels:A,outHeight:R,outWidth:$,strideHeight:F,strideWidth:D}=g;m=g.dataFormat;const O=C-1-g.padInfo.top,M=N-1-g.padInfo.left,L="channelsLast"===m,z=y.strides[0],P=L?y.strides[1]:y.strides[2],B=L?y.strides[2]:1,U=L?1:y.strides[1],V=f[0],W=L?f[1]:f[2],G=L?f[2]:1,H=L?1:f[1];for(let r=0;r<I;++r)for(let e=0;e<T;++e)for(let t=0;t<_;++t){const n=t-O,s=Math.max(0,Math.ceil(n/F)),a=Math.min(R,(C+n)/F);for(let i=0;i<E;++i){const o=i-M,l=Math.max(0,Math.ceil(o/D)),u=Math.min($,(N+o)/D);let c=0;for(let t=s;t<a;++t){const s=t*F-n;for(let n=l;n<u;++n){const a=V*r+W*t+G*n,i=v*(C-1-s)+k*(N-1-(n*D-o))+S*e;for(let e=0;e<A;++e)c+=x[a+H*e]*w[i+e]}}b[z*r+P*t+B*i+U*e]=c}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},o$={kernelName:"Conv3D",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:i}=t,{strides:o,pad:l,dilations:u}=s;TA([a,i],"conv3d");const c=p.computeConv3DInfo(a.shape,i.shape,o,u,l),{filterDepth:h,filterHeight:d,filterWidth:f,dilationDepth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=c,x=b.front,w=b.left,v=b.top,k=new Wf(c.outShape,a.dtype),S=n.data.get(a.dataId).values,I=n.data.get(i.dataId).values,C=k.values,N=r.computeStrides(a.shape),T=r.computeStrides(i.shape);for(let r=0;r<c.batchSize;++r){const e=r*N[0],t=r*k.strides[0];for(let n=0;n<c.outDepth;++n){const r=t+n*k.strides[1],s=n*c.strideDepth-x;for(let t=0;t<h;++t){const n=s+t*m;if(n<0||n>=c.inDepth)continue;const a=t*T[0],i=e+n*N[1];for(let e=0;e<c.outHeight;++e){const t=r+e*k.strides[2],n=e*c.strideHeight-v;for(let e=0;e<d;++e){const r=n+e*g;if(r<0||r>=c.inHeight)continue;const s=a+e*T[1],o=i+r*N[2];for(let e=0;e<c.outWidth;++e){const n=t+e*c.outChannels,r=e*c.strideWidth-w;for(let e=0;e<f;++e){const t=r+e*y;if(t<0||t>=c.inWidth)continue;const a=o+t*c.inChannels;let i=s+e*T[2];for(let e=0;e<c.inChannels;++e){const t=S[a+e];for(let e=0;e<c.outChannels;++e)C[n+e]+=t*I[i+e];i+=c.outChannels}}}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}},l$={kernelName:"Conv3DBackpropFilterV2",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,dy:i}=t,{strides:o,pad:l,filterShape:u}=s;TA([a,i],"conv3dBackpropFilterV2");const c=r.computeStrides(a.shape),h=r.computeStrides(i.shape),d=p.computeConv3DInfo(a.shape,u,o,1,l),f=d.strideDepth,m=d.strideHeight,g=d.strideWidth,y=d.filterDepth,b=d.filterHeight,x=d.filterWidth,w=new Wf(d.filterShape,"float32"),v=w.values,[k,S,I,C]=w.strides,N=n.data.get(i.dataId).values,[T,_,E,A]=h,R=n.data.get(a.dataId).values,[$,F,D,O]=c,M=d.padInfo.front,L=d.padInfo.left,z=d.padInfo.top;for(let r=0;r<y;++r){const e=Math.max(0,Math.ceil((M-r)/f)),t=Math.min(d.outDepth,(d.inDepth+M-r)/f),n=r*k;for(let s=0;s<b;++s){const a=Math.max(0,Math.ceil((z-s)/m)),i=Math.min(d.outHeight,(d.inHeight+z-s)/m),o=s*S+n;for(let n=0;n<x;++n){const l=Math.max(0,Math.ceil((L-n)/g)),u=Math.min(d.outWidth,(d.inWidth+L-n)/g),c=n*I+o;for(let o=0;o<d.inChannels;++o){const h=o*C+c;for(let c=0;c<d.outChannels;++c){let p=0;for(let h=0;h<d.batchSize;++h){const d=h*$,y=h*T;for(let h=e;h<t;++h){const e=(r+h*f-M)*F+d,t=h*_+y;for(let r=a;r<i;++r){const a=(s+r*m-z)*D+e,i=r*E+t;for(let e=l;e<u;++e)p+=R[(n+e*g-L)*O+a+o]*N[e*A+i+c]}}}v[h+c]=p}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},u$={kernelName:"Conv3DBackpropInputV2",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,filter:i}=t,{pad:o,strides:l,inputShape:u}=s;TA([a],"conv3dBackpropInputV2");const c=r.computeStrides(a.shape),h=r.computeStrides(i.shape),d=p.computeConv3DInfo(u,i.shape,l,1,o),f=new Wf(d.inShape,"float32"),m=f.values,[g,y,b,x]=f.strides,w=n.data.get(a.dataId).values,[v,k,S,I]=c,C=n.data.get(i.dataId).values,[N,T,_,E]=h,{batchSize:A,filterDepth:R,filterHeight:$,filterWidth:F,inChannels:D,inDepth:O,inHeight:M,inWidth:L,outChannels:z,outDepth:P,outHeight:B,outWidth:U,strideDepth:V,strideHeight:W,strideWidth:G}=d,H=R-1-d.padInfo.front,j=$-1-d.padInfo.top,q=F-1-d.padInfo.left;for(let r=0;r<A;++r)for(let e=0;e<D;++e)for(let t=0;t<O;++t){const n=t-H,s=Math.max(0,Math.ceil(n/V)),a=Math.min(P,(R+n)/V);for(let i=0;i<M;++i){const o=i-j,l=Math.max(0,Math.ceil(o/W)),u=Math.min(B,($+o)/W);for(let c=0;c<L;++c){const h=c-q,d=Math.max(0,Math.ceil(h/G)),p=Math.min(U,(F+h)/G);let f=0;for(let t=s;t<a;++t){const s=t*V-n;for(let n=l;n<u;++n){const a=n*W-o;for(let i=d;i<p;++i){const o=v*r+k*t+S*n+I*i,l=N*(R-1-s)+T*($-1-a)+_*(F-1-(i*G-h))+E*e;for(let e=0;e<z;++e)f+=w[o+e]*C[l+e]}}}m[g*r+y*t+b*i+x*c+e]=f}}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},c$={kernelName:"Cos",backendName:"cpu",kernelFunc:AA("Cos",e=>Math.cos(e))},h$={kernelName:"Cosh",backendName:"cpu",kernelFunc:AA("Cosh",e=>Math.cosh(e))},d$={kernelName:"CropAndResize",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{image:a,boxes:i,boxInd:o}=t,{cropSize:l,method:u,extrapolationValue:c}=s,[h,d,p,f]=a.shape,m=i.shape[0],[g,y]=l,b=gg([m,g,y,f],"float32"),x=n.data.get(i.dataId).values,w=n.data.get(o.dataId).values,v=n.data.get(a.dataId).values,k=r.computeStrides(a.shape),S=r.computeStrides(b.shape);for(let r=0;r<m;r++){const e=4*r,t=x[e],n=x[e+1],s=x[e+2],a=x[e+3],i=w[r];if(i>=h)continue;const o=g>1?(s-t)*(d-1)/(g-1):0,l=y>1?(a-n)*(p-1)/(y-1):0;for(let h=0;h<g;h++){const e=g>1?t*(d-1)+h*o:.5*(t+s)*(d-1);if(e<0||e>d-1)for(let t=0;t<y;t++)for(let e=0;e<f;e++)b.values[e+t*S[2]+h*S[1]+r*S[0]]=c;else if("bilinear"===u){const t=Math.floor(e),s=Math.ceil(e),o=e-t;for(let e=0;e<y;e++){const u=y>1?n*(p-1)+e*l:.5*(n+a)*(p-1);if(u<0||u>p-1){for(let t=0;t<f;t++)b.values[t+e*S[2]+h*S[1]+r*S[0]]=c;continue}const d=Math.floor(u),m=Math.ceil(u),g=u-d;for(let n=0;n<f;n++){let a=n+d*k[2]+t*k[1]+i*k[0];const l=v[a];a=n+m*k[2]+t*k[1]+i*k[0];const u=v[a];a=n+d*k[2]+s*k[1]+i*k[0];const c=v[a];a=n+m*k[2]+s*k[1]+i*k[0];const p=v[a],f=l+(u-l)*g;a=n+e*S[2]+h*S[1]+r*S[0],b.values[a]=f+(c+(p-c)*g-f)*o}}}else for(let t=0;t<y;++t){const s=y>1?n*(p-1)+t*l:.5*(n+a)*(p-1);if(s<0||s>p-1){for(let e=0;e<f;e++)b.values[e+t*S[2]+h*S[1]+r*S[0]]=c;continue}const o=Math.round(s),u=Math.round(e);for(let e=0;e<f;e++)b.values[e+t*S[2]+h*S[1]+r*S[0]]=v[e+o*k[2]+u*k[1]+i*k[0]]}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},p$={kernelName:"Cumsum",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,exclusive:o,reverse:l}=s;TA(a,"cumsum");const u=p.getAxesPermutation([i],a.shape.length);let c=a;null!=u&&(c=vR({inputs:{x:a},backend:n,attrs:{perm:u}}));const h=p.getInnerMostAxes(1,a.shape.length)[0];if(h!==c.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${h}`);const d=nm(c.dtype,"int32"),f=r.makeZerosTypedArray(r.sizeFromShape(c.shape),d),m=n.data.get(c.dataId).values,g=c.shape[c.shape.length-1],y=l?(e,t)=>e+g-t-1:(e,t)=>e+t;for(let r=0;r<m.length;r+=g)for(let e=0;e<g;e++){const t=y(r,e);if(0===e)f[t]=o?0:m[t];else{const n=y(r,e-1);f[t]=o?m[n]+f[n]:m[t]+f[n]}}const b=n.makeTensorInfo(c.shape,d,f);if(null!=u){const e=vR({inputs:{x:b},backend:n,attrs:{perm:p.getUndoAxesPermutation(u)}});return n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(c),e}return b}},f$={kernelName:"DenseBincount",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i,binaryOutput:o}=r;if(1===s.shape.length){const e=GR(n.data.get(s.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,e)}if(2===s.shape.length){const e=HR(n.bufferSync(s),n.bufferSync(a),i,o);return n.makeTensorInfo(e.shape,a.dtype,e.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+s.shape.length+".")}},m$={kernelName:"DepthToSpace",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{blockSize:i,dataFormat:o}=s;r.assert("NHWC"===o,()=>"Only NHWC dataFormat supported on CPU for depthToSpace. Got "+o);const l=a.shape[0],u=a.shape[1],c=a.shape[2],h=a.shape[3],d=u*i,p=c*i,f=h/(i*i),m=n.data.get(a.dataId).values,g=new Float32Array(l*d*p*f);let y=0;for(let r=0;r<l;++r)for(let e=0;e<d;++e){const t=Math.floor(e/i),n=e%i;for(let e=0;e<p;++e){const s=Math.floor(e/i),a=(n*i+e%i)*f;for(let e=0;e<f;++e)g[y++]=m[e+a+h*(s+c*(t+u*r))]}}return n.makeTensorInfo([l,d,p,f],a.dtype,g)}};function g$(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:i}=t,{strides:o,pad:l,dilations:u,dimRoundingMode:c}=s;TA([a,i],"depthwiseConv2DNative");const h=r.computeStrides(a.shape),d=r.computeStrides(i.shape);let f=u;null==f&&(f=[1,1]),r.assert(p.eitherStridesOrDilationsAreOne(o,f),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${f}'`);const m=p.computeConv2DInfo(a.shape,i.shape,o,f,l,c,!0),{filterHeight:g,filterWidth:y,dilationHeight:b,dilationWidth:x,padInfo:w}=m,v=w.left,k=w.top,S=m.outChannels/m.inChannels,I=new Wf(m.outShape,a.dtype),C=n.data.get(a.dataId).values,N=n.data.get(i.dataId).values,T=I.values;for(let r=0;r<m.batchSize;++r){const e=r*h[0],t=r*I.strides[0];for(let n=0;n<m.outHeight;++n){const r=t+n*I.strides[1],s=n*m.strideHeight-k;for(let t=0;t<g;++t){const n=s+t*b;if(n<0||n>=m.inHeight)continue;const a=t*d[0],i=e+n*h[1];for(let e=0;e<m.outWidth;++e){const t=r+e*I.strides[2],n=e*m.strideWidth-v;for(let e=0;e<y;++e){const r=n+e*x;if(r<0||r>=m.inWidth)continue;const s=i+r*m.inChannels;let o=t,l=a+e*d[1];for(let e=0;e<m.inChannels;++e){const t=C[s+e];for(let e=0;e<S;++e)T[o+e]+=t*N[l+e];o+=S,l+=S}}}}}}return n.makeTensorInfo(I.shape,I.dtype,I.values)}const y$={kernelName:"DepthwiseConv2dNative",backendName:"cpu",kernelFunc:g$},b$={kernelName:"DepthwiseConv2dNativeBackpropFilter",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=r;TA([s,a],"depthwiseConv2dNativeBackpropFilter");const h=p.computeConv2DInfo(s.shape,c,i,o,l,u,!0),{strideHeight:d,strideWidth:f,filterHeight:m,filterWidth:g}=h,y=new Wf(h.filterShape,"float32"),b=h.padInfo.left,x=h.padInfo.top,w=h.outChannels/h.inChannels,v=n.data.get(s.dataId).values,k=new Wf(s.shape,s.dtype,v),S=n.data.get(a.dataId).values,I=new Wf(a.shape,a.dtype,S);for(let p=0;p<m;++p){const e=Math.max(0,Math.ceil((x-p)/d)),t=Math.min(h.outHeight,(h.inHeight+x-p)/d);for(let n=0;n<g;++n){const r=Math.max(0,Math.ceil((b-n)/f)),s=Math.min(h.outWidth,(h.inWidth+b-n)/f);for(let a=0;a<h.outChannels;++a){const i=Math.trunc(a/w),o=a%w;let l=0;for(let u=0;u<h.batchSize;++u)for(let o=e;o<t;++o){const e=p+o*d-x;for(let t=r;t<s;++t)l+=k.get(u,e,n+t*f-b,i)*I.get(u,o,t,a)}y.set(l,p,n,i,o)}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},x$={kernelName:"DepthwiseConv2dNativeBackpropInput",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,filter:i}=t,{strides:o,dilations:l,pad:u,dimRoundingMode:c,inputShape:h}=s;TA([a,i],"depthwiseConv2DNativeBackpropInput");const d=r.computeStrides(a.shape),f=r.computeStrides(i.shape),m=p.computeConv2DInfo(h,i.shape,o,l,u,c,!0),g=new Wf(m.inShape,"float32"),y=g.values,[b,x,w]=g.strides,v=n.data.get(a.dataId).values,[k,S,I]=d,C=n.data.get(i.dataId).values,[N,T,_]=f,{batchSize:E,filterHeight:A,filterWidth:R,inChannels:$,inHeight:F,inWidth:D,outChannels:O,outHeight:M,outWidth:L,strideHeight:z,strideWidth:P}=m,B=A-1-m.padInfo.top,U=R-1-m.padInfo.left,V=O/$;for(let r=0;r<E;++r)for(let e=0;e<$;++e)for(let t=0;t<F;++t){const n=t-B,s=Math.max(0,Math.ceil(n/z)),a=Math.min(M,(A+n)/z);for(let i=0;i<D;++i){const o=i-U,l=Math.max(0,Math.ceil(o/P)),u=Math.min(L,(R+o)/P);let c=0;for(let t=s;t<a;++t){const s=t*z-n;for(let n=l;n<u;++n){const a=k*r+S*t+I*n,i=N*(A-1-s)+T*(R-1-(n*P-o))+_*e;for(let t=0;t<V;++t)c+=v[a+(e*V+t)]*C[i+t]}}y[b*r+x*t+w*i+e]=c}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},w$={kernelName:"Diag",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t,a=r.sizeFromShape(s.shape),i=n.data.get(s.dataId).values,o=gg([a,a],s.dtype),l=o.values;for(let r=0;r<i.length;r++)l[r*a+r]=i[r];const u=[...s.shape,...s.shape];return n.makeTensorInfo(u,o.dtype,o.values)}},v$={kernelName:"Dilation2D",backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:a}=e,{strides:i,pad:o,dilations:l}=n,u=t,c=u.data.get(s.dataId).values,h=s.shape.length,d=u.data.get(a.dataId).values,f=a.shape.length,{batchSize:m,inHeight:g,inWidth:y,inChannels:b,outHeight:x,outWidth:w,padInfo:v,strideHeight:k,strideWidth:S,filterHeight:I,filterWidth:C,dilationHeight:N,dilationWidth:T,outShape:_}=p.computeDilation2DInfo(s.shape,a.shape,i,o,"NHWC",l),E=r.sizeFromShape(_),A=_.length,R=r.getArrayFromDType(s.dtype,E);for(let p=0;p<m;++p)for(let e=0;e<x;++e){const t=e*k-v.top;for(let n=0;n<w;++n){const i=n*S-v.left;for(let o=0;o<b;++o){let l=Number.MIN_SAFE_INTEGER;for(let e=0;e<I;++e){const n=t+e*N;if(n>=0&&n<g)for(let t=0;t<C;++t){const u=i+t*T;if(u>=0&&u<y){const i=r.locToIndex([p,n,u,o],h,r.computeStrides(s.shape)),m=r.locToIndex([e,t,o],f,r.computeStrides(a.shape)),g=c[i]+d[m];g>l&&(l=g)}}}R[r.locToIndex([p,e,n,o],A,r.computeStrides(_))]=l}}}return{dataId:u.write(r.toTypedArray(R,s.dtype),_,s.dtype),shape:_,dtype:s.dtype}}},k$={kernelName:"Dilation2DBackpropFilter",backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:a,dy:i}=e,{strides:o,pad:l,dilations:u}=n,c=t,h=r.toNestedArray(s.shape,c.data.get(s.dataId).values),d=r.toNestedArray(a.shape,c.data.get(a.dataId).values),{batchSize:f,inHeight:m,inWidth:g,inChannels:y,outHeight:b,outWidth:x,padInfo:w,strideHeight:v,strideWidth:k,filterHeight:S,filterWidth:I,dilationHeight:C,dilationWidth:N,outShape:T}=p.computeDilation2DInfo(s.shape,a.shape,o,l,"NHWC",u);r.assert(i.rank===T.length,()=>`Error in Dilation2DBackpropFilter, dy must have the same rank as output ${T.length}, but got `+i.rank);const _=r.toNestedArray(T,c.data.get(i.dataId).values),E=r.makeZerosNestedTypedArray(a.shape,a.dtype);for(let r=0;r<f;++r)for(let e=0;e<b;++e){const t=e*v-w.top;for(let n=0;n<x;++n){const s=n*k-w.left;for(let a=0;a<y;++a){let i=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let e=0;e<S;++e){const n=t+e*C;if(n>=0&&n<m)for(let t=0;t<I;++t){const u=s+t*N;if(u>=0&&u<g){const s=h[r][n][u][a]+d[e][t][a];s>i&&(i=s,o=e,l=t)}}}E[o][l][a]+=_[r][e][n][a]}}}return{dataId:c.write(r.toTypedArray(E,s.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},S$={kernelName:"Dilation2DBackpropInput",backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:a,dy:i}=e,{strides:o,pad:l,dilations:u}=n,c=t,h=r.toNestedArray(s.shape,c.data.get(s.dataId).values),d=r.toNestedArray(a.shape,c.data.get(a.dataId).values),{batchSize:f,inHeight:m,inWidth:g,inChannels:y,outHeight:b,outWidth:x,padInfo:w,strideHeight:v,strideWidth:k,filterHeight:S,filterWidth:I,dilationHeight:C,dilationWidth:N,outShape:T}=p.computeDilation2DInfo(s.shape,a.shape,o,l,"NHWC",u);r.assert(i.rank===T.length,()=>`Error in Dilation2DBackpropInput, dy must have the same rank as output ${T.length}, but got `+i.rank);const _=r.toNestedArray(T,c.data.get(i.dataId).values),E=r.makeZerosNestedTypedArray(s.shape,s.dtype);for(let r=0;r<f;++r)for(let e=0;e<b;++e){const t=e*v-w.top;for(let n=0;n<x;++n){const s=n*k-w.left;for(let a=0;a<y;++a){let i=Number.MIN_SAFE_INTEGER,o=t<0?0:t,l=s<0?0:s;for(let e=0;e<S;++e){const n=t+e*C;if(n>=0&&n<m)for(let t=0;t<I;++t){const u=s+t*N;if(u>=0&&u<g){const s=h[r][n][u][a]+d[e][t][a];s>i&&(i=s,o=n,l=u)}}}E[r][o][l][a]+=_[r][e][n][a]}}}return{dataId:c.write(r.toTypedArray(E,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},I$=zA((e,t)=>e*t),C$=aR((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n})),N$=sR("Multiply",I$,C$),T$={kernelName:"Multiply",backendName:"cpu",kernelFunc:N$};function _$(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,keepDims:o}=s;let l;TA(a,"sum"),l="bool"===a.dtype?nR({inputs:{x:a},backend:n,attrs:{dtype:"int32"}}):DA({inputs:{x:a},backend:n});const u=l.shape.length,c=r.parseAxisParam(i,l.shape),h=p.getAxesPermutation(c,u);let d=c,f=l;null!=h&&(f=vR({inputs:{x:l},backend:n,attrs:{perm:h}}),d=p.getInnerMostAxes(d.length,u)),p.assertAxesAreInnerMostDims("sum",d,f.shape.length);const[m,g]=p.computeOutAndReduceShapes(f.shape,d);let y=QA(n,m,p.upcastType(f.dtype,"int32"));const b=r.sizeFromShape(g),x=n.data.get(y.dataId).values,w=n.data.get(f.dataId).values;for(let r=0;r<x.length;++r){const e=r*b;let t=0;for(let n=0;n<b;++n)t+=w[e+n];x[r]=t}if(o){const e=y;y=cR({inputs:{x:y},backend:n,attrs:{shape:p.expandShapeToKeepDim(y.shape,c)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(l),null!=h&&n.disposeIntermediateTensorInfo(f),y}const E$={kernelName:"Sum",backendName:"cpu",kernelFunc:_$},A$={kernelName:"Einsum",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{equation:a}=s,i=t,{allDims:o,summedDims:l,idDims:u}=p.decodeEinsumEquation(a,i.length);p.checkEinsumDimSizes(o.length,u,i);const{path:c,steps:h}=p.getEinsumComputePath(l,u),d=h.length;let f=null,m=o.length;const g=[];for(let y=0;y<d;++y){for(const e of h[y]){const{permutationIndices:t,expandDims:s}=p.getEinsumPermutation(m,u[e]);let a;p.isIdentityPermutation(t)?a=i[e]:(a=vR({inputs:{x:i[e]},backend:n,attrs:{perm:t}}),g.push(a));const o=a.shape.slice();for(let e=0;e<s.length;++e)o.splice(s[e],0,1);r.arraysEqual(a.shape,o)||(a=cR({inputs:{x:a},backend:n,attrs:{shape:o}}),g.push(a)),null===f?f=a:(f=N$({inputs:{a,b:f},backend:n}),g.push(f))}y<d-1&&(c[y]>=0&&(f=_$({inputs:{x:f},backend:n,attrs:{axis:c[y]-(o.length-m),keepDims:!1}}),g.push(f)),m--)}for(const r of g)r!==f&&n.disposeIntermediateTensorInfo(r);return f}},R$={kernelName:"EluGrad",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:s,y:a}=t;TA([s,a],"eluGrad");const i=new Float32Array(r.sizeFromShape(a.shape)),o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values;for(let r=0;r<o.length;++r){const e=o[r];i[r]=e>=1?l[r]:l[r]*(e+1)}return n.makeTensorInfo(a.shape,"float32",i)}},$$=zA((e,t)=>e===t?1:0),F$=sR("Equal",$$,null,"bool"),D$={kernelName:"Equal",backendName:"cpu",kernelFunc:F$},O$=p.ERF_P,M$=p.ERF_A1,L$=p.ERF_A2,z$=p.ERF_A3,P$=p.ERF_A4,B$=p.ERF_A5,U$={kernelName:"Erf",backendName:"cpu",kernelFunc:AA("Erf",e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+O$*n);return t*(1-((((B$*r+P$)*r+z$)*r+L$)*r+M$)*r*Math.exp(-n*n))})},V$=jA(e=>Math.exp(e)),W$=RA("Exp",V$,"float32"),G$={kernelName:"Exp",backendName:"cpu",kernelFunc:W$};function H$(e){const{inputs:t,backend:n,attrs:s}=e,{input:a}=t,{dim:i}=s,o=a.shape.length,l=a.shape.slice();let u=i;return i<0&&(r.assert(-(o+1)<=i,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),u=o+i+1),l.splice(u,0,1),cR({inputs:{x:a},backend:n,attrs:{shape:l}})}const j$={kernelName:"ExpandDims",backendName:"cpu",kernelFunc:H$},q$=jA(e=>Math.expm1(e)),K$={kernelName:"Expm1",backendName:"cpu",kernelFunc:RA("Expm1",q$)},X$=sR("RealDiv",zA((e,t)=>e/t)),Z$={kernelName:"RealDiv",backendName:"cpu",kernelFunc:X$},Y$=zA((e,t)=>e-t),J$=aR((e,t,n,r)=>({real:e-n,imag:t-r})),Q$=sR("Sub",Y$,J$),eF={kernelName:"Sub",backendName:"cpu",kernelFunc:Q$};function tF(e,t,n){const s=e.shape,a=s[0],i=s[1],o=n.data.get(e.dataId),l=o.complexTensorInfos.real,u=o.complexTensorInfos.imag,c=[a,i],h=r.sizeFromShape(c),d=r.getTypedArrayFromDType("float32",h),f=r.getTypedArrayFromDType("float32",h);for(let r=0;r<a;r++){const e=UR({inputs:{x:l},backend:n,attrs:{begin:[r,0],size:[1,i]}}),s=UR({inputs:{x:u},backend:n,attrs:{begin:[r,0],size:[1,i]}}),a=YA({inputs:{real:e,imag:s},backend:n}),{real:o,imag:c}=nF(a,t,n),h=p.mergeRealAndImagArrays(o,c);for(let t=0;t<i;t++){const e=p.getComplexWithIndex(h,t);d[r*i+t]=e.real,f[r*i+t]=e.imag}n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a)}const m=n.makeTensorInfo(c,"float32",d),g=n.makeTensorInfo(c,"float32",f),y=YA({inputs:{real:m,imag:g},backend:n});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),y}function nF(e,t,n){const s=r.sizeFromShape(e.shape),a=n.data.get(e.dataId),i=n.data.get(a.complexTensorInfos.real.dataId).values,o=n.data.get(a.complexTensorInfos.imag.dataId).values;if(0==((l=s)&l-1)){const a=function e(t,n,r,s,a){if(1===r)return{real:t,imag:n};const i=p.mergeRealAndImagArrays(t,n),o=r/2,l=p.complexWithEvenIndex(i),u=l.real,c=l.imag,h=[u.length],d=a.makeTensorInfo(h,"float32",u),f=a.makeTensorInfo(h,"float32",c),m=YA({inputs:{real:d,imag:f},backend:a}),g=p.complexWithOddIndex(i),y=g.real,b=g.imag,x=[y.length],w=a.makeTensorInfo(x,"float32",y),v=a.makeTensorInfo(x,"float32",b),k=YA({inputs:{real:w,imag:v},backend:a}),S=e(u,c,o,s,a),I=S.real,C=S.imag,N=[I.length],T=a.makeTensorInfo(N,"float32",I),_=a.makeTensorInfo(N,"float32",C),E=YA({inputs:{real:T,imag:_},backend:a}),A=e(y,b,o,s,a),R=A.real,$=A.imag,F=[R.length],D=a.makeTensorInfo(F,"float32",R),O=a.makeTensorInfo(F,"float32",$),M=YA({inputs:{real:D,imag:O},backend:a}),L=p.exponents(r,s),z=[L.real.length],P=a.makeTensorInfo(z,"float32",L.real),B=a.makeTensorInfo(z,"float32",L.imag),U=YA({inputs:{real:P,imag:B},backend:a}),V=N$({inputs:{a:U,b:M},backend:a}),W=lR({inputs:{a:E,b:V},backend:a}),G=Q$({inputs:{a:E,b:V},backend:a}),H=eR({inputs:{input:W},backend:a}),j=eR({inputs:{input:G},backend:a}),q=QR({inputs:{input:W},backend:a}),K=QR({inputs:{input:G},backend:a}),X=t$({inputs:[H,j],backend:a,attrs:{axis:0}}),Z=t$({inputs:[q,K],backend:a,attrs:{axis:0}}),Y=a.data.get(X.dataId).values,J=a.data.get(Z.dataId).values;return a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(f),a.disposeIntermediateTensorInfo(m),a.disposeIntermediateTensorInfo(w),a.disposeIntermediateTensorInfo(v),a.disposeIntermediateTensorInfo(k),a.disposeIntermediateTensorInfo(T),a.disposeIntermediateTensorInfo(_),a.disposeIntermediateTensorInfo(E),a.disposeIntermediateTensorInfo(D),a.disposeIntermediateTensorInfo(O),a.disposeIntermediateTensorInfo(M),a.disposeIntermediateTensorInfo(P),a.disposeIntermediateTensorInfo(B),a.disposeIntermediateTensorInfo(U),a.disposeIntermediateTensorInfo(V),a.disposeIntermediateTensorInfo(W),a.disposeIntermediateTensorInfo(G),a.disposeIntermediateTensorInfo(H),a.disposeIntermediateTensorInfo(q),a.disposeIntermediateTensorInfo(j),a.disposeIntermediateTensorInfo(K),a.disposeIntermediateTensorInfo(X),a.disposeIntermediateTensorInfo(Z),{real:Y,imag:J}}(i,o,s,t,n),l=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(l,"float32",a.real),t=n.makeTensorInfo(l,"float32",a.imag),i=n.makeTensorInfo([],"float32",r.createScalarValue(s,"float32")),o=DA({inputs:{x:i},backend:n}),u=Z$.kernelFunc({inputs:{a:e,b:i},backend:n}),c=Z$.kernelFunc({inputs:{a:t,b:o},backend:n}),h=n.data.get(u.dataId).values,d=n.data.get(c.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),{real:h,imag:d}}return a}{const e=function(e,t,n){const r=new Float32Array(2*t);for(let s=0;s<t;s++){let a=0,i=0;for(let r=0;r<t;r++){const o=p.exponent(s*r,t,n),l=p.getComplexWithIndex(e,r);a+=l.real*o.real-l.imag*o.imag,i+=l.real*o.imag+l.imag*o.real}n&&(a/=t,i/=t),p.assignToTypedArray(r,a,i,s)}return r}(p.mergeRealAndImagArrays(i,o),s,t);return p.splitRealAndImagArrays(e)}var l}const rF={kernelName:"FFT",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t,a=r.sizeFromShape(s.shape),i=s.shape[s.shape.length-1],o=cR({inputs:{x:s},backend:n,attrs:{shape:[a/i,i]}}),l=tF(o,!1,n),u=cR({inputs:{x:l},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),u}};function sF(e){const{backend:t,attrs:n}=e,{shape:s,value:a,dtype:i}=n,o=i||r.inferDtype(a),l=r.getArrayFromDType(o,r.sizeFromShape(s));return function(e,t,n){e.fill(t)}(l,a),t.makeTensorInfo(s,o,l)}const aF={kernelName:"Fill",backendName:"cpu",kernelFunc:sF},iF={kernelName:"FlipLeftRight",backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,s=t,a=r.getTypedArrayFromDType(n.dtype,r.sizeFromShape(n.shape)),[i,o,l,u]=n.shape,c=s.data.get(n.dataId).values;for(let r=0;r<i;r++){const e=r*l*o*u;for(let t=0;t<o;t++){const n=t*(l*u);for(let t=0;t<l;t++){const r=t*u;for(let s=0;s<u;s++){const i=Math.round(l-t-1),o=e+n+r+s;let h=c[o];i>=0&&i<l&&(h=c[e+n+i*u+s]),a[o]=h}}}}return{dataId:s.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},oF=jA(e=>Math.floor(e)),lF={kernelName:"Floor",backendName:"cpu",kernelFunc:RA("Floor",oF)},uF={kernelName:"FloorDiv",backendName:"cpu",kernelFunc:sR("FloorDiv",zA((e,t)=>Math.floor(e/t)),null,"int32")},cF={kernelName:"FusedConv2D",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let m=r$({inputs:{x:s,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const e=m;m=lR({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=ZA(n,m,p,o,f),n.disposeIntermediateTensorInfo(e)}return m}},hF={kernelName:"FusedDepthwiseConv2D",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let m=g$({inputs:{x:s,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const e=m;m=lR({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=ZA(n,m,p,o,f),n.disposeIntermediateTensorInfo(e)}return m}};function dF(e,t,n,r,s,a,i,o,l){const u=gg([r,a],n);for(let c=0;c<r;c++){const n=[];let r=0;for(let t=0;t<s;t++){const a=e[c*s+t];r+=a*i[t],n.push(a)}if(r<0||r>=l/a)throw new Error(`Invalid indices: ${n} does not index into ${o}`);for(let e=0;e<a;e++)u.values[c*a+e]=t.get(...t.indexToLoc(r*a+e))}return u}const pF={kernelName:"GatherNd",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:s,indices:a}=t,i=r.sizeFromShape(s.shape),o=a.shape,l=o[o.length-1],[u,c,h,d]=p.prepareAndValidate(s,a);if(0===c)return n.makeTensorInfo(u,s.dtype,[]);const f=dF(n.data.get(a.dataId).values,n.bufferSync(s),s.dtype,c,l,h,d,s.shape,i);return n.makeTensorInfo(u,s.dtype,f.values)}};function fF(e,t,n){const r=gg(n,e.dtype);for(let s=0;s<r.size;++s){const n=r.indexToLoc(s).slice(),a=t.locToIndex([n[0],n[2]]);n[2]=t.values[a];const i=e.locToIndex(n);r.values[s]=e.values[i]}return r}const mF={kernelName:"GatherV2",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,indices:i}=t,{axis:o,batchDims:l}=s;TA([a,i],"gatherV2");const u=r.parseAxisParam(o,a.shape)[0],c=n.data.get(i.dataId).values,h=a.shape[u];for(let p=0;p<c.length;++p){const e=c[p];r.assert(e<=h-1&&e>=0,()=>`GatherV2: the index value ${e} is not in [0, ${h-1}]`)}let d=l;null==l&&(d=0);const f=r.sizeFromShape(i.shape),m=p.segment_util.collectGatherOpShapeInfo(a,i,u,d),g=cR({inputs:{x:a},backend:n,attrs:{shape:[m.batchSize,m.outerSize,m.dimSize,m.sliceSize]}}),y=cR({inputs:{x:i},backend:n,attrs:{shape:[m.batchSize,f/m.batchSize]}}),b=[m.batchSize,m.outerSize,f/m.batchSize,m.sliceSize],x=n.bufferSync(y),w=fF(n.bufferSync(g),x,b);return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(y),n.makeTensorInfo(m.outputShape,w.dtype,w.values)}},gF=zA((e,t)=>e>t?1:0),yF={kernelName:"Greater",backendName:"cpu",kernelFunc:sR("Greater",gF,null,"bool")},bF=zA((e,t)=>e>=t?1:0),xF={kernelName:"GreaterEqual",backendName:"cpu",kernelFunc:sR("GreaterEqual",bF,null,"bool")},wF={kernelName:"IFFT",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t,a=r.sizeFromShape(s.shape),i=s.shape[s.shape.length-1],o=cR({inputs:{x:s},backend:n,attrs:{shape:[a/i,i]}}),l=tF(o,!0,n),u=cR({inputs:{x:l},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),u}},vF={kernelName:"IsFinite",backendName:"cpu",kernelFunc:AA("IsFinite",e=>Number.isFinite(e)?1:0,"bool")},kF={kernelName:"IsInf",backendName:"cpu",kernelFunc:AA("IsInf",e=>Math.abs(e)===1/0?1:0,"bool")},SF={kernelName:"IsNan",backendName:"cpu",kernelFunc:AA("IsNan",e=>Number.isNaN(e)?1:0,"bool")},IF=zA((e,t)=>e<t?1:0),CF={kernelName:"Less",backendName:"cpu",kernelFunc:sR("Less",IF,null,"bool")},NF=zA((e,t)=>e<=t?1:0),TF={kernelName:"LessEqual",backendName:"cpu",kernelFunc:sR("LessEqual",NF,null,"bool")};function _F(e,t,n){const s=(t-e)/(n-1),a=r.makeZerosTypedArray(n,"float32");a[0]=e;for(let r=1;r<a.length;r++)a[r]=a[r-1]+s;return a}const EF={kernelName:"LinSpace",backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,i=_F(r,s,a);return t.makeTensorInfo([i.length],"float32",i)}},AF=jA(e=>Math.log(e)),RF={kernelName:"Log",backendName:"cpu",kernelFunc:RA("Log",AF)},$F={kernelName:"Log1p",backendName:"cpu",kernelFunc:AA("Log1p",e=>Math.log1p(e))},FF={kernelName:"LogicalAnd",backendName:"cpu",kernelFunc:sR("LogicalAnd",zA((e,t)=>e&&t),null,"bool")},DF={kernelName:"LogicalNot",backendName:"cpu",kernelFunc:AA("LogicalNot",e=>e?0:1,"bool")},OF={kernelName:"LogicalOr",backendName:"cpu",kernelFunc:sR("LogicalOr",zA((e,t)=>e||t),null,"bool")},MF={kernelName:"LRN",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{depthRadius:i,bias:o,alpha:l,beta:u}=s;TA(a,"LRN");const c=a.shape[3],h=c-1,d=n.data.get(a.dataId).values,p=r.sizeFromShape(a.shape),f=new Float32Array(p);function m(e){const t=e%c;let n=e-t+Math.max(0,t-i);const r=e-t+Math.min(t+i,h);let s=0;for(;n<=r;n++){const e=d[n];s+=e*e}return s}for(let r=0;r<p;r++){const e=m(r),t=d[r]*Math.pow(o+l*e,-u);f[r]=t}return n.makeTensorInfo(a.shape,a.dtype,f)}},LF={kernelName:"LRNGrad",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,y:i,dy:o}=t,{depthRadius:l,bias:u,alpha:c,beta:h}=s;TA(o,"LRNGrad");const d=r.sizeFromShape(o.shape),p=o.shape[3],f=n.data.get(o.dataId).values,m=n.data.get(a.dataId).values,g=n.data.get(i.dataId).values,y=new Float32Array(d),b=d;for(let r=0;r<b;r++){const e=r%p,t=r-e+Math.max(0,e-l),n=r-e+Math.min(p,e+l+1);let s=0;for(let r=t;r<n;r++)s+=Math.pow(m[r],2);s=c*s+u;for(let a=t;a<n;a++){let e=-2*c*h*m[a]*g[r]/s;r===a&&(e+=Math.pow(s,-h)),e*=f[r],y[a]+=e}}return n.makeTensorInfo(o.shape,a.dtype,y)}};function zF(e,t,n,s){const a=r.getTypedArrayFromDType(s,r.sizeFromShape(n));for(let r=0;r<a.length;++r){const n=r*t;let s=e[n];for(let r=0;r<t;++r){const t=e[n+r];(Number.isNaN(t)||t>s)&&(s=t)}a[r]=s}return a}function PF(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{reductionIndices:i,keepDims:o}=s,l=n;let u=a.shape;const c=u.length,h=r.parseAxisParam(i,u);let d=h;const f=p.getAxesPermutation(d,c);let m=l.data.get(a.dataId).values;if(null!=f){const e=new Array(c);for(let t=0;t<e.length;t++)e[t]=u[f[t]];m=wR(m,u,a.dtype,f,e),d=p.getInnerMostAxes(d.length,c),u=e}TA(a,"max"),p.assertAxesAreInnerMostDims("max",d,c);const[g,y]=p.computeOutAndReduceShapes(u,d),b=zF(m,r.sizeFromShape(y),g,a.dtype),x=l.write(b,g,a.dtype);let w=g;return o&&(w=p.expandShapeToKeepDim(g,h)),{dataId:x,shape:w,dtype:a.dtype}}const BF={kernelName:"Max",backendName:"cpu",kernelFunc:PF},UF=zA((e,t)=>Math.max(e,t)),VF={kernelName:"Maximum",backendName:"cpu",kernelFunc:sR("Maximum",UF)},WF={kernelName:"MaxPool",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t;TA(a,"maxPool");const{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=s;r.assert(p.eitherStridesOrDilationsAreOne(o,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`);const c=p.computePool2DInfo(a.shape,i,o,1,l,u);let h;if(1===c.filterWidth&&1===c.filterHeight&&r.arraysEqual(c.inShape,c.outShape))h=DA({inputs:{x:a},backend:n});else{const e=n.data.get(a.dataId).values,t=r.computeStrides(a.shape),s=$R(e,0,a.dtype,t,c,"max");h=n.makeTensorInfo(c.outShape,a.dtype,s.values)}return h}},GF={kernelName:"MaxPool3D",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u,dataFormat:c}=s;TA(a,"maxPool3d");const h=p.computePool3DInfo(a.shape,i,o,1,l,u,c),d=DR(n.data.get(a.dataId).values,0,a.dtype,r.computeStrides(a.shape),h,"max");return n.makeTensorInfo(d.shape,"float32",d.values)}},HF={kernelName:"MaxPool3DGrad",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;TA([s,a],"maxPool3DGrad");const c=p.computePool3DInfo(a.shape,i,o,1,l,u),h=function(e,t){const n=gg(t.outShape,"int32"),r=t.strideDepth,s=t.strideHeight,a=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*r-d;let x=b;for(;x<0;)x+=i;const w=Math.min(t.inDepth,u+b);for(let r=0;r<t.outHeight;++r){const u=r*s-p;let d=u;for(;d<0;)d+=o;const v=Math.min(t.inHeight,c+u);for(let s=0;s<t.outWidth;++s){const p=s*a-f;let k=p;for(;k<0;)k+=l;const S=Math.min(t.inWidth,h+p);let I=Number.NEGATIVE_INFINITY,C=-1;for(let t=x;t<w;t+=i){const n=t-b;for(let r=d;r<v;r+=o){const s=r-u;for(let a=k;a<S;a+=l){const i=a-p,o=e.get(m,t,r,a,g);o>=I&&(I=o,C=n*c*h+s*c+i)}}}n.set(C,m,y,r,s,g)}}}return n}(n.bufferSync(a),c),d=c.strideDepth,f=c.strideHeight,m=c.strideWidth,g=c.dilationDepth,y=c.dilationHeight,b=c.dilationWidth,x=c.effectiveFilterDepth,w=c.effectiveFilterHeight,v=c.effectiveFilterWidth,k=x-1-c.padInfo.front,S=v-1-c.padInfo.left,I=w-1-c.padInfo.top,C=gg(a.shape,"float32"),N=n.bufferSync(s);for(let p=0;p<c.batchSize;++p)for(let e=0;e<c.inChannels;++e)for(let t=0;t<c.inDepth;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const s=t-k,a=n-I,i=r-S;let o=0;for(let t=0;t<x;t+=g){const n=(s+t)/d;if(!(n<0||n>=c.outDepth||Math.floor(n)!==n))for(let r=0;r<w;r+=y){const s=(a+r)/f;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let a=0;a<v;a+=b){const l=(i+a)/m;if(l<0||l>=c.outWidth||Math.floor(l)!==l)continue;const u=x*w*v-1-h.get(p,n,s,l,e)===t*w*v+r*v+a?1:0;0!==u&&(o+=N.get(p,n,s,l,e)*u)}}}C.set(o,p,t,n,r,e)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}},jF={kernelName:"MaxPoolGrad",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:i}=t,o=a;TA([a,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=r,d=p.computePool2DInfo(o.shape,l,u,1,c,h),f=n.data.get(o.dataId).values,m=gg(d.outShape,o.dtype,FR(f,o.shape,o.dtype,d).values),g=d.strideHeight,y=d.strideWidth,b=d.dilationHeight,x=d.dilationWidth,w=d.effectiveFilterHeight,v=d.effectiveFilterWidth,k=v-1-d.padInfo.left,S=w-1-d.padInfo.top,I=gg(o.shape,"float32"),C=n.data.get(s.dataId).values,N=gg(s.shape,"float32",C);for(let p=0;p<d.batchSize;++p)for(let e=0;e<d.inChannels;++e)for(let t=0;t<d.inHeight;++t)for(let n=0;n<d.inWidth;++n){const r=t-S,s=n-k;let a=0;for(let t=0;t<w;t+=b){const n=(r+t)/g;if(!(n<0||n>=d.outHeight||Math.floor(n)!==n))for(let r=0;r<v;r+=x){const i=(s+r)/y;if(i<0||i>=d.outWidth||Math.floor(i)!==i)continue;const o=w*v-1-m.get(p,n,i,e)===t*v+r?1:0;0!==o&&(a+=N.get(p,n,i,e)*o)}}I.set(a,p,t,n,e)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},qF={kernelName:"MaxPoolWithArgmax",backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{filterSize:a,strides:i,pad:o,includeBatchInIndex:l}=t,u=n;TA(s,"MaxPoolWithArgmax");const c=u.data.get(s.dataId).values,h=p.computePool2DInfo(s.shape,a,i,[1,1],o),[d,f]=function(e,t,n,s,a){const i=$R(e,0,n,r.computeStrides(t),a,"max"),o=FR(e,t,n,a,!0,s);return[i.values,o.values]}(c,s.shape,s.dtype,l,h),m=u.write(d,h.outShape,s.dtype),g=u.write(f,h.outShape,s.dtype);return[{dataId:m,shape:h.outShape,dtype:s.dtype},{dataId:g,shape:h.outShape,dtype:"int32"}]}},KF={kernelName:"Mean",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,keepDims:o}=s,l=r.parseAxisParam(i,a.shape),u=p.computeOutAndReduceShapes(a.shape,l),c=r.sizeFromShape(u[1]),h=[],d=n.makeTensorInfo([],"float32",new Float32Array([c]));h.push(d);const f=nR({inputs:{x:a},backend:n,attrs:{dtype:"float32"}});h.push(f);const m=X$({inputs:{a:f,b:d},backend:n});h.push(m);const g=_$({inputs:{x:m},backend:n,attrs:{axis:i,keepDims:o}});return h.forEach(e=>n.disposeIntermediateTensorInfo(e)),g}},XF={kernelName:"Min",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,keepDims:o}=s;TA(a,"min");const l=r.parseAxisParam(i,a.shape);let u=l;const c=p.getAxesPermutation(u,a.shape.length);let h=a;null!=c&&(h=vR({inputs:{x:a},backend:n,attrs:{perm:c}}),u=p.getInnerMostAxes(u.length,a.shape.length)),p.assertAxesAreInnerMostDims("min",u,h.shape.length);const[d,f]=p.computeOutAndReduceShapes(h.shape,u),m=r.sizeFromShape(f),g=r.makeZerosTypedArray(r.sizeFromShape(d),h.dtype),y=n.data.get(h.dataId).values;for(let r=0;r<g.length;++r){const e=r*m;let t=y[e];for(let n=0;n<m;++n){const r=y[e+n];(Number.isNaN(r)||r<t)&&(t=r)}g[r]=t}null!=c&&n.disposeIntermediateTensorInfo(h);const b=n.makeTensorInfo(d,h.dtype,g);if(o){const e=cR({inputs:{x:b},backend:n,attrs:{shape:p.expandShapeToKeepDim(d,l)}});return n.disposeIntermediateTensorInfo(b),e}return b}},ZF=zA((e,t)=>Math.min(e,t)),YF={kernelName:"Minimum",backendName:"cpu",kernelFunc:sR("Minimum",ZF)},JF={kernelName:"MirrorPad",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{paddings:i,mode:o}=s;TA(a,"mirrorPad");const l=i.map((e,t)=>e[0]+a.shape[t]+e[1]),u=i.map(e=>e[0]),c=i.map((e,t)=>e[0]+a.shape[t]),h="reflect"===o?0:1,d=n.data.get(a.dataId).values,p=a.shape.length,f=r.computeStrides(a.shape),m=r.sizeFromShape(l),g=l.length,y=r.computeStrides(l),b=r.getTypedArrayFromDType(a.dtype,m);for(let x=0;x<m;x++){let e=r.indexToLoc(x,g,y);for(let n=0;n<g;n++)e[n]<u[n]?e[n]=2*u[n]-e[n]-h:e[n]>=c[n]&&(e[n]=2*(c[n]-1)-e[n]+h);e=e.map((e,t)=>e-u[t]);const t=r.locToIndex(e,p,f);b[x]=d[t]}return{dataId:n.write(b,l,a.dtype),shape:l,dtype:a.dtype}}},QF={kernelName:"Mod",backendName:"cpu",kernelFunc:sR("Mod",zA((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t}))};function eD(e){const{inputs:t,backend:n,attrs:s}=e,{logits:a}=t,{dim:i}=s,o=a.shape.length;let l=i;if(-1===l&&(l=o-1),l!==o-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${o} and dim was ${l}`);const u=r.parseAxisParam([l],a.shape),c=PF({inputs:{x:a},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),h=p.expandShapeToKeepDim(c.shape,u),d=cR({inputs:{x:c},backend:n,attrs:{shape:h}}),f=Q$({inputs:{a,b:d},backend:n}),m=W$({inputs:{x:f},backend:n}),g=_$({inputs:{x:m},backend:n,attrs:{axis:u,keepDims:!1}}),y=cR({inputs:{x:g},backend:n,attrs:{shape:h}}),b=X$({inputs:{a:m,b:y},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(y),b}const tD={kernelName:"Softmax",backendName:"cpu",kernelFunc:eD},nD={kernelName:"Multinomial",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{logits:a}=t,{numSamples:i,seed:o,normalized:l}=s;TA(a,"multinomial");const u=l?a:eD({inputs:{logits:a},backend:n,attrs:{dim:-1}}),c=u.shape[0],h=u.shape[1],d=n.data.get(u.dataId).values,p=[c,i],f=r.makeZerosTypedArray(r.sizeFromShape(p),"int32");for(let r=0;r<c;++r){const e=r*h,t=new Float32Array(h-1);t[0]=d[e];for(let r=1;r<t.length;++r)t[r]=t[r-1]+d[e+r];const n=Jb.alea(o.toString()),s=r*i;for(let r=0;r<i;++r){const e=n();f[s+r]=t.length;for(let n=0;n<t.length;n++)if(e<t[n]){f[s+r]=n;break}}}return l||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(p,"int32",f)}};function rD(e,t,n){const s=r.createScalarValue(-1,n);return I$([],t,s,e,n)}const sD={kernelName:"Neg",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;TA(r,"neg");const s=n.data.get(r.dataId).values,[a,i]=rD(s,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,a)}},aD=f.nonMaxSuppressionV3Impl,iD={kernelName:"NonMaxSuppressionV3",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r;TA(s,"NonMaxSuppression");const u=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values,{selectedIndices:h}=aD(u,c,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},oD=f.nonMaxSuppressionV4Impl,lD={kernelName:"NonMaxSuppressionV4",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r;TA(s,"NonMaxSuppressionPadded");const c=n.data.get(s.dataId).values,h=n.data.get(a.dataId).values,{selectedIndices:d,validOutputs:p}=oD(c,h,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},uD=f.nonMaxSuppressionV5Impl,cD={kernelName:"NonMaxSuppressionV5",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r;TA(s,"NonMaxSuppressionWithScore");const c=n.data.get(s.dataId).values,h=n.data.get(a.dataId).values,d=i,p=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=uD(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},hD=zA((e,t)=>e!==t?1:0),dD={kernelName:"NotEqual",backendName:"cpu",kernelFunc:sR("NotEqual",hD,null,"bool")},pD={kernelName:"OneHot",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{indices:a}=t,{depth:i,onValue:o,offValue:l}=s;TA(a,"oneHot");const u=r.sizeFromShape(a.shape),c=new Float32Array(u*i);c.fill(l);const h=n.data.get(a.dataId).values;for(let r=0;r<u;++r)h[r]>=0&&h[r]<i&&(c[r*i+h[r]]=o);return n.makeTensorInfo([...a.shape,i],"int32",c)}};function fD(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=eR({inputs:{input:r},backend:n}),t=fD({inputs:{x:e},backend:n}),s=QR({inputs:{input:r},backend:n}),a=fD({inputs:{x:s},backend:n}),i=YA({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}return sF({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const mD={kernelName:"ZerosLike",backendName:"cpu",kernelFunc:fD},gD={kernelName:"OnesLike",backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===s.dtype){const t=eR({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=QR({inputs:{input:s},backend:r}),i=fD({inputs:{x:a},backend:r}),o=YA({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}return sF({backend:r,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}};function yD(e){const{inputs:t,backend:n,attrs:s}=e,{axis:a}=s;if(1===t.length)return H$({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const i=t[0].shape,o=t[0].dtype;t.forEach(e=>{r.assertShapesMatch(i,e.shape,"All tensors passed to stack must have matching shapes"),r.assert(o===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});const l=[],u=t$({inputs:t.map(e=>{const t=H$({inputs:{input:e},backend:n,attrs:{dim:a}});return l.push(t),t}),backend:n,attrs:{axis:a}});return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),u}const bD={kernelName:"Pack",backendName:"cpu",kernelFunc:yD},xD={kernelName:"PadV2",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{paddings:i,constantValue:o}=s;TA(a,"pad");const l=i.map((e,t)=>e[0]+a.shape[t]+e[1]),u=i.map(e=>e[0]),c=n.data.get(a.dataId).values,h=r.sizeFromShape(a.shape),d=a.shape.length,p=r.computeStrides(a.shape),f=r.sizeFromShape(l),m=l.length,g=r.computeStrides(l),y=r.getTypedArrayFromDType(a.dtype,f);0!==o&&y.fill(o);for(let b=0;b<h;b++){const e=r.indexToLoc(b,d,p).map((e,t)=>e+u[t]);y[r.locToIndex(e,m,g)]=c[b]}return{dataId:n.write(y,l,a.dtype),shape:l,dtype:a.dtype}}},wD={kernelName:"Pow",backendName:"cpu",kernelFunc:sR("Pow",zA((e,t)=>Math.pow(e,t)))};function vD(e,t,n,s){const[a,i]=p.computeOutAndReduceShapes(e,s),o=nm(t,"int32"),l=r.makeZerosTypedArray(r.sizeFromShape(a),o),u=r.sizeFromShape(i);for(let r=0;r<l.length;++r){const e=r*u;let t=1;for(let r=0;r<u;++r)t*=n[e+r];l[r]=t}return{outVals:l,outShape:a,outDtype:o}}const kD={kernelName:"Prod",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,keepDims:o}=s;TA(a,"prod");const l=a.shape.length,u=r.parseAxisParam(i,a.shape),c=p.getAxesPermutation(u,l);let h=u,d=a;const f=[];null!=c&&(d=vR({inputs:{x:a},backend:n,attrs:{perm:c}}),f.push(d),h=p.getInnerMostAxes(h.length,l));const m=n.data.get(d.dataId).values,{outVals:g,outShape:y,outDtype:b}=vD(d.shape,d.dtype,m,h);let x=y;return o&&(x=p.expandShapeToKeepDim(y,u)),f.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(x,b,g)}};function SD(e,t,n,s){if(e===t||e<t&&n<0||t<e&&n>1)return r.makeZerosTypedArray(0,s);const a=Math.abs(Math.ceil((t-e)/n)),i=r.makeZerosTypedArray(a,s);t<e&&1===n&&(n=-1),i[0]=e;for(let r=1;r<i.length;r++)i[r]=i[r-1]+n;return i}const ID={kernelName:"Range",backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,dtype:a,step:i}=n,o=SD(r,s,i,a);return t.makeTensorInfo([o.length],a,o)}},CD={kernelName:"Reciprocal",backendName:"cpu",kernelFunc:AA("Reciprocal",e=>1/e)},ND={kernelName:"ResizeBilinear",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:a}=t,{alignCorners:i,halfPixelCenters:o,size:l}=s;TA(a,"resizeBilinear");const u=r.computeStrides(a.shape),[c,h]=l,[d,p,f,m]=a.shape,g=n.data.get(a.dataId).values,y=new Float32Array(r.sizeFromShape([d,c,h,m])),b=[i&&c>1?p-1:p,i&&h>1?f-1:f],x=[i&&c>1?c-1:c,i&&h>1?h-1:h];let w=0;const v=b[0]/x[0],k=b[1]/x[1];for(let r=0;r<d;r++)for(let e=0;e<c;e++){let t;t=o?v*(e+.5)-.5:v*e;const n=Math.max(0,Math.floor(t)),s=t-n,a=Math.min(p-1,Math.ceil(t)),i=r*u[0]+n*u[1],l=r*u[0]+a*u[1];for(let e=0;e<h;e++){let t;t=o?k*(e+.5)-.5:k*e;const n=Math.max(0,Math.floor(t)),r=t-n,a=Math.min(f-1,Math.ceil(t)),c=i+n*u[2],h=l+n*u[2],d=i+a*u[2],p=l+a*u[2];for(let e=0;e<m;e++){const t=g[c+e],n=g[h+e],a=t+(g[d+e]-t)*r;y[w++]=a+(n+(g[p+e]-n)*r-a)*s}}}return n.makeTensorInfo([d,c,h,m],"float32",y)}},TD={kernelName:"ResizeBilinearGrad",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:a,dy:i}=t,{alignCorners:o}=s;TA([i,a],"resizeBilinearGrad");const l=r.computeStrides(a.shape),[u,c,h,d]=a.shape,[,p,f]=i.shape,m=new Float32Array(u*c*h*d),g=[o&&p>1?c-1:c,o&&f>1?h-1:h],y=[o&&p>1?p-1:p,o&&f>1?f-1:f],b=g[0]/y[0],x=g[1]/y[1],w=n.data.get(i.dataId).values;let v=0;for(let r=0;r<u;r++){const e=r*l[0];for(let t=0;t<p;t++){const n=t*b,r=Math.floor(n),s=Math.min(Math.ceil(n),c-1),a=e+r*l[1],i=e+s*l[1],o=n-r,u=1-o;for(let e=0;e<f;e++){const t=e*x,n=Math.floor(t),r=Math.min(Math.ceil(t),h-1),s=t-n,c=1-s,p=a+n*l[2],f=a+r*l[2],g=i+n*l[2],y=i+r*l[2],b=u*c,k=u*s,S=o*c,I=o*s;for(let e=0;e<d;e++){const t=w[v++];m[p+e]+=t*b,m[f+e]+=t*k,m[g+e]+=t*S,m[y+e]+=t*I}}}}return n.makeTensorInfo([u,h,c,d],"float32",m)}},_D={kernelName:"ResizeNearestNeighbor",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:a}=t,{alignCorners:i,halfPixelCenters:o,size:l}=s;TA(a,"resizeNearestNeighbor");const u=r.computeStrides(a.shape),[c,h]=l,[d,p,f,m]=a.shape,g=n.data.get(a.dataId).values,y=new Float32Array(d*c*h*m),b=[i&&c>1?p-1:p,i&&h>1?f-1:f],x=[i&&c>1?c-1:c,i&&h>1?h-1:h],w=b[0]/x[0],v=b[1]/x[1];let k=0;for(let r=0;r<d;r++){const e=r*u[0];for(let t=0;t<c;t++){const n=o?w*(t+.5):w*t;let r=Math.min(p-1,i?Math.round(n):Math.floor(n));o&&(r=Math.max(0,r));const s=e+r*u[1];for(let e=0;e<h;e++){const t=o?v*(e+.5):v*e;let n=Math.min(f-1,i?Math.round(t):Math.floor(t));o&&(n=Math.max(0,n));const r=s+n*u[2];for(let e=0;e<m;e++)y[k++]=g[r+e]}}}return n.makeTensorInfo([d,c,h,m],a.dtype,y)}},ED={kernelName:"ResizeNearestNeighborGrad",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:a,dy:i}=t,{alignCorners:o}=s;TA([i,a],"resizeNearestNeighborGrad");const l=r.computeStrides(a.shape),u=r.computeStrides(i.shape),[c,h,d,p]=a.shape,[,f,m]=i.shape,g=new Float32Array(c*h*d*p),y=n.data.get(i.dataId).values,b=[o&&f>1?h-1:h,o&&m>1?d-1:d],x=[o&&f>1?f-1:f,o&&m>1?m-1:m],w=b[0]/x[0],v=b[1]/x[1],k=1/w,S=1/v,I=2*Math.ceil(k)+2,C=2*Math.ceil(S)+2;for(let r=0;r<c;r++){const e=r*l[0];for(let t=0;t<h;t++){const n=e+t*l[1],r=Math.floor(t*k),s=Math.floor(r-I/2);for(let a=0;a<d;a++){const r=n+a*l[2],i=Math.floor(a*S),c=Math.floor(i-C/2);for(let n=0;n<p;n++){let i=0;for(let r=0;r<I;r++){const l=r+s;if(l<0||l>=f)continue;const p=e+l*u[1],g=l*w;if(t===Math.min(h-1,o?Math.round(g):Math.floor(g)))for(let e=0;e<C;e++){const t=e+c;if(t<0||t>=m)continue;const r=p+t*u[2],s=t*v;a===Math.min(d-1,o?Math.round(s):Math.floor(s))&&(i+=y[r+n])}}g[r+n]=i}}}}return n.makeTensorInfo(a.shape,a.dtype,g)}},AD={kernelName:"Reverse",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{dims:i}=s;TA(a,"reverse");const o=a.shape.length,l=r.parseAxisParam(i,a.shape);if(0===o)return DA({inputs:{x:a},backend:n});const u=new Wf(a.shape,a.dtype),c=n.bufferSync(a);for(let r=0;r<u.size;r++){const e=u.indexToLoc(r),t=e.slice();l.forEach(e=>t[e]=a.shape[e]-1-t[e]),u.set(c.get(...t),...e)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}},RD={kernelName:"RotateWithOffset",backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,{radians:a,fillValue:i,center:o}=t,l=n,u=r.getTypedArrayFromDType(s.dtype,r.sizeFromShape(s.shape)),[c,h,d,f]=s.shape,[m,g]=p.getImageCenter(o,h,d),y=Math.sin(a),b=Math.cos(a),x=l.data.get(s.dataId).values;for(let r=0;r<c;r++){const e=r*d*h*f;for(let t=0;t<h;t++){const n=t*(d*f);for(let r=0;r<d;r++){const s=r*f;for(let a=0;a<f;a++){const o=[c,t,r,a],l=o[2],p=o[1];let w=(l-m)*b-(p-g)*y,v=(l-m)*y+(p-g)*b;w=Math.round(w+m),v=Math.round(v+g);let k=i;"number"!=typeof i&&(k=3===a?255:i[a]),w>=0&&w<d&&v>=0&&v<h&&(k=x[e+v*(d*f)+w*f+a]),u[e+n+s+a]=k}}}}return{dataId:l.write(u,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},$D={kernelName:"Round",backendName:"cpu",kernelFunc:AA("Round",e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})},FD=jA(e=>1/Math.sqrt(e)),DD={kernelName:"Rsqrt",backendName:"cpu",kernelFunc:RA("Rsqrt",FD)};function OD(e,t,n,r,s,a,i,o,l,u){const c=[r/s,s],h=e.values,d=t.values;if(0===r)return gg(n,t.dtype);const p=gg(c,t.dtype);p.values.fill(l);for(let f=0;f<a;f++){const e=[];let a=0;for(let t=0;t<i;t++){const n=h[f*i+t];e.push(n),a+=n*o[t]}if(a<0||a>=r/s)throw new Error(`Invalid indices: ${e} does not index into ${n}`);for(let n=0;n<s;n++)u?p.values[a*s+n]+=d[f*s+n]:p.values[a*s+n]=0===t.rank?d[0]:d[f*s+n]}return p}const MD={kernelName:"ScatterNd",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=p.calculateShapes(a,s,i),d=OD(n.bufferSync(s),n.bufferSync(a),i,h,u,l,o,c,0,!0);return n.makeTensorInfo(i,d.dtype,d.values)}},LD={kernelName:"Select",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:s,t:a,e:i}=t;TA([s,a,i],"select");const o=s.shape.length,l=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,c=n.data.get(i.dataId).values,h=nm(a.dtype,i.dtype),d=r.makeZerosTypedArray(r.sizeFromShape(a.shape),h);let p=0;const f=0===o||o>1||1===a.shape.length?1:r.sizeFromShape(a.shape.slice(1));for(let r=0;r<l.length;r++)for(let e=0;e<f;e++)d[p++]=1===l[r]?u[r]:c[r];return n.makeTensorInfo(a.shape,h,d)}},zD=p.SELU_SCALEALPHA,PD=p.SELU_SCALE,BD={kernelName:"Selu",backendName:"cpu",kernelFunc:AA("Selu",e=>e>=0?PD*e:zD*(Math.exp(e)-1))},UD={kernelName:"Sign",backendName:"cpu",kernelFunc:AA("Sign",e=>e<0?-1:e>0?1:0)},VD={kernelName:"Sin",backendName:"cpu",kernelFunc:AA("Sin",e=>Math.sin(e))},WD={kernelName:"Sinh",backendName:"cpu",kernelFunc:AA("Sinh",e=>Math.sinh(e))},GD=Math.log(1.1920928955078125e-7)+2,HD={kernelName:"Softplus",backendName:"cpu",kernelFunc:AA("Softplus",e=>{const t=e>-GD,n=e<GD,r=Math.exp(e);let s;return s=n?r:t?e:Math.log(1+r),s})},jD={kernelName:"SpaceToBatchND",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{blockShape:i,paddings:o}=s;TA([a],"spaceToBatchND");const l=r.sizeFromShape(i),u=[[0,0]];u.push(...o);for(let r=1+i.length;r<a.shape.length;++r)u.push([0,0]);const c=xD.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),h=p.getReshaped(c.shape,i,l,!1),d=p.getPermuted(h.length,i.length,!1),f=p.getReshapedPermuted(c.shape,i,l,!1),m=cR({inputs:{x:c},backend:n,attrs:{shape:h}}),g=vR({inputs:{x:m},backend:n,attrs:{perm:d}}),y=cR({inputs:{x:g},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),y}};function qD(e,t,n,s,a,i,o){const l=t[0],u=i[0],c=new Array(u),h=new Array(l),d=t[1];if(0===u){if(0!==l)throw new Error(p.getSparseFillEmptyRowsIndicesDenseShapeMismatch(l));return[r.getArrayFromDType(n,0),[0,d],r.getArrayFromDType(a,0),c,h]}let f=!0,m=0;const g=new Array(u).fill(0);for(let r=0;r<l;++r){const t=e[r*d];if(t<0)throw new Error(p.getSparseFillEmptyRowsNegativeIndexErrorMessage(r,t));if(t>=u)throw new Error(p.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(r,t,u));++g[t],f=f&&t>=m,m=t}let y=!0;for(let r=0;r<u;++r){const e=0===g[r];c[r]=e,y=y&&!e,g[r]=Math.max(g[r],1),r>0&&(g[r]+=g[r-1])}if(y&&f){const t=e,n=s;for(let e=0;e<l;++e)h[e]=e;return[t,[l,d],n,c,h]}{const t=g[u-1],i=r.getArrayFromDType(n,t*d),p=r.getArrayFromDType(a,t),f=new Array(u).fill(0);for(let n=0;n<l;++n){const t=e[n*d],r=(0===t?0:g[t-1])+f[t];f[t]++;for(let s=0;s<d;++s)i[r*d+s]=e[n*d+s];p[r]=s[n],h[n]=r}for(let e=0;e<u;++e)if(0===f[e]){const t=0===e?0:g[e-1];i[t*d+0]=e;for(let e=1;e<d;++e)i[t*d+e]=0;p[t]=o}return[i,[t,d],p,c,h]}}const KD={kernelName:"SparseFillEmptyRows",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error("Dense shape must be a vector, saw:\n        "+a.shape);if(2!==r.shape.length)throw new Error("Indices must be a matrix, saw:\n        "+r.shape);if(1!==s.shape.length)throw new Error("Values must be a vector, saw:\n        "+s.shape);if(0!==i.shape.length)throw new Error("Default value must be a scalar, saw:\n        "+i.shape);const o=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,c=n.data.get(i.dataId).values[0],[h,d,p,f,m]=qD(o,r.shape,r.dtype,l,s.dtype,u,c);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],s.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(e=>Number(e)))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};function XD(e,t,n,s,a){const i=r.sizeFromShape(s),o=t[0],l=a.length,u=[];let c=1,h=-1;for(let r=0;r<l;++r){const e=a[r];if(-1===e){if(-1!==h)throw new Error(p.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(h,r));h=r,u.push(1)}else{if(e<0)throw new Error(p.getSparseReshapeNegativeOutputDimErrorMessage(r,e));c*=e,u.push(e)}}if(-1!==h){if(c<=0)throw new Error(p.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());const e=Math.trunc(i/c);if(c*e!==i)throw new Error(p.getSparseReshapeInputOutputMultipleErrorMessage(s,u));u[h]=e}if(r.sizeFromShape(u)!==i)throw new Error(p.getSparseReshapeInputOutputMismatchErrorMessage(s,u));const d=s.length,f=[];if(d>0){f[d-1]=1;for(let e=d-2;e>=0;--e)f[e]=f[e+1]*s[e+1]}const m=[];if(l>0){m[l-1]=1;for(let e=l-2;e>=0;--e)m[e]=m[e+1]*u[e+1]}const g=r.getArrayFromDType(n,o*l);for(let r=0;r<o;++r){let t=0;for(let n=0;n<d;++n)t+=e[r*d+n]*f[n];for(let e=0;e<l;++e)g[r*l+e]=Math.trunc(t/m[e]),t%=m[e]}return[g,[o,l],u]}const ZD={kernelName:"SparseReshape",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:a}=t;if(2!==r.shape.length)throw new Error("Input indices should be a matrix but received shape\n        "+r.shape);if(1!==s.shape.length)throw new Error("Input shape should be a vector but received shape\n        "+s.shape);if(1!==a.shape.length)throw new Error("Target shape should be a vector but received shape "+a.shape);const i=Array.from(n.data.get(s.dataId).values),o=n.data.get(r.dataId).values,l=Array.from(n.data.get(a.dataId).values),[u,c,h]=XD(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(c,r.dtype,u),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}};function YD(e,t,n,s,a,i=!1,o=0){const l=s.length,u=[t[0],e.length/t[0]],c=u[1],h=l>0?a[l-1]+1:0;if(h<0)throw new Error(p.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());const d=t.slice();d[0]=h;const f=d.reduce((e,t)=>e*t,1),m=r.getArrayFromDType(n,f);if(0===l)return h>0&&m.fill(o),[m,d];if(h<=0)throw new Error(p.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let g=0,y=1,b=0,x=a[g];for(;;){let t=0;if(y<l){if(t=a[y],x===t){++y;continue}if(x>=t)throw new Error(p.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(x<0||x>=h)throw new Error(p.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(x,h));x>b&&m.fill(o,b*c,x*c);for(let n=g;n<y;++n){const t=s[n];if(t<0||t>=u[0])throw new Error(p.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(n,s[n],u[0]));for(let n=0;n<c;n++)m[x*c+n]+=e[t*c+n]}if(i)for(let e=0;e<c;e++)m[x*c+e]/=y-g;if(g=y,++y,b=x+1,x=t,y>l)break}return b<h&&m.fill(o,b*c,h*c),[m,d]}const JD={kernelName:"SparseSegmentMean",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error("Indices should be a vector but received shape\n          "+s.shape);if(1!==a.shape.length)throw new Error("Segment ids should be a vector but received shape\n          "+a.shape);if(s.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,[u,c]=YD(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(c,r.dtype,u)}},QD={kernelName:"SparseSegmentSum",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error("Indices should be a vector but received shape\n         "+s.shape);if(1!==a.shape.length)throw new Error("Segment ids should be a vector but received shape\n         "+a.shape);if(s.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,[u,c]=YD(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(c,r.dtype,u)}},eO={kernelName:"SparseToDense",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=p.calculateShapes(a,s,o),f=OD(n.bufferSync(s),n.bufferSync(a),o,d,c,u,l,h,n.data.get(i.dataId).values[0],!1);return n.makeTensorInfo(o,f.dtype,f.values)}},tO={kernelName:"SplitV",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{numOrSizeSplits:i,axis:o}=s,l=r.parseAxisParam(o,a.shape)[0],u=p.prepareSplitSize(a,i,l),c=new Array(a.shape.length).fill(0),h=a.shape.slice();return u.map(e=>{const t=[...h];t[l]=e;const r=UR({inputs:{x:a},backend:n,attrs:{begin:c,size:t}});return c[l]+=e,r})}},nO=jA(e=>Math.sqrt(e)),rO={kernelName:"Sqrt",backendName:"cpu",kernelFunc:AA("Sqrt",e=>Math.sqrt(e))},sO={kernelName:"Square",backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;TA(n,"square");const s=r.data.get(n.dataId).values,a=new Float32Array(s.length);for(let i=0;i<s.length;++i){const e=s[i];a[i]=e*e}return{dataId:r.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},aO=zA((e,t)=>{const n=e-t;return n*n}),iO={kernelName:"SquaredDifference",backendName:"cpu",kernelFunc:sR("SquaredDifference",aO)},oO={kernelName:"Step",backendName:"cpu",kernelFunc:AA("Step",(e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})};function lO(e,t,n,r){const s=gg(e,t.dtype);for(let a=0;a<s.size;a++){const e=s.indexToLoc(a),i=new Array(e.length);for(let t=0;t<i.length;t++)i[t]=e[t]*n[t]+r[t];s.set(t.get(...i),...e)}return s}const uO={kernelName:"StridedSlice",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{begin:i,end:o,strides:l,beginMask:c,endMask:h,ellipsisMask:d,newAxisMask:p,shrinkAxisMask:f}=s;TA(a,"stridedSlice");const{finalShapeSparse:m,finalShape:g,isIdentity:y,sliceDim0:b,isSimpleSlice:x,begin:w,end:v,strides:k}=u.sliceInfo(a.shape,i,o,l,c,h,d,p,f);let S;if(y)S=cR({inputs:{x:a},backend:n,attrs:{shape:g}});else if(b||x){r.assert(a.shape.length>=1,()=>"Input must have rank at least 1, got: "+a.shape.length);const e=u.computeOutShape(w,v,k),t=UR({inputs:{x:a},backend:n,attrs:{begin:w,size:e}});S=cR({inputs:{x:t},backend:n,attrs:{shape:g}}),n.disposeIntermediateTensorInfo(t)}else{const e=lO(m,n.bufferSync(a),k,w);S=n.makeTensorInfo(g,e.dtype,e.values)}return S}};class cO{constructor(e,t,n,s,a,i){this.separator=r.encodeString(e),this.nGramWidths=t,this.leftPad=r.encodeString(n),this.rightPad=r.encodeString(s),this.padWidth=a,this.preserveShort=i}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,s,a){for(let i=0;i<s;++i){const o=this.getPadWidth(a),l=Math.max(0,o-i),u=Math.max(0,o-(s-(i+1))),c=a-(l+u),h=t+(l>0?0:i-o);let d=0;d+=l*this.leftPad.length;for(let t=0;t<c;++t)d+=e[h+t].length;d+=u*this.rightPad.length,d+=(l+u+c-1)*this.separator.length,n[r+i]=new Uint8Array(d);const p=n[r+i];let f=0;const m=e=>e.forEach(e=>p[f++]=e);for(let e=0;e<l;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[h+t]),m(this.separator);if(c>0){m(e[h+c-1]);for(let e=0;e<u;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<u-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,s=t.length;if(s>0){let e=t[0];if(0!==e)throw new Error("First split value must be 0, got "+e);for(let r=1;r<s;++r){let s=t[r]>=e;if(s=s&&t[r]<=n,!s)throw new Error(`Invalid split value ${t[r]}, must be in [${e}, ${n}]`);e=t[r]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const a=s-1,i=r.getArrayFromDType("int32",s);if(0===n||0===s){const e=new Array(n);for(let t=0;t<=a;++t)i[t]=0;return[e,i]}i[0]=0;for(let r=1;r<=a;++r){const e=t[r]-t[r-1];let n=0;this.nGramWidths.forEach(t=>{n+=this.getNumNGrams(e,t)}),this.preserveShort&&e>0&&0===n&&(n=1),i[r]=i[r-1]+n}const o=new Array(i[a]);for(let r=0;r<a;++r){const n=t[r];let s=i[r];if(this.nGramWidths.forEach(a=>{const i=this.getNumNGrams(t[r+1]-t[r],a);this.createNGrams(e,n,o,s,i,a),s+=i}),this.preserveShort&&s===i[r]){const a=t[r+1]-t[r];if(0===a)continue;this.createNGrams(e,n,o,s,1,a+2*this.padWidth)}}return[o,i]}}function hO(e,t,n,r,s,a,i,o){return new cO(n,r,s,a,i,o).compute(e,t)}const dO={kernelName:"StringNGrams",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:a,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:c,dataSplits:h}=t,d=n.data.get(c.dataId).values,p=n.data.get(h.dataId).values,[f,m]=hO(d,p,s,a,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};function pO(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){const s=t[0];let a=e.indexOf(s);for(;-1!==a;){const t=e.subarray(0,a);n&&0===t.length||r.push(t),a=(e=e.subarray(a+1)).indexOf(s)}return void(n&&0===e.length||r.push(e))}let s=0;for(let a=0;a<e.length+1;a++)if(a===e.length||-1!==t.indexOf(e[a])){const t=e.subarray(s,a);n&&0===t.length||r.push(t),s=a+1}}function fO(e,t,n){const s=e.length,a=[];let i=0,o=0;const l=new Array(s);for(let r=0;r<s;++r){const s=a.length;pO(e[r],t,n,a);const u=a.length-s;l[r]=u,i+=u,o=Math.max(o,u)}const u=r.getArrayFromDType("int32",2*i),c=new Array(i),h=[s,o];let d=0;for(let r=0;r<s;++r)for(let e=0;e<l[r];++e)u[2*d]=r,u[2*d+1]=e,c[d]=a[d],++d;return[u,c,h]}const mO={kernelName:"StringSplit",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:a,delimiter:i}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error("Input must be a vector, got shape: "+a.shape);if(0!==i.shape.length)throw new Error("Delimiter must be a scalar, got shape: "+i.shape);const o=n.data.get(a.dataId).values,l=n.data.get(i.dataId).values[0],[u,c,h]=fO(o,l,s),d=c.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};function gO(e,t){const n=r.getArrayFromDType("int32",e.length);for(let s=0;s<e.length;++s)n[s]=r.fingerPrint64(e[s]).modulo(t).getLowBitsUnsigned();return n}const yO={kernelName:"StringToHashBucketFast",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const i=gO(n.data.get(a.dataId).values,s);return n.makeTensorInfo(a.shape,"int32",i)}},bO={kernelName:"Tan",backendName:"cpu",kernelFunc:AA("Tan",e=>Math.tan(e))},xO=AA("Tanh",e=>Math.tanh(e));function wO(e,t){const n=new Array(e.rank);for(let s=0;s<n.length;s++)n[s]=e.shape[s]*t[s];const r=gg(n,e.dtype);for(let s=0;s<r.values.length;++s){const t=r.indexToLoc(s),n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=t[r]%e.shape[r];const a=e.locToIndex(n);r.values[s]=e.values[a]}return r}const vO=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function kO(e,t,n=0,s=e.length-1){for(;s>n;){if(s-n>600){const r=s-n+1,a=t-n+1,i=Math.log(r),o=.5*Math.exp(2*i/3),l=.5*Math.sqrt(i*o*(r-o)/r)*Math.sign(a-r/2);kO(e,t,Math.max(n,Math.floor(t-a*o/r+l)),Math.min(s,Math.floor(t+(r-a)*o/r+l)))}const a=e[t];let i=n,o=s;for(r.swap(e,n,t),vO(e[s],a)>0&&r.swap(e,n,s);i<o;){for(r.swap(e,i,o),i++,o--;vO(e[i],a)<0;)i+=1;for(;vO(e[o],a)>0;)o-=1}0===vO(e[n],a)?r.swap(e,n,o):(o+=1,r.swap(e,o,s)),o<=t&&(n=o+1),t<=o&&(s=o-1)}}function SO(e,t,n,s,a){const i=t[t.length-1],[o,l]=[e.length/i,i],u=r.getTypedArrayFromDType(n,o*s),c=r.getTypedArrayFromDType("int32",o*s);for(let r=0;r<o;r++){const t=r*l,n=e.subarray(t,t+l);let i=new Array(n.length);n.forEach((e,t)=>i[t]={value:e,index:t}),s<i.length&&(kO(i,s),i=i.slice(0,s)),a&&i.sort(vO);const o=r*s,h=u.subarray(o,o+s),d=c.subarray(o,o+s);for(let e=0;e<s;e++)h[e]=i[e].value,d[e]=i[e].index}const h=t.slice();return h[h.length-1]=s,[gg(h,n,u),gg(h,"int32",c)]}function IO(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return r.clamp(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;return n<0?t<=1?n=0:n+=t*(Math.trunc(-n/(t-1))+1):n>t-1&&(t<=1?n=0:n-=t*Math.trunc(n/(t-1))),r.clamp(0,n,t-1)}(e,t);case"nearest":return function(e,t){return r.clamp(0,e,t-1)}(e,t);case"constant":default:return function(e,t){return e}(e)}}function CO(e,t,n,r,s,a,i,o,l,u,c){return 0<=o&&o<t&&0<=l&&l<n?e[i*r+o*s+l*a+u]:c}function NO(e,t,n,r,s,a,i,o,l,u,c){return CO(e,t,n,r,s,a,i,Math.round(o),Math.round(l),u,c)}function TO(e,t,n,r,s,a,i,o,l,u,c){const h=Math.floor(o),d=Math.floor(l),p=h+1,f=d+1;return(p-o)*((f-l)*CO(e,t,n,r,s,a,i,h,d,u,c)+(l-d)*CO(e,t,n,r,s,a,i,h,f,u,c))+(o-h)*((f-l)*CO(e,t,n,r,s,a,i,p,d,u,c)+(l-d)*CO(e,t,n,r,s,a,i,p,f,u,c))}function _O(e,t,n,s){const a=r.parseAxisParam(t,n)[0],i=[1,n[0],1];for(let r=0;r<a;r++)i[0]*=n[r];i[1]=n[a];for(let r=a+1;r<n.length;r++)i[2]*=n[r];const o={},l=new Int32Array(n[a]),u=new Wf(i,s,e),c=[],h=1===i[0]&&1===i[2];for(let r=0;r<n[a];r++){let t;if(h)t=e[r].toString();else{const e=[];for(let t=0;t<i[0];t++)for(let n=0;n<i[2];n++)e.push(u.get(t,r,n));t=e.join(",")}if(void 0!==o[t])l[r]=o[t];else{const e=Object.keys(o).length;o[t]=e,l[r]=e,c.push(r)}}const d=i.slice();d[1]=Object.keys(o).length;const p=new Wf(d,s);c.forEach((e,t)=>{for(let n=0;n<i[0];n++)for(let r=0;r<i[2];r++)p.set(u.get(n,e,r),n,t,r)});const f=n.slice();return f[a]=d[1],{outputValues:p.values,outputShape:f,indices:l}}const EO=[fR,gR,yR,bR,uR,xR,SR,IR,CR,NR,TR,_R,ER,AR,RR,OR,MR,LR,zR,pR,PR,WR,jR,qR,rR,XR,ZR,JA,YR,n$,a$,i$,s$,l$,u$,o$,c$,h$,d$,p$,f$,m$,y$,b$,x$,w$,v$,S$,k$,Z$,A$,FA,R$,D$,U$,G$,j$,K$,rF,aF,iF,lF,uF,cF,hF,pF,mF,yF,xF,OA,wF,e$,vF,kF,SF,LA,CF,TF,EF,RF,$F,FF,DF,OF,MF,LF,VF,WF,GF,HF,jF,qF,BF,KF,XF,YF,JF,QF,nD,T$,sD,iD,lD,cD,dD,pD,gD,bD,xD,wD,UA,kD,ID,tR,CD,WA,HA,hR,ND,TD,_D,ED,AD,RD,$D,DD,MD,LD,BD,XA,UD,VD,WD,VR,tD,HD,jD,KD,ZD,JD,QD,eO,tO,rO,sO,iO,oO,uO,dO,mO,yO,eF,E$,bO,{kernelName:"Tanh",backendName:"cpu",kernelFunc:xO},{kernelName:"Tile",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;TA(s,"tile");const i=wO(n.bufferSync(s),a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}},{kernelName:"TopK",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:i}=r;TA(s,"topk");const o=n.data.get(s.dataId).values,[l,u]=SO(o,s.shape,s.dtype,a,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}},kR,{kernelName:"Transform",backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:s}=e,{image:a,transforms:i}=t,{interpolation:o,fillMode:l,fillValue:u,outputShape:c}=n,[h,d,p,f]=a.shape,[m,g]=null!=c?c:[d,p],y=[h,m,g,f],b=r.computeStrides(a.shape),x=b[0],w=b[1],v=b[2],k=r.getTypedArrayFromDType(a.dtype,r.sizeFromShape(y));k.fill(u);const S=s.data.get(a.dataId).values,I=s.data.get(i.dataId).values;for(let r=0;r<h;++r){const e=1===i.shape[0]?I:I.subarray(8*r,8*r+8);for(let t=0;t<m;++t)for(let n=0;n<g;++n)for(let s=0;s<f;++s){let a;const i=e[6]*n+e[7]*t+1;if(0===i)continue;const c=(e[3]*n+e[4]*t+e[5])/i,h=IO((e[0]*n+e[1]*t+e[2])/i,p,l),f=IO(c,d,l);switch(o){case"nearest":a=NO(S,d,p,x,w,v,r,f,h,s,u);break;case"bilinear":a=TO(S,d,p,x,w,v,r,f,h,s,u);break;default:throw new Error("Error in Transform: Expect 'nearest' or 'bilinear', but got "+o)}k[r*x+t*w+n*v+s]=a}return s.makeTensorInfo(y,a.dtype,k)}return{dataId:s.write(k,y,a.dtype),shape:a.shape,dtype:a.dtype}}},{kernelName:"Unique",backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;TA(a,"unique");const i=r.data.get(a.dataId).values,{outputValues:o,outputShape:l,indices:u}=_O(i,s,a.shape,a.dtype);return[r.makeTensorInfo(l,a.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}},{kernelName:"Unpack",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const i=s.shape.length,o=s.shape[a],l=new Array(i-1);let u=0;for(let p=0;p<i;p++)p!==a&&(l[u++]=s.shape[p]);const c=new Array(i).fill(0),h=s.shape.slice();h[a]=1;const d=new Array(o);for(let p=0;p<d.length;p++){c[a]=p;const e=UR({inputs:{x:s},backend:n,attrs:{begin:c,size:h}});d[p]=cR({inputs:{x:e},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(e)}return d}},{kernelName:"UnsortedSegmentSum",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,segmentIds:i}=t,{numSegments:o}=s;TA(a,"unsortedSegmentSum");const l=[],u=[],c=a.shape.length-i.shape.length;let h=i;for(let r=0;r<c;++r){const e=H$({inputs:{input:h},backend:n,attrs:{dim:r+1}});h=e,u.push(e)}for(let p=0;p<o;++p){const e=r.createScalarValue(p,"int32"),t=n.makeTensorInfo([],"int32",e),s=F$({inputs:{a:t,b:h},backend:n}),i=nR({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),o=N$({inputs:{a:i,b:a},backend:n}),c=_$({inputs:{x:o},backend:n,attrs:{axis:0,keepDims:!1}});l.push(c),u.push(t),u.push(s),u.push(i),u.push(o),u.push(c)}const d=yD({inputs:l,backend:n,attrs:{axis:0}});return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),d}},mD];for(const pG of EO)ff(pG);const AO={},RO={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function $O(e){if(!(e in AO)){const t=function(e){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e);return t.addEventListener("webglcontextlost",t=>{t.preventDefault(),delete AO[e]},!1),1===e?t.getContext("webgl",RO)||t.getContext("experimental-webgl",RO):t.getContext("webgl2",RO)}(e);if(null===t)return console.log("Could not get context for WebGL version",e),null;AO[e]=t}const t=AO[e];return null==t||t.isContextLost()?(delete AO[e],$O(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),AO[e])}var FO,DO,OO;function MO(e,t){return[t,e]}function LO(e){const t=r.sizeFromShape(e),n=Math.ceil(t/4);return r.sizeToSquarishShape(n)}function zO(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function PO(e,t){const n=e;let r,s,a,i,o,l,u,c,h,d;return 2===tf().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,a=n.RGBA16F,i=n.RGBA32F,o=n.RED,u=4,c=1,h=n.HALF_FLOAT,d=n.FLOAT,l=n.RGBA8):(r=e.RGBA,s=e.RGBA,a=e.RGBA,i=n.RGBA,o=e.RGBA,u=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT,l=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}function BO(e,t){const n=t();return tf().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"Unknown error code "+t}}(e,t))}(e),n}function UO(e){return!!(tf().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function VO(e,t){return XO(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(FO||(FO={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(DO||(DO={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(OO||(OO={}));const WO=/ERROR: [0-9]+:([0-9]+):/g;function GO(e,t){if(BO(e,()=>e.validateProgram(t)),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function HO(e,t,n,r,s,a,i){const o=e.getAttribLocation(t,n);return-1!==o&&(BO(e,()=>e.bindBuffer(e.ARRAY_BUFFER,r)),BO(e,()=>e.vertexAttribPointer(o,s,e.FLOAT,!1,a,i)),BO(e,()=>e.enableVertexAttribArray(o)),!0)}function jO(e,t,n){BO(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,n)),BO(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function qO(e,t){BO(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),BO(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function KO(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"unknown error "+t}}(e,t))}function XO(e,t,n){const r=BO(e,()=>t());if(null==r)throw new Error(n);return r}function ZO(e,t=2){return r.sizeFromShape(e.slice(0,e.length-t))}function YO(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function JO(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[ZO(e),...YO(e)]),t}function QO(e){return e%2==0}function eM(e,t){if(e=e.slice(-2),t=t.slice(-2),r.arraysEqual(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(QO(n)&&QO(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&QO(e[0])&&QO(t[0])}let tM,nM;function rM(e,t){return null!=e.getExtension(t)}function sM(e){try{if(null!=$O(e))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function aM(e){const t=PO(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),s}function iM(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&r.assert("complex64"!==e.dtype,()=>t+" does not support complex64 tensors in the WebGL backend.")})}const oM=tf();function lM(){let e,t,n,r,s,a,i,o,l,u;return 2===tf().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",s="texture",a="outputColor",i="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",s="texture2D",a="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:s,output:a,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function uM(e,t,n="index"){const s=r.computeStrides(t);return s.map((t,r)=>`int ${e[r]} = ${n} / ${t}; ${r===s.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${t}`:`index -= ${e[r]} * ${t}`};`).join("")}function cM(e,t,n="index"){const s=r.computeStrides(t);return s.map((t,r)=>`int ${e[r]} = ${n} / outShapeStrides[${r}]; ${r===s.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * outShapeStrides[${r}]`:`index -= ${e[r]} * outShapeStrides[${r}]`};`).join("")}function hM(e){const t=r.computeStrides(e).map(e=>e.toString());return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}oM.registerFlag("HAS_WEBGL",()=>oM.getNumber("WEBGL_VERSION")>0),oM.registerFlag("WEBGL_VERSION",()=>sM(2)?2:sM(1)?1:0),oM.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),oM.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>2===oM.get("WEBGL_VERSION")),oM.registerFlag("WEBGL_CPU_FORWARD",()=>!0),oM.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),oM.registerFlag("WEBGL_PACK",()=>oM.getBool("HAS_WEBGL")),oM.registerFlag("WEBGL_PACK_NORMALIZATION",()=>oM.getBool("WEBGL_PACK")),oM.registerFlag("WEBGL_PACK_CLIP",()=>oM.getBool("WEBGL_PACK")),oM.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>oM.getBool("WEBGL_PACK")),oM.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>oM.getBool("WEBGL_PACK")),oM.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>oM.getBool("WEBGL_PACK")),oM.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>oM.getBool("WEBGL_PACK")),oM.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>oM.getBool("WEBGL_PACK")),oM.registerFlag("WEBGL_PACK_REDUCE",()=>oM.getBool("WEBGL_PACK")),oM.registerFlag("WEBGL_LAZILY_UNPACK",()=>oM.getBool("WEBGL_PACK")),oM.registerFlag("WEBGL_CONV_IM2COL",()=>oM.getBool("WEBGL_PACK")),oM.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>function(e){if(null==tM){const t=$O(e);tM=t.getParameter(t.MAX_TEXTURE_SIZE)}return tM}(oM.getNumber("WEBGL_VERSION"))),oM.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>function(e){if(null==nM){const t=$O(e);nM=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,nM)}(oM.getNumber("WEBGL_VERSION"))),oM.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const e=oM.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=$O(e);return t=rM(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:rM(n,"EXT_disjoint_timer_query")?1:0,t}(e)}),oM.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>oM.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!a.isMobile()),oM.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>function(e){if(0===e)return!1;const t=$O(e);if(1===e){if(!rM(t,"OES_texture_float"))return!1}else if(!rM(t,"EXT_color_buffer_float"))return!1;return aM(t)}(oM.getNumber("WEBGL_VERSION"))),oM.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!oM.getBool("WEBGL_FORCE_F16_TEXTURES")&&oM.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),oM.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>function(e){if(0===e)return!1;const t=$O(e);if(1!==e){if(rM(t,"EXT_color_buffer_float"))return aM(t);const e="EXT_color_buffer_half_float";if(rM(t,e)){const n=t.getExtension(e);return function(e,t){const n=PO(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(s),a}(t,n)}return!1}return!!rM(t,"OES_texture_float")&&!!rM(t,"WEBGL_color_buffer_float")&&aM(t)}(oM.getNumber("WEBGL_VERSION"))),oM.registerFlag("WEBGL_FENCE_API_ENABLED",()=>{return 2===(e=oM.getNumber("WEBGL_VERSION"))&&null!=$O(e).fenceSync;var e}),oM.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>oM.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0),oM.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)}),oM.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>a.isMobile()?1:-1,e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)}),oM.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128),oM.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1),oM.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5),oM.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);const dM="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:pM}=p;const fM="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",mM="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",gM="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",yM="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function bM(e){return"offset"+e}function xM(e){const t=e.name,n=r.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function wM(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function vM(e,t,n){const{newShape:s,keptDims:a}=r.squeezeShape(t),i=t.length,o=e&&3===i&&1===t[0],l=o?t.slice(1):s,u=!e&&i>1&&!r.arraysEqual(t,n)&&s.length<i||o;return{useSqueezeShape:u,uniformShape:u?l:t,keptDims:a}}function kM(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function SM(e,t){return t.map(t=>e[t]).join(", ")}function IM(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((e,n)=>{const s=e.logicalShape,a=t[n],i=a.shape;if(!r.arraysEqual(s,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${s} and ${i} must match`);if(e.isUniform&&a.isUniform)return;const o=e.texShape,l=a.isUniform?null:a.texData.texShape;if(!r.arraysEqual(o,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${l} must match`)})}function CM(e){return tf().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class NM{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=FO.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=lM();this.outputShape=e,this.enableShapeUniforms=CM(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?cM(["r","c","d"],e):uM(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}class TM{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=FO.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=lM();this.outputShape=e,this.enableShapeUniforms=CM(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?cM(["r","c","d"],e):uM(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}class _M{constructor(e){this.variableNames=["A"],this.outTexUsage=DO.DOWNLOAD;const t=lM();this.outputShape=e,this.userCode=`\n      ${dM}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class EM{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=DO.DOWNLOAD;const t=lM();this.outputShape=e,this.userCode=`\n      ${dM}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}class AM{constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=lM();this.outputShape=e,this.enableShapeUniforms=CM(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)"),this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":hM(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / texShape[1];\n        int c = imod(flatIndex, texShape[1]);\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n        vec4 values = ${n.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${n.output} = vec4(${r}, 0., 0., 0.);\n      }\n    `}}class RM{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=lM();this.outputShape=e,this.enableShapeUniforms=CM(this.outputShape.length);let r="",s="result";t&&(s="floor(result * 255. + 0.5)");for(let a=0;a<=1;a++)for(let t=0;t<=1;t++){const s=2*a+t;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${t} < ${this.enableShapeUniforms?"outShape[2]":""+e[2]}) {\n          localCoords[2] += ${t};\n          if (localCoords[1] + ${a} < ${this.enableShapeUniforms?"outShape[1]":""+e[1]}) {\n            localCoords[1] += ${a};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${s}] = values[0];\n            } else if (offset == 1) {\n              result[${s}] = values[1];\n            } else if (offset == 2) {\n              result[${s}] = values[2];\n            } else {\n              result[${s}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":hM(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${s};\n        }\n    `}}function $M(e,t,n,r,s,a){!function(e,t){const n=tf().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const i=function(e){return XO(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}(e),o=e.TEXTURE_2D;return BO(e,()=>e.bindTexture(o,i)),BO(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),BO(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),BO(e,()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST)),BO(e,()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST)),1===tf().getNumber("WEBGL_VERSION")?BO(e,()=>e.texImage2D(o,0,r,t,n,0,s,a,null)):BO(e,()=>e.texStorage2D(o,1,r,t,n)),BO(e,()=>e.bindTexture(e.TEXTURE_2D,null)),i}function FM(e){return e.internalFormatFloat}function DM(e){return e.internalFormatHalfFloat}function OM(e){return e.downloadTextureFormat}function MM(e){return e.internalFormatPackedFloat}function LM(e){return e.internalFormatPackedHalfFloat}class zM{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=tf().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,function(e,t){AO[e]=t}(t,e)):this.gl=$O(t);let n="WEBGL_color_buffer_float";if(1===tf().getNumber("WEBGL_VERSION")){const e="OES_texture_half_float";if(this.textureFloatExtension=VO(this.gl,"OES_texture_float"),rM(this.gl,e))this.textureHalfFloatExtension=VO(this.gl,e);else if(tf().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),rM(this.gl,"EXT_color_buffer_half_float"))this.colorBufferHalfFloatExtension=VO(this.gl,"EXT_color_buffer_half_float");else if(tf().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",rM(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!rM(this.gl,"EXT_color_buffer_half_float"))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension("EXT_color_buffer_half_float")}this.vertexBuffer=function(e){return function(e,t){const n=XO(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return BO(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),BO(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(e){return function(e,t){const n=XO(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return BO(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n)),BO(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),n}(e,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(e){return XO(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=PO(this.gl,this.textureHalfFloatExtension)}get debug(){return tf().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;BO(e,()=>e.finish()),BO(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),BO(e,()=>e.deleteFramebuffer(this.framebuffer)),BO(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),BO(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),BO(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=MO(t,n);return $M(e,s,a,FM(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=MO(t,n);return $M(e,s,a,DM(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=MO(t,n);return $M(e,s,a,OM(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){BO(e,()=>e.bindTexture(e.TEXTURE_2D,t)),n.data instanceof Uint8Array?2===tf().getNumber("WEBGL_VERSION")?(BO(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data)),e.flush()):BO(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data)):2===tf().getNumber("WEBGL_VERSION")?(BO(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n)),e.flush()):BO(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n)),BO(e,()=>e.bindTexture(e.TEXTURE_2D,null))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),function(e,t,n,r,s,a){let i,o,l;BO(e,()=>e.bindTexture(e.TEXTURE_2D,t)),s instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,l=a.internalFormatPackedFloat),i.set(s),2===tf().getNumber("WEBGL_VERSION")?BO(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,o,i)):BO(e,()=>e.texImage2D(e.TEXTURE_2D,0,l,n,r,0,e.RGBA,o,i)),BO(e,()=>e.bindTexture(e.TEXTURE_2D,null))}(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=zO(t,n);return $M(e,s,a,LM(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=zO(t,n);return $M(e,s,a,MM(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(qO(this.gl,this.framebuffer),this.outputTexture=null),BO(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>function(e,t,n,r){const[s,a]=MO(t,n),i=new Uint8Array(t*n*4);return BO(e,()=>e.readPixels(0,0,s,a,r.downloadTextureFormat,e.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,r,s,a){return function(e,t,n,r,s,a,i,o){const l=e,u=new Float32Array(function(e,t){const[n,r]=zO(e,t);return n*r*4}(a,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}(this.gl,e,0,0,0,s,a)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n,r){const s=e.createBuffer();BO(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,s));const a=16*t*n;return BO(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,a,e.STREAM_READ)),BO(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0)),BO(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),s}(this.gl,t,n);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(tf().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(s,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=s}else tf().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,tf().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>function(e,t,n){const r=new Float32Array(t*n*4);return BO(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r)),r}(this.gl,t,n))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=function(e){const t=lM();return function(e,t){const n=XO(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(BO(e,()=>e.shaderSource(n,t)),BO(e,()=>e.compileShader(n)),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(t));const n=function(e){return XO(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}(t);return BO(t,()=>t.attachShader(n,this.vertexShader)),BO(t,()=>t.attachShader(n,e)),function(e,t){if(BO(e,()=>e.linkProgram(t)),!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n),this.debug&&GO(t,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=function(e,t,n){return BO(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),HO(e,t,"clipSpacePos",n,3,20,0)&&HO(e,t,"uv",n,2,20,12)}(t,this.program,this.vertexBuffer)),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&BO(this.gl,()=>this.gl.deleteProgram(e))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&GO(this.gl,this.program),BO(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return XO(e,()=>e.getUniformLocation(t,n),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),BO(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),function(e,t,n,r){BO(e,()=>function(e,t,n){(function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(e,n),BO(e,()=>e.activeTexture(e.TEXTURE0+n)),BO(e,()=>e.bindTexture(e.TEXTURE_2D,t))}(e,t,r)),BO(e,()=>e.uniform1i(n,r))}(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,s]=zO(t,n);this.setOutputMatrixTextureDriver(e,r,s)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&GO(this.gl,this.program),KO(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),BO(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),BO(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=VO(this.gl,2===tf().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===tf().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===tf().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await r.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,tf().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,tf().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map(e=>e.isDoneFn));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||r.repeatedTry(()=>(this.pollItems(),0===this.itemsToPoll.length))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),jO(this.gl,e,this.framebuffer),this.debug&&KO(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(jO(this.gl,this.outputTexture,this.framebuffer),this.debug&&KO(this.gl)):qO(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;jO(r,e,this.framebuffer),this.debug&&KO(r),this.outputTexture=e,BO(r,()=>r.viewport(0,0,t,n)),BO(r,()=>r.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),BO(this.gl,()=>this.gl.scissor(e,t,n,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{addImpl:PM,bincountImpl:BM,bincountReduceImpl:UM,ceilImpl:VM,concatImpl:WM,equalImpl:GM,expImpl:HM,expm1Impl:jM,floorImpl:qM,gatherNdImpl:KM,gatherV2Impl:XM,greaterImpl:ZM,greaterEqualImpl:YM,lessImpl:JM,lessEqualImpl:QM,linSpaceImpl:eL,logImpl:tL,maxImpl:nL,maximumImpl:rL,minimumImpl:sL,multiplyImpl:aL,negImpl:iL,notEqualImpl:oL,prodImpl:lL,rangeImpl:uL,rsqrtImpl:cL,sigmoidImpl:hL,simpleAbsImpl:dL,sliceImpl:pL,sparseFillEmptyRowsImpl:fL,sparseReshapeImpl:mL,sparseSegmentReductionImpl:gL,sqrtImpl:yL,stridedSliceImpl:bL,stringNGramsImpl:xL,stringSplitImpl:wL,stringToHashBucketFastImpl:vL,subImpl:kL,tileImpl:SL,topKImpl:IL,transposeImpl:CL,uniqueImpl:NL}=D;function TL(e,t){return["x","y","z","w","u","v"].slice(0,t).map(t=>`${e}.${t}`)}function _L(e,t){return 1===t?[e]:TL(e,t)}class EL{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=CM(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=_L("rc",this.rank),t=wM(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),s=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${s}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let s=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let t=2;t<this.rank;t++)s=e[e.length-1-t]+","+s;t.push(s)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return"rc > "+(this.enableShapeUniforms?"outShape":this.outputShape[0]);let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2);return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1]};\n      bool rEdge = rp1 >= ${this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2]};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc),\n              rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1),\n              0, 0`:`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}class AL{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=CM(this.outputShape.length);let n="";for(let a=0;a<4;a++){let e="thisRC = rc;";a%2==1&&(e+="thisRC.z += 1;"),a>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${a>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${a}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${a>0?"}":""}\n      `}var r,s;this.userCode=`\n      ${r=t,s=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${s?function(e,t,n="index"){const r=function(e,t){const n=e.length,r=e.map(e=>`${t}[${e}]`),s=new Array(n-1);s[n-2]=r[n-1];for(let a=n-3;a>=0;--a)s[a]=`(${s[a+1]} * ${r[a+1]})`;return s}(e.map((e,t)=>t),t);return r.map((t,s)=>`int ${e[s]} = ${n} / ${r[s]}; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${r[s]}`:`index -= ${e[s]} * ${r[s]}`};`).join("")}(["r","c","d"],"inputShape"):uM(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":hM(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class RL{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=FL(t,n),s=DL(e,r,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const a=$L(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const e=this.freeTextures[s].shift();return this.usedTextures[s].push(e),e}let i;return r===OO.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===OO.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===OO.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===OO.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===OO.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const s=FL(n,r),a=DL(t,s,r);a in this.freeTextures||(this.freeTextures[a]=[]);const i=$L(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=tf().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const l=this.usedTextures[a],u=l.indexOf(e);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(u,1),this.log()}log(){if(!this.logEnabled)return;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${this.numFreeTextures+this.numUsedTextures})`);const e=this._numBytesFree/this._numBytesAllocated;console.log("Bytes allocated: "+this._numBytesAllocated),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e)});for(const e in this.usedTextures)this.usedTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function $L(e,t,n,r,s){const a=function(e,t){switch(e){case OO.PACKED_2X2_FLOAT32:return MM(t);case OO.PACKED_2X2_FLOAT16:return LM(t);case OO.UNPACKED_FLOAT32:return FM(t);case OO.UNPACKED_FLOAT16:return DM(t);case OO.PACKED_4X1_UNSIGNED_BYTE:return OM(t);default:throw new Error("Unknown physical texture type "+e)}}(t,r);let i;if(s){const[t,n]=zO(e[0],e[1]);i=t*n}else{const[t,n]=MO(e[0],e[1]);i=t*n}return i*function(e,t){if(t===e.R32F)return 4;if(t===e.R16F)return 2;if(t===e.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===e.RGBA16F)return 8;if(t===e.RGBA8)return 4;throw new Error("Unknown internal format "+t)}(n,a)}function FL(e,t){if(e===DO.UPLOAD)return OO.PACKED_2X2_FLOAT32;if(e===DO.RENDER||null==e)return function(e){return tf().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?OO.PACKED_2X2_FLOAT32:OO.UNPACKED_FLOAT32:e?OO.PACKED_2X2_FLOAT16:OO.UNPACKED_FLOAT16}(t);if(e===DO.DOWNLOAD||e===DO.PIXELS)return OO.PACKED_4X1_UNSIGNED_BYTE;throw new Error("Unknown logical texture type "+e)}function DL(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class OL{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=CM(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const ML="return abs(x);",LL="return x;";class zL{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=CM(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class PL{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=CM(this.outputShape.length);const t=e.length,n=_L("rc",t),r=wM(t),s=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),a=n.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${s});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const BL=f.whereImpl,UL={},VL=tf().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class WL extends sp{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!tf().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==e){const e=$O(tf().getNumber("WEBGL_VERSION"));this.binaryCache=((t=tf().getNumber("WEBGL_VERSION"))in UL||(UL[t]={}),UL[t]),this.gpgpu=new zM(e),this.canvas=e.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;var t;this.textureManager=new RL(this.gpgpu),this.numMBBeforeWarning=null==tf().global.screen?1024:tf().global.screen.height*tf().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new rp(this,cy())}nextDataId(){return WL.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((tf().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||tf().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:DO.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,r,s){if(tf().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:DO.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:s,complexTensorInfos:a,slice:i,shape:o,isPacked:l}=t;if(null!=i){let t;t=l?new zL(o,LL):new OL(o,LL);const n=this.runWebGLProgram(t,[{dataId:e,shape:o,dtype:s}],s),r=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===s)return n;const u=null!=this.activeTimers;let c,h;if(u&&(c=r.now()),"complex64"===s){const e=this.readSync(a.real.dataId),t=this.readSync(a.imag.dataId);h=p.mergeRealAndImagArrays(e,t)}else h=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=r.now()-c),this.convertAndCacheOnCPU(e,h)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise(e=>t.push(e))}const t=this.texData.get(e),{values:n,shape:s,slice:a,dtype:i,complexTensorInfos:o,isPacked:l}=t;if(null!=a){let t;t=l?new zL(s,LL):new OL(s,LL);const n=this.runWebGLProgram(t,[{dataId:e,shape:s,dtype:i}],i),r=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if(tf().getBool("DEBUG")&&!tf().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===tf().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,c,h=null;if("complex64"!==i&&tf().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const t=this.texData.get(u.dataId);h=this.gpgpu.createBufferFromTexture(t.texture,...LO(s))}if(this.pendingRead.set(e,[]),"complex64"!==i&&await this.gpgpu.createAndWaitForFence(),"complex64"===i){const e=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]);c=p.mergeRealAndImagArrays(e[0],e[1])}else if(null==h)c=this.getValuesFromTexture(e);else{const e=r.sizeFromShape(s);c=this.gpgpu.downloadFloat32MatrixFromBuffer(h,e)}if(null!=u&&this.disposeIntermediateTensorInfo(u),null!=h){const e=this.gpgpu.gl;BO(e,()=>e.deleteBuffer(h))}const d=this.convertAndCacheOnCPU(e,c),f=this.pendingRead.get(e);return this.pendingRead.delete(e),f.forEach(e=>e(d)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&cy().removeDataId(e,this),this.pendingDeletes--),d}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map(e=>r.decodeString(e))}catch(s){throw new Error("Failed to decode encoded string bytes into utf-8")}return gg(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!UO(n)){if(tf().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:s}=this.texData.get(e),a=r.sizeFromShape(t);if(tf().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...LO(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),s}const i=tf().getBool("WEBGL_PACK")&&!0===s,o=i?JO(t):t,l=i?new EM(o):new _M(o),u=this.runWebGLProgram(l,[{shape:o,dtype:n,dataId:e}],"float32"),c=this.texData.get(u.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture,c.texShape[0],c.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(u),h}timerAvailable(){return tf().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(e){const t=this.activeTimers,n=[];let s=!1;null==this.programTimersStack?(this.programTimersStack=n,s=!0):this.activeTimers.push(n),this.activeTimers=n,e();const a=r.flatten(this.activeTimers.map(e=>e.query)).filter(e=>null!=e),i=r.flatten(this.activeTimers.map(e=>e.name)).filter(e=>null!=e);this.activeTimers=t,s&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(tf().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(a);o.kernelMs=r.sum(e),o.getExtraProfileInfo=()=>e.map((e,t)=>({name:i[t],ms:e})).map(e=>`${e.name}: ${e.ms}`).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return tf().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:r.now(),endMs:null}}endTimer(e){return tf().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=r.now(),e)}async getQueryTime(e){return tf().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.waitForQueryAndGetTime(e):e.endMs-e.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:s,isPacked:a,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,s,a)));const u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=VL){return tf().getBool("WEBGL_CPU_FORWARD")&&e.every(e=>null==this.texData.get(e.dataId).texture&&r.sizeFromShape(e.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){p.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return BL(e.shape,t)}packedUnaryOp(e,t,n){const r=new zL(e.shape,t),s=this.compileAndRun(r,[e],n);return cy().makeTensorFromDataId(s.dataId,s.shape,s.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=dL(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(tf().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,ML,e.dtype);const t=new OL(e.shape,ML),n=this.compileAndRun(t,[e]);return cy().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let s;if("string"===t&&null!=n&&n.length>0&&r.isString(n[0])){const a=n.map(e=>r.encodeString(e));s=this.write(a,e,t)}else s=this.write(n,e,t);return this.texData.get(s).usage=null,{dataId:s,shape:e,dtype:t}}makeOutput(e,t,n){const{dataId:r}=this.makeTensorInfo(e,t,n);return cy().makeTensorFromDataId(r,e,t,this)}unpackTensor(e){const t=new PL(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new EL(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[ZO(e.shape),...YO(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},s=[ZO(t),...YO(t)],a=new AL(s,n),i=this.runWebGLProgram(a,[r],e.dtype,[n],!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}decode(e){const t=this.texData.get(e),{isPacked:n,shape:r,dtype:s}=t,a=JO(r);let i;const o=LO(a);return i=n?new TM(a):new NM(a),{dtype:s,shape:r,dataId:this.runWebGLProgram(i,[{shape:a,dtype:s,dataId:e}],s,[o],!0).dataId}}runWebGLProgram(e,t,n,s,a=!1){const i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===FO.DENSE){const t=LO(e.outputShape);o.texShape=t.map(e=>2*e)}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===r.sizeFromShape(i.shape))return o.values=r.getTypedArrayFromDType(i.dtype,0),i;const l=[],u=t.map(t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&r.sizeFromShape(t.shape)<=tf().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),l.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!eM(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),l.push(t),n=this.texData.get(t.dataId),e.shape=r}return{shape:t.shape,texData:n,isUniform:!1}});this.uploadToGPU(i.dataId);const c={shape:i.shape,texData:o,isUniform:!1},h=function(e,t,n){let s="";t.concat(n).forEach(t=>{const a=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const i=t.texData.texShape,{useSqueezeShape:o,uniformShape:l,keptDims:u}=vM(e.packedInputs,t.shape,i);let c="",h="",d="";if(1===l.length&&e.packedInputs){const e=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];c=`${e[0]>1}_${e[1]>1}`}else if(2!==l.length||e.packedInputs){if(l.length>2&&!e.packedInputs){const e=r.computeStrides(l);d=`${e[0]===i[1]}_${e[e.length-1]===i[1]}`}}else h=`${l[0]>1}_${l[1]>1}`;const f=t.shape.length,m=2===l.length&&r.arraysEqual(t.shape,i),g=1===r.sizeFromShape(t.shape),y=p.getBroadcastDims(t.shape,n.shape),b=!e.packedInputs&&f===n.shape.length&&r.arraysEqual(i,n.texData.texShape);s+=`${f}_${b}_${o?u:""}_${l.length}_${g}_${y}_${m}_${c}_${h}_${d}_${e.packedInputs||l.length>2?"":`${i[0]>1}_${i[1]>1}`}_${a}`}else s+=`${t.shape}_${t.isUniform?"uniform":t.texData.texShape}_${a}`});let a=e.constructor.name;return a+="_"+s+"_"+e.userCode+tf().getNumber("WEBGL_VERSION"),a}(e,u,c),d=this.getAndSaveBinary(h,()=>function(e,t,n,s){const a=n.map((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}}),i=a.map(e=>e.shapeInfo),o={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},l=function(e,t,n){const s=[];if(e.forEach(e=>{const t=r.sizeFromShape(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?s.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(s.push(`uniform sampler2D ${e.name};`),s.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=vM(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:s.push(`uniform int ${e.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${e.name}Shape;`)}s.push(`uniform ivec2 ${e.name}TexShape;`)}}),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;")}s.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach(e=>{s.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)});const a=s.join("\n"),i=e.map(e=>function(e,t,n=!1,s){let a="";return a+=n?function e(t,n){switch(t.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${lM().texture2D}(${t}, halfCR);\n    }\n  `}(t);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape,a=lM();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `;const i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(t,n);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,a="get"+s.charAt(0).toUpperCase()+s.slice(1),i=e.shapeInfo.texShape,o=i[0],l=i[1],u=lM();if(null!=i&&r.arraysEqual(n,i))return t?`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n\n        return ${u.texture2D}(${s}, uv);\n      }\n    `:`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${l}.0, ${o}.0);\n\n        return ${u.texture2D}(${s}, uv);\n      }\n    `;if(t)return`\n    vec4 ${a}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${u.texture2D}(${s}, uv);\n    }\n  `;const c=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];return`\n    vec4 ${a}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${c[0]}, ${c[1]}, row, col);\n      return ${u.texture2D}(${s}, uv);\n    }\n  `}(t,n);case 3:return function(t,n){const r=t.shapeInfo.logicalShape,s=t.name,a="get"+s.charAt(0).toUpperCase()+s.slice(1),i=t.shapeInfo.texShape,o=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];if(1===r[0]){const s=[1,2],i=kM(t,r.slice(1)),o=["b","row","col"];return`\n        ${e(i,n)}\n        vec4 ${a}(int b, int row, int col) {\n          return ${a}(${SM(o,s)});\n        }\n      `}const l=lM();if(n)return`\n    vec4 ${a}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${l.texture2D}(${s}, uv);\n    }\n  `;const u=o[0],c=o[1],h=Math.ceil(r[2]/2);return`\n    vec4 ${a}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${u}, ${c}, ${h*Math.ceil(r[1]/2)}, ${h}, b, row, col);\n      return ${l.texture2D}(${s}, uv);\n    }\n  `}(t,n);default:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=lM();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${s.texture2D}(${n}, uv);\n    }\n  `;const a=e.shapeInfo.logicalShape,i=a.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],c=l[1],h=Math.ceil(a[i-1]/2);let d=h*Math.ceil(a[i-2]/2),p="int b, int row, int col",f=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let m=2;m<i-1;m++)p=`int b${m}, `+p,d*=a[i-m-1],f=`b${m} * ${d} + `+f;return`\n    vec4 ${r}(${p}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(t,n)}}(e,s):function e(t,n=!1){const s=t.shapeInfo.logicalShape;switch(s.length){case 0:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[s,a]=e.shapeInfo.texShape;if(1===s&&1===a)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=bM(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,l]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${o}, ${l}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(t,n);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${xM(e)}\n      }\n    `;const s=e.shapeInfo.texShape,a=s[0],i=s[1];if(1===i&&1===a)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=bM(n);return 1===i?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${a}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===a?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${a}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(t,n);case 2:return function(t,n){const s=t.shapeInfo.logicalShape,a=t.name,i="get"+a.charAt(0).toUpperCase()+a.slice(1),o=t.shapeInfo.texShape;if(null!=o&&r.arraysEqual(s,o))return n?`\n      float ${i}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n    float ${i}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${o[1]}.0, ${o[0]}.0);\n      return sampleTexture(${a}, uv);\n    }\n  `;const{newShape:l,keptDims:u}=r.squeezeShape(s);if(l.length<s.length){const r=kM(t,l),s=["row","col"];return`\n      ${e(r,n)}\n      float ${i}(int row, int col) {\n        return ${i}(${SM(s,u)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${i}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${s[1]}, 1)));\n        ${xM(t)}\n      }\n    `;const c=o[0],h=o[1],d=bM(a);return 1===h?n?`\n      float ${i}(int row, int col) {\n        float index = dot(vec3(row, col, ${d}), vec3(${a}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${a}TexShape[0]));\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n    float ${i}(int row, int col) {\n      float index = dot(vec3(row, col, ${d}), vec3(${s[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);\n      return sampleTexture(${a}, uv);\n    }\n  `:1===c?n?`\n      float ${i}(int row, int col) {\n        float index = dot(vec3(row, col, ${d}), vec3(${a}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${a}TexShape[1]), 0.5);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n    float ${i}(int row, int col) {\n      float index = dot(vec3(row, col, ${d}), vec3(${s[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${h}.0, 0.5);\n      return sampleTexture(${a}, uv);\n    }\n  `:n?`\n      float ${i}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a}Shape[1] + col + ${d};\n        vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n  float ${i}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${s[1]} + col + ${d};\n    vec2 uv = uvFromFlat(${c}, ${h}, index);\n    return sampleTexture(${a}, uv);\n  }\n`}(t,n);case 3:return function(t,n){const s=t.shapeInfo.logicalShape,a=t.name,i="get"+a.charAt(0).toUpperCase()+a.slice(1),o=s[1]*s[2],l=s[2],{newShape:u,keptDims:c}=r.squeezeShape(s);if(u.length<s.length){const r=kM(t,u),s=["row","col","depth"];return`\n        ${e(r,n)}\n        float ${i}(int row, int col, int depth) {\n          return ${i}(${SM(s,c)});\n        }\n      `}if(t.shapeInfo.isUniform)return`\n      float ${i}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${o}, ${l}, 1)));\n        ${xM(t)}\n      }\n    `;const h=t.shapeInfo.texShape,d=h[0],p=h[1],f=t.shapeInfo.flatOffset;if(p===o&&null==f)return n?`\n      float ${i}(int row, int col, int depth) {\n        int stride1 = ${a}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n        float ${i}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${l}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${p}.0, ${d}.0);\n          return sampleTexture(${a}, uv);\n        }\n      `;if(p===l&&null==f)return n?`\n      float ${i}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${a}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n    float ${i}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${s[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${d}.0);\n      return sampleTexture(${a}, uv);\n    }\n  `;const m=bM(a);return n?`\n    float ${i}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${a}Shape[1] * ${a}Shape[2];\n      int stride1 = ${a}Shape[2];\n      int index = row * ${o} + col * ${l} + depth + ${m};\n      vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index);\n      return sampleTexture(${a}, uv);\n    }\n    `:`\n      float ${i}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${o} + col * ${l} + depth + ${m};\n        vec2 uv = uvFromFlat(${d}, ${p}, index);\n        return sampleTexture(${a}, uv);\n      }\n  `}(t,n);case 4:return function(t,n){const s=t.shapeInfo.logicalShape,a=t.name,i="get"+a.charAt(0).toUpperCase()+a.slice(1),o=s[3],l=s[2]*o,u=s[1]*l,{newShape:c,keptDims:h}=r.squeezeShape(s);if(c.length<s.length){const r=kM(t,c),s=["row","col","depth","depth2"];return`\n      ${e(r,n)}\n      float ${i}(int row, int col, int depth, int depth2) {\n        return ${i}(${SM(s,h)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${i}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${u}, ${l}, ${o}, 1)));\n        ${xM(t)}\n      }\n    `;const d=t.shapeInfo.flatOffset,p=t.shapeInfo.texShape,f=p[0],m=p[1],g=`int stride2 = ${a}Shape[3];`,y=`int stride1 = ${a}Shape[2] * stride2;`,b=`int stride0 = ${a}Shape[1] * stride1;`;if(m===u&&null==d)return n?`\n      float ${i}(int row, int col, int depth, int depth2) {\n        ${g}\n        ${y}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n      float ${i}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${l}, ${o}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${m}.0, ${f}.0);\n        return sampleTexture(${a}, uv);\n      }\n    `;if(m===o&&null==d)return n?`\n      float ${i}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${a}Shape[1] * ${a}Shape[2], ${a}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n      float ${i}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${s[1]*s[2]}, ${s[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${m}.0, ${f}.0);\n        return sampleTexture(${a}, uv);\n      }\n    `;const x=bM(a);return n?`\n    float ${i}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${g}\n      ${y}\n      ${b}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index + ${x});\n      return sampleTexture(${a}, uv);\n    }\n  `:`\n    float ${i}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${u} + col * ${l} +\n          depth * ${o} + depth2;\n      vec2 uv = uvFromFlat(${f}, ${m}, index + ${x});\n      return sampleTexture(${a}, uv);\n    }\n  `}(t,n);case 5:return function(t){const n=t.shapeInfo.logicalShape,s=t.name,a="get"+s.charAt(0).toUpperCase()+s.slice(1),i=n[4],o=n[3]*i,l=n[2]*o,u=n[1]*l,{newShape:c,keptDims:h}=r.squeezeShape(n);if(c.length<n.length){const n=kM(t,c),r=["row","col","depth","depth2","depth3"];return`\n      ${e(n)}\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        return ${a}(${SM(r,h)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${u}, ${l}, ${o}, ${i})) +\n          depth3;\n        ${xM(t)}\n      }\n    `;const d=t.shapeInfo.flatOffset,p=t.shapeInfo.texShape,f=p[0],m=p[1];return m===u&&null==d?`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${l}, ${o}, ${i}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${m}.0, ${f}.0);\n        return sampleTexture(${s}, uv);\n      }\n    `:m===i&&null==d?`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${n[1]*n[2]*n[3]},\n               ${n[2]*n[3]}, ${n[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${m}.0, ${f}.0);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${a}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${u} + col * ${l} + depth * ${o} +\n          depth2 * ${i} + depth3 + ${bM(s)};\n      vec2 uv = uvFromFlat(${f}, ${m}, index);\n      return sampleTexture(${s}, uv);\n    }\n  `}(t);case 6:return function(t){const n=t.shapeInfo.logicalShape,s=t.name,a="get"+s.charAt(0).toUpperCase()+s.slice(1),{newShape:i,keptDims:o}=r.squeezeShape(n);if(i.length<n.length){const n=kM(t,i),r=["row","col","depth","depth2","depth3","depth4"];return`\n      ${e(n)}\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${a}(${SM(r,o)});\n      }\n    `}const l=n[5],u=n[4]*l,c=n[3]*u,h=n[2]*c,d=n[1]*h;if(t.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${d}, ${h}, ${c}, ${u})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${l}, 1)));\n        ${xM(t)}\n      }\n    `;const p=t.shapeInfo.flatOffset,f=t.shapeInfo.texShape,m=f[0],g=f[1];return g===d&&null==p?`\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${h}, ${c}, ${u}, ${l})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${g}.0, ${m}.0);\n        return sampleTexture(${s}, uv);\n      }\n    `:g===l&&null==p?`\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${n[1]*n[2]*n[3]*n[4]},\n               ${n[2]*n[3]*n[4]},\n               ${n[3]*n[4]},\n               ${n[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${g}.0, ${m}.0);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${a}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${d} + col * ${h} + depth * ${c} +\n          depth2 * ${u} + depth3 * ${l} + depth4 + ${bM(s)};\n      vec2 uv = uvFromFlat(${m}, ${g}, index);\n      return sampleTexture(${s}, uv);\n    }\n  `}(t);default:throw new Error(s.length+"-D input sampling is not yet supported")}}(e,s),e.shapeInfo.logicalShape.length<=t.logicalShape.length&&(a+=n?function(e,t){const n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),a="get"+s+"AtOutCoords",i=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,l=pM(e.shapeInfo.logicalShape,t.logicalShape),u=wM(o),c=o-i;let h;const d=["x","y","z","w","u","v"];h=0===i?"":o<2&&l.length>=1?"coords = 0;":l.map(e=>`coords.${d[e+c]} = 0;`).join("\n");let p="";p=o<2&&i>0?"coords":e.shapeInfo.logicalShape.map((e,t)=>"coords."+d[t+c]).join(", ");let f="return outputValue;";const m=1===r.sizeFromShape(e.shapeInfo.logicalShape),g=1===r.sizeFromShape(t.logicalShape);if(1!==i||m||g){if(m&&!g)f=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(l.length){const e=i-2,t=i-1;l.indexOf(e)>-1&&l.indexOf(t)>-1?f="return vec4(outputValue.x);":l.indexOf(e)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":l.indexOf(t)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}}else f="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${a}() {\n      ${u} coords = getOutputCoords();\n      ${h}\n      vec4 outputValue = get${s}(${p});\n      ${f}\n    }\n  `}(e,t):function(e,t){const n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),a="get"+s+"AtOutCoords",i=e.shapeInfo.logicalShape.length,o=t.logicalShape.length;if(!e.shapeInfo.isUniform&&i===o&&null==e.shapeInfo.flatOffset&&r.arraysEqual(e.shapeInfo.texShape,t.texShape))return`\n      float ${a}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const l=wM(o),u=pM(e.shapeInfo.logicalShape,t.logicalShape),c=o-i;let h;const d=["x","y","z","w","u","v"];h=0===i?"":o<2&&u.length>=1?"coords = 0;":u.map(e=>`coords.${d[e+c]} = 0;`).join("\n");let p="";return p=o<2&&i>0?"coords":e.shapeInfo.logicalShape.map((e,t)=>"coords."+d[t+c]).join(", "),`\n    float ${a}() {\n      ${l} coords = getOutputCoords();\n      ${h}\n      return get${s}(${p});\n    }\n  `}(e,t)),a}(e,t,n.packedInputs,n.enableShapeUniforms)).join("\n"),o=t.texShape,l=lM(),u=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(l);let c,h,d=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${fM}\n    ${mM}\n    ${gM}\n  `}(l);return t.isPacked?(c=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===r[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `:1===r[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(r.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));\n      }\n    `;const a=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n\n      int index = resTexRC.x * ${s[1]} + resTexRC.y;\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[2]/2),a=s*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[e.length-1]/2),a=s*Math.ceil(e[e.length-2]/2);let i=a,o="",l="b, r, c";for(let u=2;u<e.length-1;u++)i*=e[e.length-u-1],o=`\n      int b${u} = index / ${i};\n      index -= b${u} * ${i};\n    `+o,l=`b${u}, `+l;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec${e.length}(${l});\n    }\n  `}(e,t,n)}}(t.logicalShape,o,n.enableShapeUniforms),h=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(l)):(c=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){return r.arraysEqual(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${cM(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;const r=uM(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${cM(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const r=uM(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=uM(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=uM(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(e.length+"-D output sampling is not yet supported")}}(t.logicalShape,o,n.enableShapeUniforms),h=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(l)),n.packedInputs&&(d+=yM),[d,u,h,a,c,i,n.userCode].join("\n")}(a,o,t),u=function(e,t){const n=XO(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(BO(e,()=>e.shaderSource(n,t)),BO(e,()=>e.compileShader(n)),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw function(e,t){const n=WO.exec(t);if(null==n)return console.log("Couldn't parse line number in error: "+t),void console.log(e);const s=+n[1],a=e.split("\n"),i=a.length.toString().length+2,o=a.map((e,t)=>r.rightPad((t+1).toString(),i)+e);let l=0;for(let r=0;r<o.length;r++)l=Math.max(o[r].length,l);const u=o.slice(0,s-1),c=o.slice(s-1,s),h=o.slice(s);console.log(u.join("\n")),console.log(t.split("\n")[0]),console.log("%c "+r.rightPad(c[0],l),"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(h.join("\n"))}(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e.gl,l),c=e.createProgram(u);let h=null;const d=e.getUniformLocation(c,"NAN",!1);1===tf().getNumber("WEBGL_VERSION")&&(h=e.getUniformLocation(c,"INFINITY",!1));const p={},f={},m={};for(let r=0;r<t.variableNames.length;r++){const n=t.variableNames[r];p[n]=e.getUniformLocation(c,n,!1),p["offset"+n]=e.getUniformLocation(c,"offset"+n,!1),t.enableShapeUniforms&&(f[n+"Shape"]=e.getUniformLocation(c,n+"Shape",!1),m[n+"TexShape"]=e.getUniformLocation(c,n+"TexShape",!1))}let g,y,b;t.enableShapeUniforms&&(g=e.getUniformLocation(c,"outShape",!1),b=e.getUniformLocation(c,"outShapeStrides",!1),y=e.getUniformLocation(c,"outTexShape",!1));const x=[];return t.customUniforms&&t.customUniforms.forEach((t,n)=>{x[n]=e.getUniformLocation(c,t.name,!1)}),{program:t,fragmentShader:u,source:l,webGLProgram:c,uniformLocations:p,customUniformLocations:x,inShapeInfos:i,outShapeInfo:o,infLoc:h,nanLoc:d,inShapesLocations:f,inTexShapesLocations:m,outShapeLocation:g,outShapeStridesLocation:b,outTexShapeLocation:y}}(this.gpgpu,e,u,c)),f=null!=this.activeTimers;let m;f&&(m=this.startTimer()),function(e,t,n,s,a){t.program.enableShapeUniforms||(IM(t.inShapeInfos,n),IM([t.outShapeInfo],[s]));const i=s.texData.texture,o=s.texData.texShape;s.texData.isPacked?e.setOutputPackedMatrixTexture(i,o[0],o[1]):e.setOutputMatrixTexture(i,o[0],o[1]),e.setProgram(t.webGLProgram),1===tf().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach((n,s)=>{const a=t.program.variableNames[s],i=t.uniformLocations[a],o=t.uniformLocations["offset"+a],l=t.inShapesLocations[a+"Shape"],u=t.inTexShapesLocations[a+"TexShape"];if(l){const{uniformShape:r}=vM(t.program.packedInputs,n.shape,n.texData.texShape);switch(r.length){case 1:e.gl.uniform1iv(l,new Int32Array(r));break;case 2:e.gl.uniform2iv(l,new Int32Array(r));break;case 3:e.gl.uniform3iv(l,new Int32Array(r));break;case 4:e.gl.uniform4iv(l,new Int32Array(r))}}if(u&&e.gl.uniform2i(u,n.texData.texShape[0],n.texData.texShape[1]),null!=i)if(n.isUniform)if(r.sizeFromShape(n.shape)<2)e.gl.uniform1f(i,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(i,t)}else null!=n.texData.slice&&null!=o&&e.gl.uniform1i(o,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture,i,s)});const l=t.outShapeLocation;if(l)switch(s.shape.length){case 1:e.gl.uniform1iv(l,new Int32Array(s.shape));break;case 2:e.gl.uniform2iv(l,new Int32Array(s.shape));break;case 3:e.gl.uniform3iv(l,new Int32Array(s.shape));break;case 4:e.gl.uniform4iv(l,new Int32Array(s.shape))}if(t.outShapeStridesLocation){const n=r.computeStrides(s.shape);switch(s.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),t.program.customUniforms&&a&&t.program.customUniforms.forEach((n,r)=>{const s=t.customUniformLocations[r],i=a[r];if("float"===n.type)e.gl.uniform1fv(s,i);else if("vec2"===n.type)e.gl.uniform2fv(s,i);else if("vec3"===n.type)e.gl.uniform3fv(s,i);else if("vec4"===n.type)e.gl.uniform4fv(s,i);else if("int"===n.type)e.gl.uniform1iv(s,i);else if("ivec2"===n.type)e.gl.uniform2iv(s,i);else if("ivec3"===n.type)e.gl.uniform3iv(s,i);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(s,i)}}),e.executeProgram()}(this.gpgpu,d,u,c,s),l.forEach(e=>this.disposeIntermediateTensorInfo(e)),f&&(m=this.endTimer(m),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(m)}));const g=tf().get("WEBGL_FLUSH_THRESHOLD");if(g>0){const e=r.now();e-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!tf().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===a){const e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,r,s=!1){return this.runWebGLProgram(e,t,n=n||t[0].dtype,r,s)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(tf().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=dy(()=>{if(!tf().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=tf().getBool("DEBUG");tf().set("DEBUG",!1);const t=this.abs(yy(1e-8)).dataSync()[0];if(tf().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:s,values:a,texture:i,usage:o,isPacked:l}=t;if(null!=i)return;const u=null!=this.activeTimers;let c;u&&(c=r.now());let h=t.texShape;if(null==h&&(h=function(e,t=!1){let n=tf().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map((t,n)=>n>=e.length-2?r.nearestLargerEven(e[n]):e[n])).length&&(e=[2,e[0]])),2!==e.length){const t=r.squeezeShape(e);e=t.newShape}let s=r.sizeFromShape(e);if(e.length<=1&&s<=n)return[1,s];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=ZO(e);let n=2,a=2;return e.length&&([n,a]=YO(e)),s=t*(n/2)*(a/2),r.sizeToSquarishShape(s).map(e=>2*e)}return r.sizeToSquarishShape(s)}(n,l),t.texShape=h),null!=a){const e=JO(n);let i,o=h[1],d=h[0];const p=a instanceof Uint8Array||a instanceof Uint8ClampedArray;!l&&p||([o,d]=zO(h[0],h[1])),i=l?new RM(e,p):new AM(e,p);const f=p?[d,o]:h,m=this.makeTensorInfo(f,s),g=this.texData.get(m.dataId);g.usage=p?DO.PIXELS:DO.UPLOAD,g.texShape=f,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(m.dataId),o,d,a);const y=this.runWebGLProgram(i,[m],s,[[d,o]],!0),b=this.texData.get(y.dataId);t.texture=b.texture,t.texShape=b.texShape,t.isPacked=b.isPacked,t.usage=b.usage,this.disposeIntermediateTensorInfo(m),this.texData.delete(y.dataId),t.values=null,u&&(this.uploadWaitMs+=r.now()-c)}else{const e=this.acquireTexture(h,o,s,l);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error("Unknown dtype "+t)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*r.bytesPerElement(t)}}WL.nextDataId=0,a.isBrowser()&&my("webgl",()=>new WL,2);class GL{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=p.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=CM(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class HL{constructor(e,t,n,s=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=p.assertAndGetBroadcastShape(t,n);const a=this.outputShape.length;this.enableShapeUniforms=CM(a);let i="";if(s)if(0===a||1===r.sizeFromShape(this.outputShape))i="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(i=`\n          ${wM(a)} coords = getOutputCoords();\n        `,1===a)i+=this.enableShapeUniforms?"\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=_L("coords",a);i+=this.enableShapeUniforms?`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= outShape[${a} - 2];\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= outShape[${a} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${i}\n\n        setOutput(result);\n      }\n    `}}function jL(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const qL={kernelName:"Identity",backendName:"webgl",kernelFunc:jL};function KL(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(a.dataId),o=jL({inputs:{x:r},backend:n}),l=jL({inputs:{x:s},backend:n});return i.complexTensorInfos={real:o,imag:l},a}const XL={kernelName:"Complex",backendName:"webgl",kernelFunc:KL},ZL="return (a < 0.) ? b * a : a;",YL="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",JL={kernelName:"LeakyRelu",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{alpha:i}=s,o=n.makeTensorInfo([],"float32",r.createScalarValue(i,"float32")),l=tf().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new HL(YL,a.shape,o.shape):new GL(ZL,a.shape,o.shape),u=n.runWebGLProgram(l,[a,o],"float32");return n.disposeIntermediateTensorInfo(o),u}},QL="return (a < 0.) ? b * a : a;",ez="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",tz={kernelName:"Prelu",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t,a=tf().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new HL(ez,r.shape,s.shape):new GL(QL,r.shape,s.shape);return n.runWebGLProgram(a,[r,s],"float32")}};function nz({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:s,backend:a})=>{const{x:i}=s,o=a,l=r||i.dtype;if(o.shouldExecuteOnCPU([i])&&null!=n){const e=o.texData.get(i.dataId),t=n(e.values,l);return o.makeTensorInfo(i.shape,l,t)}let u;return u=tf().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new zL(i.shape,t):new OL(i.shape,e),o.runWebGLProgram(u,[i],l)}}function rz({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:a}){return({inputs:i,backend:o})=>{const{a:l,b:u}=i,c=o;if(r&&"complex64"===l.dtype){const t=c.texData.get(l.dataId),n=c.texData.get(u.dataId),[r,s]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map(t=>{const[n,r]=t,s={dataId:n.dataId,dtype:n.dtype,shape:l.shape},a={dataId:r.dataId,dtype:r.dtype,shape:u.shape},i=new GL(e,l.shape,u.shape);return c.runWebGLProgram(i,[s,a],nm(n.dtype,r.dtype))}),a=KL({inputs:{real:r,imag:s},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(s),a}const h=a||nm(l.dtype,u.dtype);if(("string"===l.dtype||"string"===u.dtype||c.shouldExecuteOnCPU([l,u]))&&null!=s){const e=c.texData.get(l.dataId).values,t=c.texData.get(u.dataId).values,n="string"===l.dtype?p.fromUint8ToStringArray(e):e,r="string"===l.dtype?p.fromUint8ToStringArray(t):t,[a,i]=s(l.shape,u.shape,n,r,h),o=c.makeTensorInfo(i,h);return c.texData.get(o.dataId).values=a,o}let d;return d=tf().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new HL(t,l.shape,u.shape,n):new GL(e,l.shape,u.shape),c.runWebGLProgram(d,[l,u],h)}}function sz(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?ez:QL;if("leakyrelu"===e)return t?YL:ZL;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class az{constructor(e,t,n,r=!1,s=!1,a=!1,i=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=CM(this.outputShape.length);const u=Math.ceil((r?e[1]:e[2])/2),c=r?"i * 2, rc.y":"rc.y, i * 2",h=s?"rc.z, i * 2":"i * 2, rc.z",d=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],p=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let f="",m="";i&&(f=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,m="result = activation(result);");const g=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let y="rc.x",b="rc.x";e[0]<t[0]?y=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(b=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${f}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${u}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${u}; i++) {\n          int batchA = ${y};\n          int batchB = ${b};\n          vec4 a = getMatrixA(batchA, ${c});\n          vec4 b = getMatrixB(batchB, ${h});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${d[0]} * ${p[0]});\n          result += (${d[1]} * ${p[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${g}\n\n        ${m}\n\n        setOutput(result);\n      }\n    `}}class iz{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=p.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const oz="return a * b;";function lz(e){const{inputs:t,backend:n}=e,{a:r,b:s}=t,a=p.upcastType(r.dtype,s.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),a=new iz("return areal * breal - aimag * bimag;",r.shape,s.shape),i=new iz("return areal * bimag + aimag * breal;",r.shape,s.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],l=n.runWebGLProgram(a,o,"float32"),u=n.runWebGLProgram(i,o,"float32"),c=KL({inputs:{real:l,imag:u},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),c}if(n.shouldExecuteOnCPU([r,s])){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),[i,o]=aL(r.shape,s.shape,e.values,t.values,a),l=n.makeTensorInfo(o,a);return n.texData.get(l.dataId).values=i,l}let i;return i=tf().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new HL(oz,r.shape,s.shape):new GL(oz,r.shape,s.shape),n.runWebGLProgram(i,[r,s],a)}const uz={kernelName:"Multiply",backendName:"webgl",kernelFunc:lz};function cz(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{shape:i}=s,o=n,l=r.sizeFromShape(a.shape),u=r.inferFromImplicitShape(i,l),c=r.sizeFromShape(u);r.assert(l===c,()=>`The new shape (${u}) has ${c} elements and the old shape (${a.shape}) has ${l} elements. The new shape and old shape must have the same number of elements.`);const h=o.texData.get(a.dataId);return!h.isPacked||eM(a.shape,u)||null!==h.texture&&eM(h.shape,u)?(o.incRef(a.dataId),{dataId:a.dataId,shape:u,dtype:a.dtype}):function(e,t,n){const r=[ZO(e.shape),...YO(e.shape)],s={dtype:e.dtype,shape:r,dataId:e.dataId},a=[ZO(t),...YO(t)],i=new AL(a,r),o=n.runWebGLProgram(i,[s],e.dtype,[r],!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}(a,u,o)}const hz={kernelName:"Reshape",backendName:"webgl",kernelFunc:cz};class dz{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:s,inSize:a,outSize:i}=e;this.outputShape=[s,i];const o=4*Math.floor(n/4),l=n%4;let u="sumValue += dot(values, ones);";if(null!=t){const e=1/t;u=`sumValue += dot(values * ${r.isInt(e)?e.toPrecision(2):e}, ones);`}let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}class pz{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,d="vec4";"all"===t?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";s%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}}function fz(e,t,n,r){const s=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=p.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let a=e;for(let i=0;i<s.length;i++){const{inSize:o,windowSize:l,outSize:u}=s[i];let c,h;c="mean"===n?0===i?new dz({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},o):new dz({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u}):new pz({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},n),h=a,a=r.runWebGLProgram(c,[a],t),h.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(h)}return a}class mz{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.rank=n.length;const r=wM(this.rank),s=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let s=0;s<e.length;s++)r[e[s]]=n[s];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${s}));\n    }\n    `}}class gz{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let u=0;u<n.length;u++)n[u]=e[t[u]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=wM(this.rank),s=TL("rc",this.rank),a=new Array(this.rank);for(let u=0;u<t.length;u++)a[t[u]]=s[u];const i=`vec2(${a.slice(-2).join()})`,o=`++${s[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${s[this.rank-1]};\n      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function yz(e,t,n){const r=tf().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new gz(e.shape,t):new mz(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function bz(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,keepDims:o}=s;return function(e,t,n,s){const a=e.shape.length,i=r.parseAxisParam(t,e.shape);let o=i;const l=p.getAxesPermutation(o,a),u=null!=l;let c=e;u&&(c=yz(e,l,s),o=p.getInnerMostAxes(o.length,a)),p.assertAxesAreInnerMostDims("sum",o,a);const[h,d]=p.computeOutAndReduceShapes(c.shape,o);let f=h;n&&(f=p.expandShapeToKeepDim(h,i));const m=r.sizeFromShape(d),g=cz({inputs:{x:c},attrs:{shape:[r.sizeFromShape(e.shape)/m,m]},backend:s}),y=fz(g,rm(e.dtype),"sum",s),b=cz({inputs:{x:y},attrs:{shape:f},backend:s});return s.disposeIntermediateTensorInfo(g),s.disposeIntermediateTensorInfo(y),u&&s.disposeIntermediateTensorInfo(c),b}(a,i,o,n)}const xz={kernelName:"Sum",backendName:"webgl",kernelFunc:bz};function wz(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{perm:a}=r,i=n,o=new Array(s.shape.length);for(let u=0;u<o.length;u++)o[u]=s.shape[a[u]];let l;if(i.shouldExecuteOnCPU([s])){const e=i.texData.get(s.dataId),t=CL(e.values,s.shape,s.dtype,a,o);l=i.makeTensorInfo(o,s.dtype),i.texData.get(l.dataId).values=t}else l=yz(s,a,i);return l}const vz={kernelName:"Transpose",backendName:"webgl",kernelFunc:wz};function kz({a:e,b:t,transposeA:n,transposeB:s,backend:a,bias:i=null,preluActivationWeights:l=null,leakyreluAlpha:u=0,activation:c=null}){const h=e.shape.length,d=t.shape.length,p=n?e.shape[h-2]:e.shape[h-1],f=s?t.shape[d-1]:t.shape[d-2],m=n?e.shape[h-1]:e.shape[h-2],g=s?t.shape[d-2]:t.shape[d-1],y=e.shape.slice(0,-2),b=t.shape.slice(0,-2),x=r.sizeFromShape(y),w=r.sizeFromShape(b),v=o.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([m,g]);r.assert(p===f,()=>`Error in matMul: inner shapes (${p}) and (${f}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${s} must match.`);const k=n?[x,p,m]:[x,m,p],S=s?[w,g,f]:[w,f,g],I=cz({inputs:{x:e},backend:a,attrs:{shape:k}}),C=cz({inputs:{x:t},backend:a,attrs:{shape:S}}),N=[I,C],T=Math.max(x,w),_=n?I.shape[1]:I.shape[2],E=null!=i,A=null!=l,R="leakyrelu"===c,$=null!=c?sz(c,!0):null;let F;if((1===m||1===g)&&_>1e3&&!1===(E||A||R||null!=$)){let e=I,t=C;n&&(e=wz({inputs:{x:I},backend:a,attrs:{perm:[0,2,1]}}),N.push(e)),s&&(t=wz({inputs:{x:C},backend:a,attrs:{perm:[0,2,1]}}),N.push(t));const r=1===g;let i=e;1!==g&&(i=cz({inputs:{x:e},backend:a,attrs:{shape:[T,_,1]}}),N.push(i));const o=1===g?2:1;let l=t;r&&(l=cz({inputs:{x:t},backend:a,attrs:{shape:[T,1,_]}}),N.push(l));const u=lz({inputs:{a:i,b:l},backend:a});F=bz({inputs:{x:u},backend:a,attrs:{axis:o,keepDims:!0}}),N.push(u)}else{const o=nm(e.dtype,t.dtype),c=new az(k,S,[T,m,g],n,s,E,$,A,R),h=[I,C];if(null!=i&&h.push(i),A&&h.push(l),R){const e=a.makeTensorInfo([],"float32",r.createScalarValue(u,"float32"));h.push(e),N.push(e)}F=a.runWebGLProgram(c,h,o)}const D=cz({inputs:{x:F},backend:a,attrs:{shape:v}});N.push(F);for(const r of N)a.disposeIntermediateTensorInfo(r);return D}const Sz={kernelName:"_FusedMatMul",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=r;return kz({a:s,b:a,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},Iz={kernelName:"Abs",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=dL(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let s;return s=tf().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new zL(r.shape,"return abs(x);"):new OL(r.shape,"return abs(x);"),n.runWebGLProgram(s,[r],r.dtype)}},Cz={kernelName:"Acos",backendName:"webgl",kernelFunc:nz({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"})},Nz={kernelName:"Acosh",backendName:"webgl",kernelFunc:nz({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"})},Tz="return a + b;",_z={kernelName:"Add",backendName:"webgl",kernelFunc:rz({opSnippet:Tz,packedOpSnippet:Tz,supportsComplex:!0,cpuKernelImpl:PM})};class Ez{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((e,t)=>"T"+t);const n=[];this.variableNames.forEach(e=>{n.push(`float v${e} = get${e}AtOutCoords();`)});const r=this.variableNames.map(e=>"v"+e).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class Az{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((e,t)=>"T"+t);const n=[];this.variableNames.forEach(e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)});const r=this.variableNames.map(e=>"v"+e).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const Rz={kernelName:"AddN",backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,s=n;if(1===s.length)return jL({inputs:{x:s[0]},backend:r});if(s.length>tf().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(s.length/2),n=e({inputs:s.slice(0,t),backend:r}),a=e({inputs:s.slice(t),backend:r});return e({inputs:[n,a],backend:r})}const a=s.map(e=>e.dtype).reduce((e,t)=>nm(e,t)),i=s.map(e=>e.shape),o=tf().getBool("WEBGL_PACK")?new Az(s[0].shape,i):new Ez(s[0].shape,i);return r.runWebGLProgram(o,s,a)}},$z={kernelName:"All",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,keepDims:o}=s,l=a.shape.length,u=r.parseAxisParam(i,a.shape);let c=u;const h=p.getAxesPermutation(c,l);let d=a;null!=h&&(d=wz({inputs:{x:a},backend:n,attrs:{perm:h}}),c=p.getInnerMostAxes(c.length,l)),p.assertAxesAreInnerMostDims("all",c,l);const[f,m]=p.computeOutAndReduceShapes(d.shape,c),g=cz({inputs:{x:d},backend:n,attrs:{shape:[-1,r.sizeFromShape(m)]}}),y=fz(g,g.dtype,"all",n);let b;return b=cz(o?{inputs:{x:y},backend:n,attrs:{shape:p.expandShapeToKeepDim(f,u)}}:{inputs:{x:y},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(y),null!=h&&n.disposeIntermediateTensorInfo(d),b}},Fz={kernelName:"Any",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,keepDims:o}=s,l=a.shape.length,u=r.parseAxisParam(i,a.shape);let c=u;const h=p.getAxesPermutation(c,l);let d=a;null!=h&&(d=wz({inputs:{x:a},backend:n,attrs:{perm:h}}),c=p.getInnerMostAxes(c.length,l)),p.assertAxesAreInnerMostDims("any",c,l);const[f,m]=p.computeOutAndReduceShapes(d.shape,c),g=cz({inputs:{x:d},backend:n,attrs:{shape:[-1,r.sizeFromShape(m)]}}),y=fz(g,g.dtype,"any",n);let b;return b=cz(o?{inputs:{x:y},backend:n,attrs:{shape:p.expandShapeToKeepDim(f,u)}}:{inputs:{x:y},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(y),null!=h&&n.disposeIntermediateTensorInfo(d),b}};class Dz{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:s,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,a],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));"};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${"max"===t?">":"<"} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class Oz{constructor(e,t,n,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,r.assert(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);const a=Math.ceil(e[e.length-1]/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),s||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,l=wM(o),u=_L("coords",o);let c,h;if(1===a){h=o+1;const e=wM(h);c=`\n        ${e} sourceLocR = ${e}(${u.join()}, 0);\n        ++${u[o-1]};\n        ${e} sourceLocG = ${e}(${u.join()}, 0);\n        ++${u[o-2]};\n        ${e} sourceLocA = ${e}(${u.join()}, 0);\n        --${u[o-1]};\n        ${e} sourceLocB = ${e}(${u.join()}, 0);\n        --${u[o-2]};`}else h=o,c=`\n        ${l} sourceLocR = coords;\n        ++${u[o-1]};\n        ${l} sourceLocG = coords;\n        ++${u[o-2]};\n        ${l} sourceLocA = coords;\n        --${u[o-1]};\n        ${l} sourceLocB = coords;\n        --${u[o-2]};`;const d=["x","y","z","w","u","v"].slice(0,h),p="."+d[h-1],f=d.map(e=>"int "+e),m=_L("sourceLocR",h-1).concat("inIdx.r"),g=_L("sourceLocG",h-1).concat("inIdx.g"),y=_L("sourceLocB",h-1).concat("inIdx.b"),b=_L("sourceLocA",h-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",w=s?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,v=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,k=s?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${u[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${u[o-2]} < ${i[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},\n          sourceLocB${p}, sourceLocA${p}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${v};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${v};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function Mz(e,t,n,s){const a=[n];if(p.assertAxesAreInnerMostDims("arg"+s.charAt(0).toUpperCase()+s.slice(1),a,t.shape.length),!tf().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],i=e.texData.get(t.dataId);let o=t;null!==i&&i.isPacked&&(o=e.unpackTensor(t),n.push(o));const[l,u]=p.computeOutAndReduceShapes(o.shape,a),c=r.sizeFromShape(u),h=cz({inputs:{x:o},backend:e,attrs:{shape:[-1,c]}});n.push(h);const d=function e(t,n,r,s=null){let a=n.shape[0],i=n.shape[1];null!=s&&(a=s.shape[0],i=s.shape[1]);const o=p.computeOptimalWindowSize(i),l={windowSize:o,inSize:i,batchSize:a,outSize:Math.ceil(i/o)},u=new Dz(l,r,null==s),c=[n];null!=s&&c.push(s);const h=t.runWebGLProgram(u,c,"int32");if(1===h.shape[1])return h;const d=e(t,n,r,h);return t.disposeIntermediateTensorInfo(h),d}(e,h,s);n.push(d);const f=cz({inputs:{x:d},backend:e,attrs:{shape:l}});return n.forEach(t=>e.disposeIntermediateTensorInfo(t)),f}return function e(t,n,r,s=null){const a=null!=s?s.shape:n.shape,i=p.computeOptimalWindowSize(a[a.length-1]),o=new Oz(a,i,r,null==s),l=t.runWebGLProgram(o,null==s?[n]:[n,s],"int32");if(l.shape.length===n.shape.length){const s=e(t,n,r,l);return t.disposeIntermediateTensorInfo(l),s}return l}(e,t,s)}const Lz={kernelName:"ArgMax",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i}=s;let o=r.parseAxisParam(i,a.shape);const l=p.getAxesPermutation(o,a.shape.length);let u=a;const c=[];null!=l&&(u=wz({inputs:{x:a},backend:n,attrs:{perm:l}}),c.push(u),o=p.getInnerMostAxes(o.length,u.shape.length)),p.assertAxesAreInnerMostDims("argMax",[o[0]],u.shape.length);const h=Mz(n,u,o[0],"max");return c.forEach(e=>n.disposeIntermediateTensorInfo(e)),h}},zz={kernelName:"ArgMin",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i}=s;let o=r.parseAxisParam(i,a.shape);const l=p.getAxesPermutation(o,a.shape.length);let u=a;const c=[];null!=l&&(u=wz({inputs:{x:a},backend:n,attrs:{perm:l}}),c.push(u),o=p.getInnerMostAxes(o.length,u.shape.length)),p.assertAxesAreInnerMostDims("argMin",[o[0]],u.shape.length);const h=Mz(n,u,o[0],"min");return c.forEach(e=>n.disposeIntermediateTensorInfo(e)),h}},Pz={kernelName:"Asin",backendName:"webgl",kernelFunc:nz({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"})},Bz={kernelName:"Asinh",backendName:"webgl",kernelFunc:nz({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"})},Uz={kernelName:"Atan",backendName:"webgl",kernelFunc:nz({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"})},Vz={kernelName:"Atan2",backendName:"webgl",kernelFunc:rz({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"})},Wz={kernelName:"Atanh",backendName:"webgl",kernelFunc:nz({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"})};class Gz{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t;let m="0.0";if(f||(m="-1.0 / 1e-20"),n)return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${d}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value >= currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?s?`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`:`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `);let g=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(g="avgValue / count");const y=4*Math.floor(a/4),b=a%4,x=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float initializationValue = ${m};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${m});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${y}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${x}\n          }\n\n          int xC = xCCorner + ${y};\n          if (${1===b}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${x}\n          } else if (${2===b}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${x}\n          } else if (${3===b}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${x}\n          }\n        }\n        setOutput(${g});\n      }\n    `}}class Hz{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let x="0.0";if(b||(x="-1.0 / 1e-20"),n)return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value >= currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `);let w=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(w="avgValue / count");const v=4*Math.floor(a/4),k=a%4,S=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${v}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${S}\n            }\n\n            int xC = xCCorner + ${v};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${S}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${S}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${S}\n            }\n          }\n          setOutput(${w});\n        }\n      }\n    `}}const jz={kernelName:"AvgPool",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t;iM(a,"avgPool");const{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=s;r.assert(p.eitherStridesOrDilationsAreOne(o,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`);const c=p.computePool2DInfo(a.shape,i,o,1,l,u);if(1===c.filterWidth&&1===c.filterHeight&&r.arraysEqual(c.inShape,c.outShape))return jL({inputs:{x:a},backend:n});const h=new Gz(c,"avg",!1);return n.runWebGLProgram(h,[a],"float32")}},qz={kernelName:"AvgPool3D",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r,c=p.computePool3DInfo(s.shape,a,i,[1,1,1],o,l,u),h=new Hz(c,"avg",!1);return n.runWebGLProgram(h,[s],"float32")}};class Kz{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.effectiveFilterHeight,n=e.effectiveFilterWidth;this.userCode=`\n      const ivec2 pads = ivec2(${t-1-e.padInfo.top}, ${n-1-e.padInfo.left});\n      const float avgMultiplier = float(${1/(e.filterHeight*e.filterWidth)});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t};\n            wR += ${e.dilationHeight}) {\n          float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${n};\n            wC+= ${e.dilationWidth}) {\n            float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Xz{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.effectiveFilterDepth,n=e.effectiveFilterHeight,r=e.effectiveFilterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${t-1-e.padInfo.front}, ${n-1-e.padInfo.top}, ${r-1-e.padInfo.left});\n      const float avgMultiplier = float(${1/(e.filterDepth*e.filterHeight*e.filterWidth)});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${t};\n            wD += ${e.dilationDepth}) {\n          float dyD = float(dyDCorner + wD) / ${e.strideDepth}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${n};\n              wR += ${e.dilationHeight}) {\n            float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${r};\n                wC += ${e.dilationWidth}) {\n              float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Zz={kernelName:"AvgPool3DGrad",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r,h=p.computePool3DInfo(i.shape,o,l,[1,1,1],u,c),d=new Xz(h);return n.runWebGLProgram(d,[s],i.dtype)}},Yz={kernelName:"AvgPoolGrad",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a;iM([s,a],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=r,c=p.computePool2DInfo(i.shape,o,l,1,u),h=new Kz(c);return n.runWebGLProgram(h,[s],i.dtype)}},Jz={kernelName:"BatchMatMul",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:i,transposeB:o}=r;return kz({a:s,b:a,transposeA:i,transposeB:o,backend:n})}};class Qz{constructor(e,t,n,r,s,a){this.outputShape=[],this.variableNames=["x","mean","variance"],p.assertAndGetBroadcastShape(e,t),p.assertAndGetBroadcastShape(e,n);let i="0.0";null!=r&&(p.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=s&&(p.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${a}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class eP{constructor(e,t,n,r,s,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],p.assertAndGetBroadcastShape(e,t),p.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";null!=r&&(p.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=s&&(p.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${a}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const tP={kernelName:"FusedBatchNorm",backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,mean:a,variance:i,offset:o,scale:l}=e;r.assert(a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),r.assert(null==o||a.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),r.assert(null==l||a.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:u}=n;null==u&&(u=.001);const c=[s,a,i];let h=null;null!=o&&(h=o.shape,c.push(o));let d=null;null!=l&&(d=l.shape,c.push(l));const p=tf().getBool("WEBGL_PACK_NORMALIZATION")?new eP(s.shape,a.shape,i.shape,h,d,u):new Qz(s.shape,a.shape,i.shape,h,d,u);return t.runWebGLProgram(p,c,c[0].dtype)}};class nP{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=wM(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return rP.slice(0,e).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let r;r=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map((e,t)=>`sourceLoc.${rP[t]} = start[${t}] + coords.${rP[t]};`).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}const rP=["x","y","z","w","u","v"];class sP{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=wM(this.rank),n=_L("coords",this.rank),r=_L("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,a=`getChannel(getSource(${r.join()}), ${s})`,i=`\n      result.x = ${a};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${a};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${a};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${a};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map((e,t)=>`start[${t}]`).join()});`:e.map((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}}function aP(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{begin:i,size:o}=s,[l,c]=u.parseSliceParams(a,i,o);if(u.assertParamsValid(a,l,c),0===r.sizeFromShape(c))return n.makeTensorInfo(c,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||"string"===a.dtype){const e=n.texData.get(a.dataId),t=pL(e.values,l,c,a.shape,a.dtype);return n.makeTensorInfo(c,a.dtype,t)}const{isPacked:h}=n.texData.get(a.dataId),d=u.isSliceContinous(a.shape,l,c);if(h||!d){const e=tf().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new sP(c):new nP(c);return n.runWebGLProgram(e,[a],a.dtype,[l])}return n.uploadToGPU(a.dataId),function(e,t,n,s){const a=s.texData.get(e.dataId),i=s.makeTensorInfo(n,e.dtype),o=s.texData.get(i.dataId);Object.assign(o,a),o.refCount=1,o.shape=n,o.dtype=e.dtype;let l=u.computeFlatOffset(t,r.computeStrides(e.shape));a.slice&&(l+=a.slice.flatOffset),o.slice={flatOffset:l,origDataId:a.slice&&a.slice.origDataId||e.dataId};const c=s.dataRefCount.get(o.slice.origDataId)||1;return s.dataRefCount.set(o.slice.origDataId,c+1),i}(a,l,c,n)}const iP={kernelName:"Slice",backendName:"webgl",kernelFunc:aP},oP={kernelName:"BatchToSpaceND",backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{blockShape:i,crops:o}=s;r.assert(a.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const l=i.reduce((e,t)=>e*t),u=p.getReshaped(a.shape,i,l),c=p.getPermuted(u.length,i.length),h=p.getReshapedPermuted(a.shape,i,l),d=p.getSliceBeginCoords(o,i.length),f=p.getSliceSize(h,o,i.length),m=[],g=cz({inputs:{x:a},backend:n,attrs:{shape:u}}),y=wz({inputs:{x:g},backend:n,attrs:{perm:c}}),b=cz({inputs:{x:y},backend:n,attrs:{shape:h}}),x=aP({inputs:{x:b},backend:n,attrs:{begin:d,size:f}});return m.push(g),m.push(y),m.push(b),m.forEach(e=>n.disposeIntermediateTensorInfo(e)),x}},lP={kernelName:"Bincount",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i}=r,o=n.readSync(s.dataId),l=n.readSync(a.dataId),u=BM(o,l,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,u)}},uP={kernelName:"BroadcastArgs",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:s}=t,a=n.readSync(r.dataId),i=n.readSync(s.dataId),o=p.assertAndGetBroadcastShape(Array.from(a),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},cP=rz({opSnippet:"return float(a != b);",cpuKernelImpl:oL,dtype:"bool"}),hP={kernelName:"NotEqual",backendName:"webgl",kernelFunc:cP};function dP(e){const{inputs:t,backend:n}=e,{input:r}=t;return jL({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const pP={kernelName:"Real",backendName:"webgl",kernelFunc:dP},fP={kernelName:"Cast",backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:s,attrs:a}=t,{x:i}=n,{dtype:o}=a;if("complex64"===o){if("complex64"===i.dtype)return jL({inputs:{x:i},backend:s});const t=jb(i.shape),n=e({inputs:{x:i},backend:s,attrs:{dtype:"float32"}}),r=KL({inputs:{real:n,imag:t},backend:s});return t.dispose(),s.disposeIntermediateTensorInfo(n),r}if("complex64"===i.dtype){const t=dP({inputs:{input:i},backend:s}),n=e({inputs:{x:t},backend:s,attrs:{dtype:o}});return s.disposeIntermediateTensorInfo(t),n}if(!r.hasEncodingLoss(i.dtype,o)){const e=jL({inputs:{x:i},backend:s});return{dataId:e.dataId,shape:e.shape,dtype:o}}if("int32"===o)return function(e,t){const n=new OL(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(i,s);if("bool"===o){const e=s.makeTensorInfo([],"bool",r.getTypedArrayFromDType("bool",1)),t=cP({inputs:{a:i,b:e},backend:s});return s.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${i.dtype} to ${o}`)}},mP="return ceil(x);",gP={kernelName:"Ceil",backendName:"webgl",kernelFunc:nz({opSnippet:mP,packedOpSnippet:mP,cpuKernelImpl:VM})};class yP{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class bP{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const xP={kernelName:"ClipByValue",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{clipValueMin:a,clipValueMax:i}=r;let o;return o=tf().getBool("WEBGL_PACK_CLIP")?new bP(s.shape):new yP(s.shape),n.runWebGLProgram(o,[s],s.dtype,[[a],[i]])}};class wP{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function vP(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const kP={kernelName:"ComplexAbs",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=n.texData.get(r.dataId),a=new wP(r.shape),i=[vP(r,s.complexTensorInfos.real),vP(r,s.complexTensorInfos.imag)];return n.runWebGLProgram(a,i,i[0].dtype)}};class SP{constructor(e){this.outputShape=[],this.outputShape=p.computeOutShape(e,1),this.variableNames=e.map((e,t)=>"T"+t);const t=new Array(e.length-1);t[0]=e[0][1];for(let r=1;r<t.length;r++)t[r]=t[r-1]+e[r][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let r=1;r<t.length;r++)n.push(`else if (yC < ${t[r]}) setOutput(getT${r}(yR, yC-${t[r-1]}));`);n.push(`else setOutput(getT${t.length}(yR, yC-${t[t.length-1]}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class IP{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=p.computeOutShape(e,t);const n=this.outputShape,r=n.length,s=wM(r),a=_L("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map((e,t)=>"T"+t);const o=new Array(e.length-1);o[0]=e[0][t];for(let p=1;p<o.length;p++)o[p]=o[p-1]+e[p][t];const l=i[t],u=i.slice(-2),c=i.join();let h=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${u.join()}));\n        }`;for(let p=1;p<o.length;p++){const e=o[p-1];h+=`\n        if (${l} < ${o[p]}  && ${l} >= ${o[p-1]}) {\n          return getChannel(\n            getT${p}(${CP(i,l,e)}),\n            vec2(${CP(u,l,e)}));\n        }`}const d=o[o.length-1];h+=`\n        return getChannel(\n          getT${o.length}(${CP(i,l,d)}),\n          vec2(${CP(u,l,d)}));`,this.userCode=`\n      float getValue(${i.map(e=>"int "+e)}) {\n        ${h}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${a}), 0., 0., 0.);\n\n        ${a[r-1]} = ${a[r-1]} + 1;\n        if (${a[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${a});\n        }\n\n        ${a[r-2]} = ${a[r-2]} + 1;\n        if (${a[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${a});\n        }\n\n        ${a[r-1]} = ${a[r-1]} - 1;\n        if (${a[r-2]} < ${n[r-2]} &&\n            ${a[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${a});\n        }\n        setOutput(result);\n      }\n    `}}function CP(e,t,n){const r=e.indexOf(t);return e.map((e,t)=>t===r?`${e} - ${n}`:e).join()}function NP(e){const{inputs:t,backend:n}=e,{input:r}=t;return jL({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const TP={kernelName:"Imag",backendName:"webgl",kernelFunc:NP};function _P(e){const{inputs:t,backend:n,attrs:s}=e,{axis:a}=s,i=r.parseAxisParam(a,t[0].shape)[0],o=p.computeOutShape(t.map(e=>e.shape),i);if(0===r.sizeFromShape(o))return n.makeTensorInfo(o,t[0].dtype,[]);const l=t.filter(e=>r.sizeFromShape(e.shape)>0);if(1===l.length)return jL({inputs:{x:l[0]},backend:n});const u=l.map(e=>e.shape);return p.assertParamsConsistent(u,i),function e(t,n,s){const a=t[0].dtype;if("complex64"===a){const r=t.map(e=>dP({inputs:{input:e},backend:s})),a=t.map(e=>NP({inputs:{input:e},backend:s})),i=e(r,n,s),o=e(a,n,s),l=KL({inputs:{real:i,imag:o},backend:s});return r.forEach(e=>s.disposeIntermediateTensorInfo(e)),a.forEach(e=>s.disposeIntermediateTensorInfo(e)),s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(o),l}let i=s.shouldExecuteOnCPU(t);if("string"===a&&(i=!0),i){const e=t.map(e=>{const t=r.sizeFromShape(e.shape.slice(n));return cz({inputs:{x:e},backend:s,attrs:{shape:[-1,t]}})}),i=e.map(e=>({vals:s.readSync(e.dataId),shape:e.shape})),o=p.computeOutShape(e.map(e=>e.shape),1),l=WM(i,o,a,1===e[0].shape[0]),u=p.computeOutShape(t.map(e=>e.shape),n),c=s.makeTensorInfo(u,a,l);return e.forEach(e=>s.disposeIntermediateTensorInfo(e)),c}if(t.length>tf().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(t.length/2),a=e(t.slice(0,r),n,s),i=e(t.slice(r),n,s),o=e([a,i],n,s);return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(i),o}if(tf().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&t[0].shape.length>1){const e=new IP(t.map(e=>e.shape),n);return s.runWebGLProgram(e,t,a)}const{tensors2D:o,outShape:l}=function(e,t,n){const s=p.computeOutShape(e.map(e=>e.shape),t);return{tensors2D:e.map(e=>cz({inputs:{x:e},attrs:{shape:[-1,r.sizeFromShape(e.shape.slice(t))]},backend:n})),outShape:s}}(t,n,s),u=new SP(o.map(e=>e.shape)),c=s.runWebGLProgram(u,o,a);o.forEach(e=>s.disposeIntermediateTensorInfo(e));const h=cz({inputs:{x:c},attrs:{shape:l},backend:s});return s.disposeIntermediateTensorInfo(c),h}(l,i,n)}const EP={kernelName:"Concat",backendName:"webgl",kernelFunc:_P};class AP{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let x="",w="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,w="result = activation(result);");const v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${v}\n        ${w}\n        setOutput(result);\n      }\n    `}}class RP{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${s}, ${a}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class $P{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=CM(this.outputShape.length);const{dataFormat:n}=t,r=lM(),s="channelsLast"===n,a=s?0:1,i=s?1:2,o=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${e[1]} && pos < ${e[0]}) {`;let l="";for(let u=0;u<=1;u++)for(let e=0;e<=1;e++)l+=`\n          blockIndex = rc.y + ${e};\n          pos = rc.x + ${u};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${a}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${s}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*u+e}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*u+e}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${l}\n\n        ${r.output} = result;\n      }\n    `}}function FP({x:e,filter:t,convInfo:n,backend:s,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){const u=e.shape,c=s.texData.get(e.dataId),h="channelsLast"===n.dataFormat;let d;const p=[];if((1!=u[0]*u[1]*u[2]&&1!==n.outChannels||!(n.inChannels>1e3))&&c.isPacked&&h&&null!=c.texture&&u[2]%2!=0&&r.arraysEqual(c.shape.slice(-3),u.slice(-3))){const h={dataId:e.dataId,shape:[1,u[0]*u[1]*(u[2]+1),n.inChannels],dtype:e.dtype},f=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,r.assert(eM(c.shape,h.shape),()=>`packed reshape ${c.shape} to ${h.shape} isn't free`);const m=cz({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}});p.push(m);const g=kz({a:h,b:m,backend:s,transposeA:!1,transposeB:!1,bias:a,activation:l,preluActivationWeights:i,leakyreluAlpha:o}),y=s.texData.get(g.dataId);r.assert(y.isPacked,()=>"batchMatMul result is expected to be packed"),c.shape=f,y.shape=n.outShape,d=jL({inputs:{x:g},backend:s}),d.shape=n.outShape,p.push(g)}else{const r=cz({inputs:{x:e},backend:s,attrs:{shape:[1,h?u[0]*u[1]*u[2]:u[0]*u[2]*u[3],n.inChannels]}}),c=cz({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}}),f=kz({a:r,b:c,transposeA:!1,transposeB:!1,backend:s,bias:a,activation:l,preluActivationWeights:i,leakyreluAlpha:o});d=cz({inputs:{x:f},backend:s,attrs:{shape:n.outShape}}),p.push(r),p.push(c),p.push(f)}for(const r of p)s.disposeIntermediateTensorInfo(r);return d}function DP({x:e,filter:t,convInfo:n,backend:s,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){const{filterWidth:u,filterHeight:c,inChannels:h,outWidth:d,outHeight:p,dataFormat:f}=n,m="channelsLast"===f,g=u*c*h,y=p*d,b=[g,y],x=[],w=cz({inputs:{x:e},backend:s,attrs:{shape:e.shape.slice(1)}}),v=cz({inputs:{x:t},backend:s,attrs:{shape:[1,g,r.sizeFromShape(t.shape)/g]}});x.push(w),x.push(v);const k=new $P(b,n),S=s.runWebGLProgram(k,[w],"float32",[w.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]]),I=cz({inputs:{x:S},backend:s,attrs:{shape:[1,b[0],b[1]]}});x.push(S),x.push(I);const C=null!=a,N=null!=i,T="leakyrelu"===l,_=l?sz(l,!0):null,E=new az(I.shape,v.shape,[1,y,n.outChannels],!0,!1,C,_,N,T),A=[I,v];if(a&&A.push(a),N&&A.push(i),T){const e=s.makeTensorInfo([],"float32",r.createScalarValue(o,"float32"));A.push(e),x.push(e)}const R=s.runWebGLProgram(E,A,"float32"),$=cz({inputs:{x:R},backend:s,attrs:{shape:m?[1,p,d,n.outChannels]:[1,n.outChannels,p,d]}});x.push(R);for(const r of x)s.disposeIntermediateTensorInfo(r);return $}const OP={kernelName:"Conv2D",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=r,h=p.convertConv2DDataFormat(l),d=p.computeConv2DInfo(s.shape,a.shape,i,u,o,c,!1,h);let f;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(tf().getBool("WEBGL_CONV_IM2COL")&&1===s.shape[0])f=DP({x:s,filter:a,convInfo:d,backend:n});else{const e=new AP(d);f=n.runWebGLProgram(e,[s,a],"float32")}else f=FP({x:s,filter:a,convInfo:d,backend:n});const m=cz({inputs:{x:f},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(f),m}};class MP{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${e.strideHeight} - ${e.padInfo.top};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${e.strideWidth} - ${e.padInfo.left};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${"channelsLast"===e.dataFormat}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class LP{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r="channelsLast"===e.dataFormat;this.userCode=`\n      const ivec2 pads = ivec2(${t-1-e.padInfo.top}, ${n-1-e.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${r?3:1}];\n\n        ivec2 dyCorner = ivec2(coords[${r?1:2}], coords[${r?2:3}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${r}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class zP{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape,this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${e.strideDepth} - ${e.padInfo.front};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${e.strideHeight} - ${e.padInfo.top};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${e.strideWidth} - ${e.padInfo.left};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class PP{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${t-1-e.padInfo.front}, ${n-1-e.padInfo.top}, ${r-1-e.padInfo.left});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${e.strideDepth}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const BP={kernelName:"Conv2DBackpropFilter",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=r,h=p.convertConv2DDataFormat(l),d=p.computeConv2DInfo(s.shape,c,i,1,o,u,!1,h),f=new MP(d);return n.runWebGLProgram(f,[s,a],"float32")}},UP={kernelName:"Conv2DBackpropInput",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=r,h=p.convertConv2DDataFormat(u),d=p.computeConv2DInfo(i,a.shape,o,1,l,c,!1,h),f=new LP(d);return n.runWebGLProgram(f,[s,a],"float32")}},VP={kernelName:"Conv3D",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l}=r,u=p.computeConv3DInfo(s.shape,a.shape,i,l,o),c=new RP(u);return n.runWebGLProgram(c,[s,a],"float32")}},WP={kernelName:"Conv3DBackpropFilterV2",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,filterShape:l}=r,u=p.computeConv3DInfo(s.shape,l,i,1,o),c=new zP(u);return n.runWebGLProgram(c,[s,a],"float32")}},GP={kernelName:"Conv3DBackpropInputV2",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:i,strides:o,inputShape:l}=r,u=p.computeConv3DInfo(l,a.shape,o,1,i),c=new PP(u);return n.runWebGLProgram(c,[s,a],"float32")}},HP={kernelName:"Cos",backendName:"webgl",kernelFunc:nz({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"})},jP={kernelName:"Cosh",backendName:"webgl",kernelFunc:nz({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"})};class qP{constructor(e,t,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,o,l]=e,[u]=t,[c,h]=n;this.outputShape=[u,c,h,l];const d="bilinear"===r?1:0,[p,f]=[i-1+".0",o-1+".0"],[m,g,y]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0","0.5 * (y1+y2) * "+p],[b,x,w]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0","0.5 * (x1+x2) * "+f];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${a}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${s}));\n          return;\n        }\n        float in_x = ${w};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${s}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const KP={kernelName:"CropAndResize",backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,c=new qP(s.shape,a.shape,o,l,u);return n.runWebGLProgram(c,[s,a,i],"float32")}};class XP{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.outputShape=e;const r=e.length,s=t?"0.0":`getX(${ZP(r,"coords")})`,a=e[e.length-1];let i="",o="";t?(i=n?"end != "+(a-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?"end + pow2 < "+a:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${wM(r)} coords = getOutputCoords();\n        int end = ${YP(r,"coords")};\n        float val = ${s};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${YP(r,"coords")} = idx;\n          val += getX(${ZP(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}}function ZP(e,t){if(1===e)return""+t;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function YP(e,t){if(1===e)return""+t;if(2===e)return t+".y";if(3===e)return t+".z";if(4===e)return t+".w";throw Error(`Cumulative sum for rank ${e} is not yet supported`)}const JP={kernelName:"Cumsum",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r,l=s.shape.length,u=p.getAxesPermutation([a],l);let c=s;null!=u&&(c=wz({inputs:{x:s},backend:n,attrs:{perm:u}}));const h=p.getInnerMostAxes(1,l)[0];if(h!==l-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${s.shape.length-1} but got axis=`+a);const d=c.shape[h];let f=jL({inputs:{x:c},backend:n});for(let p=0;p<=Math.ceil(Math.log2(d))-1;p++){const e=new XP(c.shape,!1,o),t=f;f=n.runWebGLProgram(e,[f],f.dtype,[[p]]),n.disposeIntermediateTensorInfo(t)}if(i){const e=new XP(c.shape,i,o),t=f;f=n.runWebGLProgram(e,[f],f.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=u){const e=wz({inputs:{x:f},backend:n,attrs:{perm:p.getUndoAxesPermutation(u)}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(c),e}return f}},QP={kernelName:"DenseBincount",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i,binaryOutput:o}=r;if(1===s.shape.length){const e=n.readSync(s.dataId),t=n.readSync(a.dataId),r=BM(e,t,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,r)}if(2===s.shape.length){const e=n.bufferSync(s),t=n.bufferSync(a),r=UM(e,t,i,o);return n.makeTensorInfo(r.shape,a.dtype,r.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+s.shape.length+".")}};class eB{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const tB={kernelName:"DepthToSpace",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:i}=r,o=s.shape[0],l=("NHWC"===i?s.shape[1]:s.shape[2])*a,u=("NHWC"===i?s.shape[2]:s.shape[3])*a,c=("NHWC"===i?s.shape[3]:s.shape[1])/(a*a),h=new eB("NHWC"===i?[o,l,u,c]:[o,c,l,u],a,i);return n.runWebGLProgram(h,[s],s.dtype)}};class nB{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=CM(this.outputShape.length);const a=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels;let l="",u="";n&&(l=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,u="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${l}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${a}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${u}\n        setOutput(result);\n      }\n    `}}class rB{constructor(e,t=!1,n=null,s=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=CM(this.outputShape.length);const i=e.outChannels/e.inChannels,o=e.padInfo.left,l=e.strideWidth,u=e.dilationWidth,c=e.filterHeight,h=e.filterWidth,d=h;let p="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let r=0;r<h;r++)p+=`\n          vec4 xTexelC${2*r};\n          int xTexelC${2*r}Ready;\n          vec4 xTexelC${2*r+1};\n          int xTexelC${2*r+1}Ready;\n          vec4 xC${r};`;p+=`\n    for (int r = 0; r < ${c}; r++) {\n      `;for(let r=0;r<h;r++)p+=`\n          xTexelC${2*r} = vec4(0.0);\n          xTexelC${2*r}Ready = 0;\n          xTexelC${2*r+1} = vec4(0.0);\n          xTexelC${2*r+1}Ready = 0;\n          xC${r} = vec4(0.0);`;p+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let y=0;y<(d+1)/2;y++){const e=2*y;if(p+=`\n          xC = xCCorner + ${e*u};\n          `,1===l){if(e<h&&(o%2==1?(p+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n              `,p+=1===u&&e>0?`\n                xC${e} = vec4(xTexelC${e-2}.zw, xTexelC${e}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${e} = vec4(previous.zw, xTexelC${e}.xy);\n                  } else {\n                    xC${e} = vec4(0.0, 0.0, xTexelC${e}.xy);\n                  }\n                  `):p+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xC${e} = xTexelC${e};\n                `,e+1<h)){const t=o%2==0?r.nearestLargerEven(u):u;u%2==0&&o%2==1||u%2!=0&&o%2!=1?(p+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${t};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                    xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${e+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${e+1}Ready = 1;\n                  }\n                  `,u>1&&(p+=`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                      xTexelC${e} = getX(batch, xR, xCOffset, d1);\n                      xTexelC${e}Ready = 1;\n                    }\n                    `),p+=`\n                  xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.xy);\n                  `):p+=1===t?`\n                    xC${e+1} = xTexelC${e};\n                    `:`\n                    xCOffset = xC + ${t};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                      xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${e+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${e+1}Ready = 1;\n                    }\n\n                    xC${e+1} = xTexelC${e+1};\n                    `}}else e<h&&(o%2==1?(p+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n              `,e+1<h&&(p+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${e+1} = vec4(xTexelC${e+1}.xy, final.xy);\n                `)):(p+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(\n                  xTexelC${e}.xy, xTexelC${e+1}.xy);\n              `,e+1<h&&(p+=`\n                  xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n                `)));e<h&&(p+=`\n            wTexel = getW(r, ${e}, d1, q);\n            dotProd += xC${e} * vec4(wTexel.xz, wTexel.xz);\n          `,e+1<h&&(p+=`\n              wTexel = getW(r, ${e+1}, d1, q);\n              dotProd += xC${e+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}p+="\n    }\n  ",p+="\n      }\n    ";let f="",m="";n&&(f=s?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,m="result = activation(result);");const g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${f}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${i};\n        int q = d2 - d1 * ${i};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${p}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${g}\n        ${m}\n        setOutput(result);\n      }\n    `}}const sB={kernelName:"DepthwiseConv2dNative",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:i}=t,{strides:o,pad:l,dilations:u,dimRoundingMode:c}=s;let h=u;null==h&&(h=[1,1]),r.assert(p.eitherStridesOrDilationsAreOne(o,h),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${h}'`);const d=p.computeConv2DInfo(a.shape,i.shape,o,h,l,c,!0);let f;return f=tf().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels==1?new rB(d):new nB(d),n.runWebGLProgram(f,[a,i],"float32",[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]])}};class aB{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${e.outChannels/e.inChannels} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${e.strideHeight} - ${e.padInfo.top};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${e.strideWidth} - ${e.padInfo.left};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class iB{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${t-1-e.padInfo.top}, ${n-1-e.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${r}; dm++) {\n              int d2 = d1 * ${r} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const oB={kernelName:"DepthwiseConv2dNativeBackpropFilter",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=r,h=p.computeConv2DInfo(s.shape,c,i,o,l,u,!0),d=new aB(h);return n.runWebGLProgram(d,[s,a],"float32")}},lB={kernelName:"DepthwiseConv2dNativeBackpropInput",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=r,h=p.computeConv2DInfo(c,a.shape,i,o,l,u,!0),d=new iB(h);return n.runWebGLProgram(d,[s,a],"float32")}};class uB{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const cB={kernelName:"Diag",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t,a=[...s.shape,...s.shape],i=r.sizeFromShape(s.shape),o=cz({inputs:{x:s},backend:n,attrs:{shape:[i]}}),l=new uB(i),u=n.runWebGLProgram(l,[o],o.dtype),c=cz({inputs:{x:u},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),c}};class hB{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:s,strideWidth:a,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:c,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${a});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const dB={kernelName:"Dilation2D",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l}=r,u=p.computeDilation2DInfo(s.shape,a.shape,i,o,"NHWC",l);let c;const h=new hB(u);c=n.runWebGLProgram(h,[s,a],"float32");const d=cz({inputs:{x:c},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(c),d}},pB={kernelName:"Einsum",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{equation:a}=s,i=t,{allDims:o,summedDims:l,idDims:u}=p.decodeEinsumEquation(a,i.length);p.checkEinsumDimSizes(o.length,u,i);const{path:c,steps:h}=p.getEinsumComputePath(l,u),d=h.length;let f=null,m=o.length;const g=[];for(let y=0;y<d;++y){for(const e of h[y]){const{permutationIndices:t,expandDims:s}=p.getEinsumPermutation(m,u[e]);let a;p.isIdentityPermutation(t)?a=i[e]:(a=wz({inputs:{x:i[e]},backend:n,attrs:{perm:t}}),g.push(a));const o=a.shape.slice();for(let e=0;e<s.length;++e)o.splice(s[e],0,1);r.arraysEqual(a.shape,o)||(a=cz({inputs:{x:a},backend:n,attrs:{shape:o}}),g.push(a)),null===f?f=a:(f=lz({inputs:{a,b:f},backend:n}),g.push(f))}y<d-1&&(c[y]>=0&&(f=bz({inputs:{x:f},backend:n,attrs:{axis:c[y]-(o.length-m),keepDims:!1}}),g.push(f)),m--)}for(const r of g)r!==f&&n.disposeIntermediateTensorInfo(r);return f}},fB={kernelName:"Elu",backendName:"webgl",kernelFunc:nz({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"})},mB={kernelName:"EluGrad",backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:s}=t,a=tf().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new HL("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,s.shape):new GL("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,s.shape);return n.runWebGLProgram(a,[r,s],r.dtype)}},gB={kernelName:"Equal",backendName:"webgl",kernelFunc:rz({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:GM})},yB={kernelName:"Erf",backendName:"webgl",kernelFunc:nz({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${p.ERF_P};\n  float a1 = ${p.ERF_A1};\n  float a2 = ${p.ERF_A2};\n  float a3 = ${p.ERF_A3};\n  float a4 = ${p.ERF_A4};\n  float a5 = ${p.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`})},bB="return exp(x);",xB=nz({opSnippet:bB,packedOpSnippet:bB,cpuKernelImpl:HM,dtype:"float32"}),wB={kernelName:"Exp",backendName:"webgl",kernelFunc:xB};function vB(e){const{inputs:t,attrs:n,backend:s}=e,{dim:a}=n,{input:i}=t,o=i.shape.length,l=i.shape.slice();let u=a;return a<0&&(r.assert(-(o+1)<=a,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),u=o+a+1),l.splice(u,0,1),cz({inputs:{x:i},backend:s,attrs:{shape:l}})}const kB={kernelName:"ExpandDims",backendName:"webgl",kernelFunc:vB},SB="return exp(x) - 1.0;",IB={kernelName:"Expm1",backendName:"webgl",kernelFunc:nz({opSnippet:SB,packedOpSnippet:SB,cpuKernelImpl:jM})};class CB{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const s=n?"2.0 * "+Math.PI:"-2.0 * "+Math.PI,a=n?r+".0":"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${a};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function NB(e,t,n){const s=n.texData.get(e.dataId),a=r.sizeFromShape(e.shape),i=e.shape[e.shape.length-1],o=cz({inputs:{x:e},backend:n,attrs:{shape:[a/i,i]}}),l=o.shape,u=new CB("real",l,t),c=new CB("imag",l,t),h=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:l},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:l}],d=n.runWebGLProgram(u,h,"float32"),p=n.runWebGLProgram(c,h,"float32"),f=KL({inputs:{real:d,imag:p},backend:n});n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p);const m=cz({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(f),m}const TB={kernelName:"FFT",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return NB(r,!1,n)}};class _B{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function EB(e){const{backend:t,attrs:n}=e,{shape:s,value:a}=n;let{dtype:i}=n;if(i=i||r.inferDtype(a),"string"===i){const e=r.getArrayFromDType(i,r.sizeFromShape(s));return e.fill(a),t.makeTensorInfo(s,i,e)}{const e=new _B(s,a);return t.runWebGLProgram(e,[],i,[[a]])}}const AB={kernelName:"Fill",backendName:"webgl",kernelFunc:EB};class RB{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const $B={kernelName:"FlipLeftRight",backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,s=new RB(n.shape);return r.runWebGLProgram(s,[n],n.dtype)}},FB="return floor(x);",DB={kernelName:"Floor",backendName:"webgl",kernelFunc:nz({opSnippet:FB,packedOpSnippet:FB,cpuKernelImpl:qM})},OB={kernelName:"FloorDiv",backendName:"webgl",kernelFunc:rz({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"})};class MB{constructor(e){this.variableNames=["A"];const t=lM(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class LB{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=lM(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const zB={kernelName:"FromPixels",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:s}=t;const{numChannels:a}=r,i="undefined"!=typeof HTMLVideoElement&&s instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&s instanceof HTMLImageElement,[l,u]=i?[s.videoWidth,s.videoHeight]:[s.width,s.height],c=[u,l],h=[u,l,a];(o||i)&&(null==PB&&(PB=document.createElement("canvas").getContext("2d")),PB.canvas.width=l,PB.canvas.height=u,PB.drawImage(s,0,0,l,u),s=PB.canvas);const d=n.makeTensorInfo(c,"int32");n.texData.get(d.dataId).usage=DO.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),s);const p=tf().getBool("WEBGL_PACK")?new LB(h):new MB(h),f=n.runWebGLProgram(p,[d],"int32");return n.disposeData(d.dataId),f}};let PB;const BB={kernelName:"FusedConv2D",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:i,bias:o,preluActivationWeights:l}=t,{strides:u,pad:c,dataFormat:h,dilations:d,dimRoundingMode:f,activation:m,leakyreluAlpha:g}=s,y=p.convertConv2DDataFormat(h),b=p.computeConv2DInfo(a.shape,i.shape,u,d,c,f,!1,y);let x;const w=[];if(1!==b.filterHeight||1!==b.filterWidth||1!==b.dilationHeight||1!==b.dilationWidth||1!==b.strideHeight||1!==b.strideWidth||"SAME"!==b.padInfo.type&&"VALID"!==b.padInfo.type)if(tf().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])x=DP({x:a,filter:i,convInfo:b,backend:n,bias:o,activation:m,preluActivationWeights:l,leakyreluAlpha:g});else{const e=null!=o,t=null!=l,s="leakyrelu"===m,u=m?sz(m,!1):null,c=new AP(b,e,u,t,s),h=[a,i];if(o&&h.push(o),l&&h.push(l),s){const e=n.makeTensorInfo([],"float32",r.createScalarValue(g,"float32"));h.push(e),w.push(e)}x=n.runWebGLProgram(c,h,"float32")}else x=FP({x:a,filter:i,convInfo:b,backend:n,bias:o,activation:m,preluActivationWeights:l,leakyreluAlpha:g});const v=cz({inputs:{x},backend:n,attrs:{shape:b.outShape}});return w.push(x),w.forEach(e=>n.disposeIntermediateTensorInfo(e)),v}},UB={kernelName:"FusedDepthwiseConv2D",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:i,bias:o,preluActivationWeights:l}=t,{strides:u,pad:c,dilations:h,dimRoundingMode:d,activation:f,leakyreluAlpha:m}=s,g=[];let y=h;null==y&&(y=[1,1]),r.assert(p.eitherStridesOrDilationsAreOne(u,y),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${y}'`);const b=p.computeConv2DInfo(a.shape,i.shape,u,y,c,d,!0),x=tf().getBool("WEBGL_PACK_DEPTHWISECONV")&&b.strideWidth<=2&&b.outChannels/b.inChannels==1,w=f?sz(f,x):null,v=[a,i],k=null!=o,S=null!=l,I="leakyrelu"===f;if(k&&v.push(o),S&&v.push(l),I){const e=n.makeTensorInfo([],"float32",r.createScalarValue(m,"float32"));v.push(e),g.push(e)}let C;C=x?new rB(b,k,w,S,I):new nB(b,k,w,S,I);const N=n.runWebGLProgram(C,v,"float32",[[b.padInfo.top,b.padInfo.left],[b.strideHeight,b.strideWidth],[b.dilationHeight,b.dilationWidth],[b.inHeight,b.inWidth]]);return g.forEach(e=>n.disposeIntermediateTensorInfo(e)),N}};class VB{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const r=wM(t.length),s=wM(n.length);this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${s} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${this.sliceDim>1?"strides[j]":"strides"};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const WB={kernelName:"GatherNd",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:s,indices:a}=t,i=a.shape,o=i[i.length-1],l=r.sizeFromShape(s.shape),[u,c,h,d]=p.prepareAndValidate(s,a),f=cz({inputs:{x:a},backend:n,attrs:{shape:[c,o]}}),m=cz({inputs:{x:s},backend:n,attrs:{shape:[r.sizeFromShape(s.shape)/h,h]}});if(n.shouldExecuteOnCPU([s,a])||"string"===s.dtype){const e=n.readSync(a.dataId),t=n.bufferSync(s),r=KM(e,t,s.dtype,c,o,h,d,s.shape,l);return n.makeTensorInfo(u,s.dtype,r.values)}const g=new VB(o,d,[c,h]),y=n.runWebGLProgram(g,[m,f],m.dtype),b=cz({inputs:{x:y},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),b}};class GB{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=wM(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let s=0;s<e.length;s++)r.push(2===s?"int(getIndices(resRC.x, resRC.z))":""+n[s]);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}function HB(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,indices:i}=t,{axis:o,batchDims:l}=s,u=r.parseAxisParam(o,a.shape)[0],c=n.readSync(i.dataId),h=a.shape[u];for(let p=0;p<c.length;++p){const e=c[p];r.assert(e<=h-1&&e>=0,()=>`GatherV2: the index value ${e} is not in [0, ${h-1}]`)}const d=p.segment_util.collectGatherOpShapeInfo(a,i,u,l),f=r.sizeFromShape(i.shape),m=[],g=cz({inputs:{x:a},backend:n,attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]}}),y=cz({inputs:{x:i},backend:n,attrs:{shape:[d.batchSize,f/d.batchSize]}});m.push(g),m.push(y);const b=[d.batchSize,d.outerSize,f/d.batchSize,d.sliceSize];if(n.shouldExecuteOnCPU([a,i])||"string"===a.dtype){const e=n.bufferSync(y),t=n.bufferSync(g),r=XM(t,e,b);return m.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(d.outputShape,r.dtype,r.values)}const x=new GB(g.shape,b),w=n.runWebGLProgram(x,[g,y],g.dtype);m.push(w);const v=cz({inputs:{x:w},backend:n,attrs:{shape:d.outputShape}});return m.forEach(e=>n.disposeIntermediateTensorInfo(e)),v}const jB={kernelName:"GatherV2",backendName:"webgl",kernelFunc:HB},qB={kernelName:"Greater",backendName:"webgl",kernelFunc:rz({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:ZM,dtype:"bool"})},KB={kernelName:"GreaterEqual",backendName:"webgl",kernelFunc:rz({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:YM})},XB={kernelName:"IFFT",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return NB(r,!0,n)}},ZB={kernelName:"IsFinite",backendName:"webgl",kernelFunc:nz({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"})},YB={kernelName:"IsInf",backendName:"webgl",kernelFunc:nz({opSnippet:"return float(isinf(x));",dtype:"bool"})},JB={kernelName:"IsNan",backendName:"webgl",kernelFunc:nz({opSnippet:"return float(isnan(x));",dtype:"bool"})},QB={kernelName:"Less",backendName:"webgl",kernelFunc:rz({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:JM,dtype:"bool"})},eU={kernelName:"LessEqual",backendName:"webgl",kernelFunc:rz({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:QM,dtype:"bool"})},tU={kernelName:"LinSpace",backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,i=eL(r,s,a);return t.makeTensorInfo([i.length],"float32",i)}},nU={kernelName:"Log",backendName:"webgl",kernelFunc:nz({opSnippet:"if (x < 0.0) return NAN;\n  return log(x);",packedOpSnippet:"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:tL})},rU={kernelName:"Log1p",backendName:"webgl",kernelFunc:nz({opSnippet:"return log(1.0 + x);"})},sU={kernelName:"LogicalAnd",backendName:"webgl",kernelFunc:rz({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"})},aU={kernelName:"LogicalNot",backendName:"webgl",kernelFunc:nz({opSnippet:"return float(!(x >= 1.0));"})},iU={kernelName:"LogicalOr",backendName:"webgl",kernelFunc:rz({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"})};class oU{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[];const a=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${a}; j <= ${a}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class lU{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${a};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${a}; j <= ${a}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const uU={kernelName:"LRN",backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:i,alpha:o,beta:l}=r,u=tf().getBool("WEBGL_PACK_NORMALIZATION")?new lU(s.shape,a,i,o,l):new oU(s.shape,a,i,o,l);return n.runWebGLProgram(u,[s],s.dtype)}};class cU{constructor(e,t,n,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=s,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${s})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${s});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const hU={kernelName:"LRNGrad",backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=r,h=new cU(s.shape,o,l,u,c);return n.runWebGLProgram(h,[s,a,i],s.dtype)}};function dU(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{reductionIndices:i,keepDims:o}=s,l=a.shape.length,u=r.parseAxisParam(i,a.shape);let c=u;const h=p.getAxesPermutation(c,l),d=null!=h,f=n.shouldExecuteOnCPU([a]);let m=a;if(d){if(f){const e=n.texData.get(m.dataId).values,t=new Array(l);for(let n=0;n<t.length;n++)t[n]=a.shape[h[n]];const r=CL(e,a.shape,a.dtype,h,t);m=n.makeTensorInfo(t,a.dtype),n.texData.get(m.dataId).values=r}else m=yz(a,h,n);c=p.getInnerMostAxes(c.length,l)}p.assertAxesAreInnerMostDims("max",c,l);const[g,y]=p.computeOutAndReduceShapes(m.shape,c);let b,x=g;if(o&&(x=p.expandShapeToKeepDim(g,u)),f){const e=n.texData.get(m.dataId),t=nL(e.values,r.sizeFromShape(y),x,a.dtype);b=n.makeTensorInfo(x,a.dtype),n.texData.get(b.dataId).values=t}else b=function(e,t,n,s){const a=r.sizeFromShape(t),i=cz({inputs:{x:e},attrs:{shape:[r.sizeFromShape(e.shape)/a,a]},backend:s}),o=fz(i,e.dtype,"max",s),l=cz({inputs:{x:o},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(o),l}(m,y,x,n);return d&&n.disposeIntermediateTensorInfo(m),b}const pU={kernelName:"Max",backendName:"webgl",kernelFunc:dU},fU={kernelName:"Maximum",backendName:"webgl",kernelFunc:rz({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:rL})},mU={kernelName:"MaxPool",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t;iM(a,"maxPool");const{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=s;r.assert(p.eitherStridesOrDilationsAreOne(o,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`);const c=p.computePool2DInfo(a.shape,i,o,1,l,u);if(1===c.filterWidth&&1===c.filterHeight&&r.arraysEqual(c.inShape,c.outShape))return jL({inputs:{x:a},backend:n});const h=new Gz(c,"max",!1);return n.runWebGLProgram(h,[a],a.dtype)}},gU={kernelName:"MaxPool3D",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=r,c=p.computePool3DInfo(s.shape,a,i,[1,1,1],o,u,l),h=new Hz(c,"max",!1);return n.runWebGLProgram(h,[s],s.dtype)}};class yU{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.effectiveFilterHeight,n=e.effectiveFilterWidth;this.userCode=`\n      const ivec2 pads = ivec2(${t-1-e.padInfo.top}, ${n-1-e.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t};\n          wR += ${e.dilationHeight}) {\n          float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${t*n-1} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${n} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class bU{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.effectiveFilterDepth,n=e.effectiveFilterHeight,r=e.effectiveFilterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${t-1-e.padInfo.front}, ${n-1-e.padInfo.top}, ${r-1-e.padInfo.left});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${t};\n           wD += ${e.dilationDepth}) {\n          float dyD = float(dyDCorner + wD) / ${e.strideDepth}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${n};\n              wR += ${e.dilationHeight}) {\n            float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${r};\n                wC += ${e.dilationWidth}) {\n              float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${t*n*r-1} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${n} * ${r} +\n                  wR * ${r} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const xU={kernelName:"MaxPool3DGrad",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r,h=p.computePool3DInfo(i.shape,o,l,[1,1,1],u,c),d=new Hz(h,"max",!0),f=n.runWebGLProgram(d,[i],i.dtype),m=new bU(h),g=n.runWebGLProgram(m,[s,f],i.dtype);return n.disposeIntermediateTensorInfo(f),g}},wU={kernelName:"MaxPoolGrad",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:i}=t,o=a;iM([a,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=r,d=p.computePool2DInfo(o.shape,l,u,1,c,h),f=new Gz(d,"max",!0),m=n.runWebGLProgram(f,[o],o.dtype),g=new yU(d),y=n.runWebGLProgram(g,[s,m],o.dtype);return n.disposeIntermediateTensorInfo(m),y}},vU={kernelName:"MaxPoolWithArgmax",backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{filterSize:a,strides:i,pad:o,includeBatchInIndex:l}=t,u=n;r.assert(4===s.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);const c=[1,1];r.assert(p.eitherStridesOrDilationsAreOne(i,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);const h=p.computePool2DInfo(s.shape,a,i,c,o),[d,f]=function(e,t,n,r){let s=new Gz(n,"max",!1);const a=r.runWebGLProgram(s,[e],"float32");return s=new Gz(n,"max",!0,!0,t),[a,r.runWebGLProgram(s,[e],"float32")]}(s,l,h,u);return[d,f]}},kU={kernelName:"Mean",backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{keepDims:a,axis:i}=t,o=n,l=s.shape.length,u=r.parseAxisParam(i,s.shape);let c=u;const h=p.getAxesPermutation(c,l),d=null!=h,f=o.shouldExecuteOnCPU([s]),m=[];let g=s;if(d){if(f){const e=o.texData.get(g.dataId).values,t=new Array(l);for(let r=0;r<t.length;r++)t[r]=s.shape[h[r]];const n=CL(e,s.shape,s.dtype,h,t);g=o.makeTensorInfo(t,s.dtype),o.texData.get(g.dataId).values=n}else g=yz(s,h,o);m.push(g),c=p.getInnerMostAxes(c.length,l)}p.assertAxesAreInnerMostDims("sum",c,l);const[y,b]=p.computeOutAndReduceShapes(g.shape,c);let x=y;a&&(x=p.expandShapeToKeepDim(y,u));const w=function(e,t,n,s){const a=r.sizeFromShape(t),i=cz({inputs:{x:e},attrs:{shape:[r.sizeFromShape(e.shape)/a,a]},backend:s}),o=fz(i,"float32","mean",s),l=cz({inputs:{x:o},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(o),l}(g,b,x,o);for(const r of m)o.disposeIntermediateTensorInfo(r);return w}},SU={kernelName:"Min",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,keepDims:o}=s,l=a.shape.length,u=r.parseAxisParam(i,a.shape);let c=u;const h=p.getAxesPermutation(c,l);let d=a;null!=h&&(d=wz({inputs:{x:a},backend:n,attrs:{perm:h}}),c=p.getInnerMostAxes(c.length,a.shape.length)),p.assertAxesAreInnerMostDims("min",c,l);const[f,m]=p.computeOutAndReduceShapes(d.shape,c),g=cz({inputs:{x:d},backend:n,attrs:{shape:[-1,r.sizeFromShape(m)]}}),y=fz(g,g.dtype,"min",n);let b;return b=cz(o?{inputs:{x:y},backend:n,attrs:{shape:p.expandShapeToKeepDim(f,u)}}:{inputs:{x:y},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(y),null!=h&&n.disposeIntermediateTensorInfo(d),b}},IU={kernelName:"Minimum",backendName:"webgl",kernelFunc:rz({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:sL})};class CU{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,s=wM(r),a=t.map(e=>e[0]).join(","),i=t.map((t,n)=>t[0]+e[n]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l="reflect"===n?0:1;this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${s} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class NU{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,s=wM(r),a=t.map(e=>e[0]).join(","),i=t.map((t,n)=>t[0]+e[n]).join(","),o=_L("rc",r),l=_L("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h="reflect"===n?0:1;let d="";if(1===r){const e=`\n        ${s} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n      `}else{const e=`\n        ${s} source = rc;\n        ${s} lt = ${s}(lessThan(source, start));\n        ${s} gte = ${s}(greaterThanEqual(source, end));\n        ${s} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const TU={kernelName:"MirrorPad",backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:s,mode:a}=n,i=tf().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new NU(r.shape,s,a):new CU(r.shape,s,a);return t.runWebGLProgram(i,[r],r.dtype)}},_U={kernelName:"Mod",backendName:"webgl",kernelFunc:rz({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"})};class EU{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const AU=rz({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),RU={kernelName:"RealDiv",backendName:"webgl",kernelFunc:AU},$U="return a - b;",FU=rz({opSnippet:$U,packedOpSnippet:$U,supportsComplex:!0,cpuKernelImpl:kL}),DU={kernelName:"Sub",backendName:"webgl",kernelFunc:FU};function OU(e){const{inputs:t,backend:n,attrs:s}=e,{logits:a}=t,{dim:i}=s,o=r.parseAxisParam([i],a.shape),l=dU({inputs:{x:a},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),u=p.expandShapeToKeepDim(l.shape,o),c=cz({inputs:{x:l},backend:n,attrs:{shape:u}}),h=FU({inputs:{a,b:c},backend:n}),d=xB({inputs:{x:h},backend:n}),f=bz({inputs:{x:d},backend:n,attrs:{axis:o,keepDims:!1}}),m=cz({inputs:{x:f},backend:n,attrs:{shape:u}}),g=AU({inputs:{a:d,b:m},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const MU={kernelName:"Softmax",backendName:"webgl",kernelFunc:OU},LU={kernelName:"Multinomial",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:i,normalized:o}=r,l=o?s:OU({inputs:{logits:s},backend:n,attrs:{dim:s.shape.length-1}}),u=new EU(l.shape[0],l.shape[1],a),c=n.runWebGLProgram(u,[l],"int32",[[i]]);return o||n.disposeIntermediateTensorInfo(l),c}},zU="return -x;",PU={kernelName:"Neg",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,s]=iL(e.values,r.shape,r.dtype);return n.makeTensorInfo(s,r.dtype,t)}let s;return s=tf().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new zL(r.shape,zU):new OL(r.shape,zU),n.runWebGLProgram(s,[r],r.dtype)}},BU=f.nonMaxSuppressionV3Impl,UU={kernelName:"NonMaxSuppressionV3",backendName:"webgl",kernelFunc:function(e){p.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r,u=n.readSync(s.dataId),c=n.readSync(a.dataId),{selectedIndices:h}=BU(u,c,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},VU=f.nonMaxSuppressionV4Impl,WU={kernelName:"NonMaxSuppressionV4",backendName:"webgl",kernelFunc:function(e){p.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r,c=n.readSync(s.dataId),h=n.readSync(a.dataId),{selectedIndices:d,validOutputs:f}=VU(c,h,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([f]))]}},GU=f.nonMaxSuppressionV5Impl,HU={kernelName:"NonMaxSuppressionV5",backendName:"webgl",kernelFunc:function(e){p.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r,c=n.readSync(s.dataId),h=n.readSync(a.dataId),d=i,f=o,m=l,g=u,{selectedIndices:y,selectedScores:b}=GU(c,h,d,f,m,g);return[n.makeTensorInfo([y.length],"int32",new Int32Array(y)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}};class jU{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const qU={kernelName:"OneHot",backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{indices:a}=t,{depth:i,onValue:o,offValue:l}=s,u=r.sizeFromShape(a.shape),c=new jU(u,i,o,l),h=cz({inputs:{x:a},backend:n,attrs:{shape:[u]}}),d=n.runWebGLProgram(c,[h],a.dtype);n.disposeIntermediateTensorInfo(h);const p=cz({inputs:{x:d},backend:n,attrs:{shape:[...a.shape,i]}});return n.disposeIntermediateTensorInfo(d),p}};function KU(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=dP({inputs:{input:r},backend:n}),t=KU({inputs:{x:e},backend:n}),s=NP({inputs:{input:r},backend:n}),a=KU({inputs:{x:s},backend:n}),i=KL({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}return EB({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const XU={kernelName:"ZerosLike",backendName:"webgl",kernelFunc:KU},ZU={kernelName:"OnesLike",backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===s.dtype){const t=dP({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=NP({inputs:{input:s},backend:r}),i=KU({inputs:{x:a},backend:r}),o=KL({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}return EB({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:r})}},YU={kernelName:"Pack",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{axis:a}=s;if(1===t.length)return vB({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const i=t[0].shape,o=t[0].dtype;t.forEach(e=>{r.assertShapesMatch(i,e.shape,"All tensors passed to stack must have matching shapes"),r.assert(o===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});const l=[],u=_P({inputs:t.map(e=>{const t=vB({inputs:{input:e},backend:n,attrs:{dim:a}});return l.push(t),t}),backend:n,attrs:{axis:a}});return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),u}};class JU{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,s=wM(r),a=t.map(e=>e[0]).join(","),i=t.map((t,n)=>t[0]+e[n]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${s} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class QU{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,s=wM(r),a=t.map(e=>e[0]).join(","),i=t.map((t,n)=>t[0]+e[n]).join(","),o=_L("rc",r),l=_L("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h=[s+" rc = outputLoc;",`${o[r-1]} += 1;\n       if(${u}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${u}) {`],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let f=0,m=1===r?2:4;f<m;f++)p+=`\n        ${h[f]}\n        if (${d}) {\n          result[${f}] = float(value);\n        } else {\n          ${s} source = rc - start;\n          result[${f}] = getChannel(getX(${l.join()}), ${c});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const eV=e=>{const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{paddings:i,constantValue:o}=s;if(0===r.sizeFromShape(a.shape))return EB({backend:n,attrs:{shape:i.map((e,t)=>e[0]+a.shape[t]+e[1]),value:o,dtype:a.dtype}});const l=tf().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new QU(a.shape,i,o):new JU(a.shape,i,o);return n.runWebGLProgram(l,[a],a.dtype,[[o]])},tV={kernelName:"PadV2",backendName:"webgl",kernelFunc:eV},nV={kernelName:"Pow",backendName:"webgl",kernelFunc:rz({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"})},rV={kernelName:"Prod",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,keepDims:o}=s,l=a.shape.length,u=[],c=r.parseAxisParam(i,a.shape);let h=c;const d=p.getAxesPermutation(h,l);let f,m=a;if(null!=d&&(m=wz({inputs:{x:a},backend:n,attrs:{perm:d}}),h=p.getInnerMostAxes(h.length,l),u.push(m)),p.assertAxesAreInnerMostDims("prod",h,l),n.shouldExecuteOnCPU([m])){const e=n.texData.get(m.dataId).values,{outVals:t,outShape:r,outDtype:s}=lL(m.shape,m.dtype,e,h);f=n.makeTensorInfo(r,s,t)}else{const[e,t]=p.computeOutAndReduceShapes(m.shape,h),s=r.sizeFromShape(t),i=cz({inputs:{x:m},backend:n,attrs:{shape:[-1,s]}}),o=fz(i,rm(a.dtype),"prod",n);f=cz({inputs:{x:o},backend:n,attrs:{shape:e}}),u.push(i),u.push(o)}if(o){u.push(f);const e=p.expandShapeToKeepDim(f.shape,c);f=cz({inputs:{x:f},backend:n,attrs:{shape:e}})}return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),f}},sV=e=>{const{backend:t,attrs:n}=e,{start:r,stop:s,step:a,dtype:i}=n,o=uL(r,s,a,i);return t.makeTensorInfo([o.length],i,o)},aV={kernelName:"Range",backendName:"webgl",kernelFunc:sV},iV={kernelName:"Reciprocal",backendName:"webgl",kernelFunc:nz({opSnippet:"return 1.0 / x;"})},oV={kernelName:"Relu",backendName:"webgl",kernelFunc:nz({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"})},lV={kernelName:"Relu6",backendName:"webgl",kernelFunc:nz({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"})};class uV{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class cV{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const hV={kernelName:"ResizeBilinear",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r,[l,u]=o,c=tf().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new cV(s.shape,l,u,a,i):new uV(s.shape,l,u,a,i);return n.runWebGLProgram(c,[s],"float32")}};class dV{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,i]=e,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const pV={kernelName:"ResizeBilinearGrad",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r,o=new dV(a.shape,s.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class fV{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${r?"0.5":"0.0"})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class mV{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${r?"0.5":"0.0"})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const gV={kernelName:"ResizeNearestNeighbor",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r,[l,u]=o,c=tf().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new mV(s.shape,l,u,a,i):new fV(s.shape,l,u,a,i);return n.runWebGLProgram(c,[s],s.dtype)}};class yV{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,i]=e,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const bV={kernelName:"ResizeNearestNeighborGrad",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r,o=new yV(a.shape,s.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class xV{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r)).join(","),s=wM(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class wV{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=_L("rc",n),s=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=wM(n);function o(n){const r=e.map((r,s)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:""+r[n]}(s,n));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${s}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(r.slice())};\n          if(${s}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(r.slice())};\n          }\n          if(${a}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            if(${s}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const vV={kernelName:"Reverse",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{dims:i}=s,o=a.shape.length,l=r.parseAxisParam(i,a.shape);if(0===o)return jL({inputs:{x:a},backend:n});const u=tf().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new wV(a.shape,l):new xV(a.shape,l);return n.runWebGLProgram(u,[a],a.dtype)}};class kV{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let s="";s="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${s}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const SV={kernelName:"RotateWithOffset",backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:a,center:i}=t,o=n,l=new kV(r.shape,a),[u,c]=p.getImageCenter(i,r.shape[1],r.shape[2]),h=[[u,c,Math.sin(s),Math.cos(s)]];return o.runWebGLProgram(l,[r],r.dtype,h)}},IV={kernelName:"Round",backendName:"webgl",kernelFunc:nz({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"})},CV={kernelName:"Rsqrt",backendName:"webgl",kernelFunc:nz({opSnippet:"return inversesqrt(x);",cpuKernelImpl:cL})};class NV{constructor(e,t,n,r,s,a,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const o=wM(s.length),l=wM(a.length);let u="";1===n?u="i":2===n&&(u="i, j");let c="";1===r?c="i":2===r&&(c="i, coords[1]"),this.userCode=`\n        ${o} strides = ${o}(${s});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(getIndices(${u}));\n              flattenedIndex += index * ${t>1?"strides[j]":"strides"};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += getUpdates(${c});\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const TV={kernelName:"ScatterNd",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=p.calculateShapes(a,s,i),d=[h/u,u];if(0===h)return n.makeTensorInfo(i,s.dtype);const f=cz({inputs:{x:s},backend:n,attrs:{shape:[l,o]}}),m=cz({inputs:{x:a},backend:n,attrs:{shape:[l,u]}}),g=n.makeTensorInfo([],"float32",new Float32Array([0])),y=new NV(l,o,f.shape.length,m.shape.length,c,d),b=n.runWebGLProgram(y,[m,f,g],m.dtype),x=cz({inputs:{x:b},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(g),x}};class _V{constructor(e,t,n){let r,s;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)s="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],i=[];for(let r=0;r<t.length;r++)i.push(""+n[r]),r<e&&a.push(""+n[r]);r=a.join(),s=i.join()}const a=wM(n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${s}));\n        } else {\n          setOutput(getB(${s}));\n        }\n      }\n    `}}const EV={kernelName:"Select",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t,i=new _V(r.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(i,[r,s,a],nm(s.dtype,a.dtype))}},AV={kernelName:"Selu",backendName:"webgl",kernelFunc:nz({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${p.SELU_SCALEALPHA};\n  float scale = ${p.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`})},RV={kernelName:"Sigmoid",backendName:"webgl",kernelFunc:nz({opSnippet:"return 1.0 / (1.0 + exp(-1.0 * x));",packedOpSnippet:"return 1.0 / (1.0 + exp(-1.0 * x));",cpuKernelImpl:hL})},$V={kernelName:"Sign",backendName:"webgl",kernelFunc:nz({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"})},FV={kernelName:"Sin",backendName:"webgl",kernelFunc:nz({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"})},DV={kernelName:"Sinh",backendName:"webgl",kernelFunc:nz({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"})},OV={kernelName:"Softplus",backendName:"webgl",kernelFunc:nz({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"})},MV={kernelName:"SpaceToBatchND",backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{blockShape:i,paddings:o}=s;r.assert(a.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const l=i.reduce((e,t)=>e*t),u=[[0,0]];u.push(...o);for(let r=1+i.length;r<a.shape.length;++r)u.push([0,0]);const c=[],h=eV({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),d=p.getReshaped(h.shape,i,l,!1),f=p.getPermuted(d.length,i.length,!1),m=p.getReshapedPermuted(h.shape,i,l,!1),g=cz({inputs:{x:h},backend:n,attrs:{shape:d}}),y=wz({inputs:{x:g},backend:n,attrs:{perm:f}}),b=cz({inputs:{x:y},backend:n,attrs:{shape:m}});return c.push(h),c.push(g),c.push(y),c.forEach(e=>n.disposeIntermediateTensorInfo(e)),b}},LV={kernelName:"SparseFillEmptyRows",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error("Dense shape must be a vector, saw:\n         "+a.shape);if(2!==r.shape.length)throw new Error("Indices must be a matrix, saw:\n         "+r.shape);if(1!==s.shape.length)throw new Error("Values must be a vector, saw:\n         "+s.shape);if(0!==i.shape.length)throw new Error("Default value must be a scalar, saw:\n        "+i.shape);const o=n.readSync(r.dataId),l=n.readSync(s.dataId),u=n.readSync(a.dataId),c=n.readSync(i.dataId)[0],[h,d,p,f,m]=fL(o,r.shape,r.dtype,l,s.dtype,u,c);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],s.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(e=>Number(e)))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},zV={kernelName:"SparseReshape",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:a}=t;if(2!==r.shape.length)throw new Error("Input indices should be a matrix but received shape "+r.shape);if(1!==s.shape.length)throw new Error("Input shape should be a vector but received shape "+s.shape);if(1!==a.shape.length)throw new Error("Target shape should be a vector but received shape "+a.shape);const i=Array.from(n.readSync(s.dataId)),o=n.readSync(r.dataId),l=Array.from(n.readSync(a.dataId)),[u,c,h]=mL(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(c,r.dtype,u),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}},PV={kernelName:"SparseSegmentMean",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error("Indices should be a vector but received shape\n              "+s.shape);if(1!==a.shape.length)throw new Error("Segment ids should be a vector but received shape\n              "+a.shape);const i=n.readSync(r.dataId),o=n.readSync(s.dataId),l=n.readSync(a.dataId),[u,c]=gL(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(c,r.dtype,u)}},BV={kernelName:"SparseSegmentSum",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error("Indices should be a vector but received shape\n             "+s.shape);if(1!==a.shape.length)throw new Error("Segment ids should be a vector but received shape\n             "+a.shape);const i=n.readSync(r.dataId),o=n.readSync(s.dataId),l=n.readSync(a.dataId),[u,c]=gL(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(c,r.dtype,u)}},UV={kernelName:"SparseToDense",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,strides:c,outputSize:h}=p.calculateShapes(a,s,o),d=new NV(u,l,s.shape.length,a.shape.length,c,[h,1],!1),f=n.runWebGLProgram(d,[a,s,i],a.dtype),m=cz({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(f),m}},VV={kernelName:"SplitV",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{numOrSizeSplits:i,axis:o}=s,l=r.parseAxisParam(o,a.shape)[0],u=p.prepareSplitSize(a,i,l),c=new Array(a.shape.length).fill(0),h=a.shape.slice();return u.map(e=>{const t=[...h];t[l]=e;const r=aP({inputs:{x:a},backend:n,attrs:{begin:c,size:t}});return c[l]+=e,r})}},WV="return sqrt(x);",GV={kernelName:"Sqrt",backendName:"webgl",kernelFunc:nz({opSnippet:WV,packedOpSnippet:WV,cpuKernelImpl:yL})},HV={kernelName:"Square",backendName:"webgl",kernelFunc:nz({opSnippet:"return x * x;"})},jV={kernelName:"SquaredDifference",backendName:"webgl",kernelFunc:rz({opSnippet:"return (a - b) * (a - b);",packedOpSnippet:"return (a - b) * (a - b);"})},qV={kernelName:"Step",backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,s=new OL(r.shape,`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `);return n.runWebGLProgram(s,[r],r.dtype)}};class KV{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,s=wM(n.length),a=wM(n.length);let i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`)).join(",")}this.userCode=`\n      ${s} begin = ${s}(${e});\n      ${s} strides = ${s}(${t});\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const XV={kernelName:"StridedSlice",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{begin:i,end:o,strides:l,beginMask:c,endMask:h,ellipsisMask:d,newAxisMask:p,shrinkAxisMask:f}=s,{finalShapeSparse:m,finalShape:g,isIdentity:y,sliceDim0:b,isSimpleSlice:x,begin:w,end:v,strides:k}=u.sliceInfo(a.shape,i,o,l,c,h,d,p,f);let S;if(y)S=cz({inputs:{x:a},backend:n,attrs:{shape:g}});else if(b||x){r.assert(a.shape.length>=1,()=>"Input must have rank at least 1, got: "+a.shape.length);const e=u.computeOutShape(w,v,k),t=aP({inputs:{x:a},backend:n,attrs:{begin:w,size:e}});S=cz({inputs:{x:t},backend:n,attrs:{shape:g}}),n.disposeIntermediateTensorInfo(t)}else if(n.shouldExecuteOnCPU([a])){const e=n.readSync(a.dataId),t=gg(a.shape,a.dtype,e),r=bL(m,t,k,w);S=n.makeTensorInfo(g,a.dtype,r.values)}else{const e=new KV(w,k,m);S=n.runWebGLProgram(e,[a],a.dtype)}const I=cz({inputs:{x:S},backend:n,attrs:{shape:g}});return n.disposeIntermediateTensorInfo(S),I}},ZV={kernelName:"StringNGrams",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:a,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:c,dataSplits:h}=t,d=n.readSync(c.dataId),p=n.readSync(h.dataId),[f,m]=xL(d,p,s,a,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}},YV={kernelName:"StringSplit",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:a,delimiter:i}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error("Input must be a vector, got shape: "+a.shape);if(0!==i.shape.length)throw new Error("Delimiter must be a scalar, got shape: "+i.shape);const o=n.readSync(a.dataId),l=n.readSync(i.dataId)[0],[u,c,h]=wL(o,l,s),d=c.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}},JV={kernelName:"StringToHashBucketFast",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const i=n.readSync(a.dataId),o=vL(i,s);return n.makeTensorInfo(a.shape,"int32",o)}},QV={kernelName:"Tan",backendName:"webgl",kernelFunc:nz({opSnippet:"return tan(x);"})},eW={kernelName:"Tanh",backendName:"webgl",kernelFunc:nz({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"})};class tW{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[a]*t[a];this.outputShape=n,this.rank=n.length;const r=wM(this.rank),s=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let s=0;s<e.length;s++)r.push(`imod(${n[s]}, ${e[s]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}function nW(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{reps:i}=s;if("string"===a.dtype||a.shape.length>5){const e=n.readSync(a.dataId),t="string"===a.dtype?e.map(e=>r.decodeString(e)):e,s=gg(a.shape,a.dtype,t),o=SL(s,i);return n.makeTensorInfo(o.shape,o.dtype,o.values)}const o=new tW(a.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}const rW={kernelName:"Tile",backendName:"webgl",kernelFunc:nW};class sW{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class aW{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function iW(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function oW(e){let t=1;for(;t<e;)t*=2;return t}const lW={kernelName:"TopK",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{k:i,sorted:o}=s,l=tf().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=tf().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),c=a.shape,h=c[c.length-1];if(n.shouldExecuteOnCPU([a])||h<l||i>u){const e=n.readSync(a.dataId),[t,r]=IL(e,c,a.dtype,i,o);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===i)return c[c.length-1]=0,[n.makeTensorInfo(c,a.dtype,[]),n.makeTensorInfo(c,"int32",[])];if(1===h)return[a,EB({attrs:{shape:c,dtype:"int32",value:0},backend:n})];const d=n.texData.get(a.dataId),p=null!==d&&d.isPacked,f=p?n.unpackTensor(a):a,m=r.sizeFromShape(c)/h,g=cz({inputs:{x:f},attrs:{shape:[m,h]},backend:n});p&&iW(n,f);const y=oW(i),b=oW(h);let x=null;const w=()=>null===x?[g,g]:[g,x],v=(e,t,r)=>{const s=w(),a=new sW(r),i=x;x=n.runWebGLProgram(a,s,"int32",[[h],[null===x?1:0],[Number.NEGATIVE_INFINITY],[e],[t]]),iW(n,i)};for(let r=1;r<y;r*=2){const e=2*r;for(let t=r;t>=1;t/=2)v(e,t,[m,b])}for(let r=b;r>y;r/=2){const e=w(),t=new aW([m,r/2]),s=x;x=n.runWebGLProgram(t,e,"int32",[[h],[null===x?1:0],[y]]),iW(n,s);const a=y/2,i=2*a;for(let n=a;n>=1;n/=2)v(i,n,x.shape)}let k=x;x=aP({inputs:{x},backend:n,attrs:{begin:0,size:[m,i]}}),iW(n,k);let S=HB({inputs:{x:g,indices:x},backend:n,attrs:{axis:1,batchDims:1}});iW(n,g);const I=c.slice(0,-1);I.push(i),k=x,x=cz({inputs:{x},attrs:{shape:I},backend:n}),iW(n,k);const C=S;return S=cz({inputs:{x:S},attrs:{shape:I},backend:n}),iW(n,C),[S,x]}};class uW{constructor(e,t,n,r,s,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const i="nearest"===n?1:2;let o;switch(r){case"constant":o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4;break;default:o=1}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${s});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${s});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const cW={kernelName:"Transform",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=r,[c,h,d,p]=s.shape,[f,m]=null!=u?u:[h,d],g=new uW(h,d,i,o,l,[c,f,m,p]);return n.runWebGLProgram(g,[s,a],"float32")}},hW={kernelName:"Unique",backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;iM(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(a.dataId),{outputValues:o,outputShape:l,indices:u}=NL(i,s,a.shape,a.dtype);return[r.makeTensorInfo(l,a.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}},dW={kernelName:"Unpack",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const i=s,o=i.shape.length,l=s.shape[a],u=new Array(o-1);let c=0;for(let m=0;m<o;m++)m!==a&&(u[c++]=i.shape[m]);const h=[],d=new Array(o).fill(0),p=i.shape.slice();p[a]=1;const f=new Array(l);for(let m=0;m<f.length;m++){d[a]=m;const e=aP({inputs:{x:i},backend:n,attrs:{begin:d,size:p}}),t=cz({inputs:{x:e},backend:n,attrs:{shape:u}});f[m]=t,h.push(e)}return h.forEach(e=>n.disposeIntermediateTensorInfo(e)),f}};class pW{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,s=e.inSize,a=e.numSegments,i=a*Math.ceil(s/n);this.outputShape=[r,i];const o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let c="";s%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `);let h="";s%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${a})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${a})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}const fW=[uU,hU,Sz,Iz,Cz,Nz,_z,Rz,$z,Fz,Lz,zz,Pz,Bz,Vz,Uz,Wz,qz,jz,Zz,Yz,Jz,tP,oP,lP,uP,fP,gP,xP,kP,XL,EP,BP,UP,OP,WP,GP,VP,HP,jP,KP,JP,QP,tB,oB,lB,sB,cB,dB,pB,fB,mB,gB,yB,wB,kB,IB,TB,AB,$B,DB,OB,zB,BB,UB,WB,jB,qB,KB,qL,XB,TP,ZB,YB,JB,JL,QB,eU,tU,rU,nU,sU,aU,iU,pU,gU,mU,xU,wU,vU,fU,kU,SU,IU,TU,_U,LU,uz,PU,UU,WU,HU,hP,qU,ZU,YU,tV,nV,tz,rV,aV,pP,RU,iV,lV,oV,hz,hV,pV,gV,bV,vV,SV,IV,CV,TV,EV,AV,RV,$V,FV,DV,iP,MU,OV,MV,LV,zV,PV,BV,UV,VV,GV,HV,jV,qV,XV,ZV,YV,JV,DU,xz,QV,eW,rW,lW,cW,vz,hW,dW,{kernelName:"UnsortedSegmentSum",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,segmentIds:i}=t,{numSegments:o}=s,l=a.shape.length,u=[];let c=0;const h=p.getAxesPermutation([c],l);let d=a;null!=h&&(d=wz({inputs:{x:a},backend:n,attrs:{perm:h}}),u.push(d),c=p.getInnerMostAxes(1,l)[0]);const f=p.segment_util.computeOutShape(d.shape,c,o),m=r.sizeFromShape([d.shape[c]]),g=cz({inputs:{x:d},backend:n,attrs:{shape:[-1,m]}});u.push(g);const y=rm(a.dtype),b=(e,t,r,s,a)=>{const i=e.shape[0],o=e.shape[1],l=p.segment_util.segOpComputeOptimalWindowSize(o,a),c=new pW({windowSize:l,inSize:o,batchSize:i,numSegments:a},t),h=n.compileAndRun(c,[e,r],s);if(u.push(h),h.shape[1]===a)return h;const d=sV({backend:n,attrs:{start:0,stop:a,step:1,dtype:"float32"}}),f=nW({inputs:{x:d},backend:n,attrs:{reps:[o/l]}});return u.push(d),u.push(f),b(h,t,f,s,a)},x=cz({inputs:{x:b(g,"unsortedSegmentSum",i,y,o)},backend:n,attrs:{shape:f}});let w=x;if(null!=h){u.push(x);const e=p.getUndoAxesPermutation(h);w=wz({inputs:{x:w},backend:n,attrs:{perm:e}})}return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),w}},XU];for(const pG of fW)ff(pG);const mW=function(e){return{"imagens-conteudo":e}};let gW=(()=>{class e{constructor(){this.model=null,this.vazio=!0,this.valido=!1,this.modalAberto=!1}ngOnInit(){return np(this,void 0,void 0,(function*(){var e;this.model=yield(null==e&&(e={}),async function(e,t){if(null==t&&(t={}),"string"==typeof e){const n=i.getLoadHandlers(e,t);if(0===n.length)n.push(i.browserHTTPRequest(e,t));else if(n.length>1)throw new NI(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return async function(e,t,n){if(null==n&&(n={}),null==e.load)throw new NI("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const r=await e.load();let s=r.modelTopology;null!=s.model_config&&(s=s.model_config);const a=null==n.strict||n.strict,o=null!=r.weightData&&null!=r.weightSpecs&&a,l=ON(iT(s),void 0,o),u=r.trainingConfig;if(null!=u&&l.loadTrainingConfig(u),null!=r.userDefinedMetadata&&l.setUserDefinedMetadata(r.userDefinedMetadata),null!=r.weightData){if(null==r.weightSpecs)throw new NI("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:e,optimizerWeights:t}=function(e,t){const n=i.decodeWeights(e,t),r={},s=[];return t.forEach(e=>{"optimizer"===e.group?s.push({name:e.name,tensor:n[e.name]}):r[e.name]=n[e.name]}),{modelWeights:r,optimizerWeights:s}}(r.weightData,r.weightSpecs);l.loadWeights(e,a),null!=l.optimizer&&t.length>0&&await l.optimizer.setWeights(t),py(e),py(t.map(e=>e.tensor))}return l}(e,0,t)}("../assets/models/model.json",e))}))}generateBatch(){return np(this,void 0,void 0,(function*(){for(let e=0;e<this.quantidade;e++)yield this.generate()}))}generate(){return np(this,void 0,void 0,(function*(){const e=tx([1,100]);let t=this.model.predict(e);t=zy(t,[32,32,3]).arraySync();for(let s=0;s<t.length;s++)for(let e=0;e<t[s].length;e++)for(let n=0;n<t[s][e].length;n++)t[s][e][n]=.5*t[s][e][n]+.5;t=Nm(t);const n=document.getElementById("imagens"),r=document.createElement("canvas");yield l.toPixels(t,r),r.id="picture",r.style.height="100px",r.style.margin="0.3rem",r.style.border="1px solid rgba(0,0,0,0.8)",null==n||n.appendChild(r)}))}mostrarConteudo(){this.vazio=!1,console.log(this.vazio)}checagemValidade(e){isNaN(Number(e.trim()))||""===e?this.valido=!1:(this.valido=!0,this.quantidade=Number(e.trim()))}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=Ut({type:e,selectors:[["app-pokemon-gen"]],decls:5,vars:4,consts:[["type","text","placeholder","Quantos?",1,"quantidade",3,"change"],["input",""],[1,"botao","btn","btn-dark",3,"disabled","click"],["id","imagens",1,"imagens",3,"ngClass"]],template:function(e,t){if(1&e){const e=wn();qa(0,"input",0,1),Ya("change",(function(){bn.lFrame.contextLView=e;const n=bn.lFrame.contextLView[21];return t.checagemValidade(n.value)})),Ka(),qa(2,"button",2),Ya("click",(function(){return t.generateBatch(),t.mostrarConteudo()})),gi(3,"Generate"),Ka(),Xa(4,"div",3)}var n,r,s,a;2&e&&(Zr(2),Ha("disabled",!t.valido),Zr(2),Ha("ngClass",(n=2,r=mW,s=!t.vazio,function(e,t,n,r,s,a){const i=t+n;return Ua(e,i,s)?function(e,t,n){return e[t]=n}(e,i+1,a?r.call(a,s):r(s)):function(e,t){const n=e[t];return n===Hr?void 0:n}(e,i+1)}(wn(),function(){const e=bn.lFrame;let t=e.bindingRootIndex;return-1===t&&(t=e.bindingRootIndex=e.tView.bindingStartIndex),t}(),n,r,s,a))))},directives:[Hl],styles:[".quantidade[_ngcontent-%COMP%]{margin-right:2rem;border-radius:5px;font-size:1.1rem;width:6rem;font-weight:500;vertical-align:middle}.botao[_ngcontent-%COMP%]{margin:1rem 0}.imagens[_ngcontent-%COMP%]{margin:0 10rem}.imagens-conteudo[_ngcontent-%COMP%]{border:2px solid #000;border-radius:15px;box-shadow:2px 2px 2px 1px rgba(0,0,0,.2);background-color:hsla(0,0%,100%,.9);padding:1rem}"]}),e})(),yW=(()=>{class e{constructor(){this.title="pkm-project"}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=Ut({type:e,selectors:[["app-root"]],decls:6,vars:0,consts:[[1,"header"],[1,"header__welcome"],[1,"header__command"]],template:function(e,t){1&e&&(qa(0,"header",0),qa(1,"h1",1),gi(2,"Bem-vindo ao gerador de Pok\xe9mons!"),Ka(),qa(3,"h2",2),gi(4,"Clique no bot\xe3o abaixo para gerar um conceito visual de Pok\xe9mon"),Ka(),Ka(),Xa(5,"app-pokemon-gen"))},directives:[gW],styles:[".header[_ngcontent-%COMP%]{margin:2rem 14rem 1rem;background-color:hsla(0,0%,100%,.9);padding:.5rem 0;border-radius:15px}.header__command[_ngcontent-%COMP%], .header__welcome[_ngcontent-%COMP%]{text-align:center}.header__command[_ngcontent-%COMP%]{font-size:1.1rem}app-pokemon-gen[_ngcontent-%COMP%]{display:block}"]}),e})(),bW=(()=>{class e{constructor(){this._accessors=[]}add(e,t){this._accessors.push([e,t])}remove(e){for(let t=this._accessors.length-1;t>=0;--t)if(this._accessors[t][1]===e)return void this._accessors.splice(t,1)}select(e){this._accessors.forEach(t=>{this._isSameGroup(t,e)&&t[1]!==e&&t[1].fireUncheck(e.value)})}_isSameGroup(e,t){return!!e[0].control&&e[0]._parent===t._control._parent&&e[1].name===t.name}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=Be({token:e,factory:e.\u0275fac}),e})(),xW=(()=>{class e{}return e.\u0275mod=Ht({type:e}),e.\u0275inj=Ue({factory:function(t){return new(t||e)}}),e})(),wW=(()=>{class e{}return e.\u0275mod=Ht({type:e}),e.\u0275inj=Ue({factory:function(t){return new(t||e)},providers:[bW],imports:[xW]}),e})();function vW(e,t,n,r){return O(n)&&(r=n,n=void 0),r?vW(e,t,n).pipe(me(e=>B(e)?r(...e):r(e))):new J(r=>{!function e(t,n,r,s,a){let i;if(function(e){return e&&"function"==typeof e.addEventListener&&"function"==typeof e.removeEventListener}(t)){const e=t;t.addEventListener(n,r,a),i=()=>e.removeEventListener(n,r,a)}else if(function(e){return e&&"function"==typeof e.on&&"function"==typeof e.off}(t)){const e=t;t.on(n,r),i=()=>e.off(n,r)}else if(function(e){return e&&"function"==typeof e.addListener&&"function"==typeof e.removeListener}(t)){const e=t;t.addListener(n,r),i=()=>e.removeListener(n,r)}else{if(!t||!t.length)throw new TypeError("Invalid event target");for(let i=0,o=t.length;i<o;i++)e(t[i],n,r,s,a)}s.add(i)}(e,t,(function(e){r.next(arguments.length>1?Array.prototype.slice.call(arguments):e)}),r,n)})}function kW(e){return t=>t.lift(new SW(e))}class SW{constructor(e){this.notifier=e}call(e,t){const n=new IW(e),r=pe(n,this.notifier);return r&&!n.seenValue?(n.add(r),t.subscribe(n)):n}}class IW extends fe{constructor(e){super(e),this.seenValue=!1}notifyNext(e,t,n,r,s){this.seenValue=!0,this.complete()}notifyComplete(){}}function CW(...e){return t=>{let n;return"function"==typeof e[e.length-1]&&(n=e.pop()),t.lift(new NW(e,n))}}class NW{constructor(e,t){this.observables=e,this.project=t}call(e,t){return t.subscribe(new TW(e,this.observables,this.project))}}class TW extends fe{constructor(e,t,n){super(e),this.observables=t,this.project=n,this.toRespond=[];const r=t.length;this.values=new Array(r);for(let s=0;s<r;s++)this.toRespond.push(s);for(let s=0;s<r;s++){let e=t[s];this.add(pe(this,e,e,s))}}notifyNext(e,t,n,r,s){this.values[n]=t;const a=this.toRespond;if(a.length>0){const e=a.indexOf(n);-1!==e&&a.splice(e,1)}}notifyComplete(){}_next(e){if(0===this.toRespond.length){const t=[e,...this.values];this.project?this._tryProject(t):this.destination.next(t)}}_tryProject(e){let t;try{t=this.project.apply(this,e)}catch(dG){return void this.destination.error(dG)}this.destination.next(t)}}$localize`:@@ngb.alert.close␟f4e529ae5ffd73001d1ff4bbdeeb0a72e342e5c8␟7819314041543176992:Close`;const _W=["*"];$localize`:@@ngb.carousel.previous␟680d5c75b7fd8d37961083608b9fcdc4167b4c43␟4452427314943113135:Previous`,$localize`:@@ngb.carousel.next␟f732c304c7433e5a83ffcd862c3dce709a0f4982␟3885497195825665706:Next`,$localize`:@@ngb.datepicker.previous-month␟c3b08b07b5ab98e7cdcf18df39355690ab7d3884␟8586908745456864217:Previous month`,$localize`:@@ngb.datepicker.previous-month␟c3b08b07b5ab98e7cdcf18df39355690ab7d3884␟8586908745456864217:Previous month`,$localize`:@@ngb.datepicker.next-month␟4bd046985cfe13040d5ef0cd881edce0968a111a␟3628374603023447227:Next month`,$localize`:@@ngb.datepicker.next-month␟4bd046985cfe13040d5ef0cd881edce0968a111a␟3628374603023447227:Next month`,$localize`:@@ngb.datepicker.select-month␟1dbc84807f35518112f62e5775d1daebd3d8462b␟2253869508135064750:Select month`,$localize`:@@ngb.datepicker.select-month␟1dbc84807f35518112f62e5775d1daebd3d8462b␟2253869508135064750:Select month`,$localize`:@@ngb.datepicker.select-year␟8ceb09d002bf0c5d1cac171dfbffe1805d2b3962␟8852264961585484321:Select year`,$localize`:@@ngb.datepicker.select-year␟8ceb09d002bf0c5d1cac171dfbffe1805d2b3962␟8852264961585484321:Select year`;const EW=["dialog"];function AW(e){return null!=e}$localize`:@@ngb.pagination.first␟656506dfd46380956a655f919f1498d018f75ca0␟6867721956102594380:««`,$localize`:@@ngb.pagination.previous␟6e52b6ee77a4848d899dd21b591c6fd499e3aef3␟6479320895410098858:«`,$localize`:@@ngb.pagination.next␟ba9cbb4ff311464308a3627e4f1c3345d9fe6d7d␟5458177150283468089:»`,$localize`:@@ngb.pagination.last␟49f27a460bc97e7e00be5b37098bfa79884fc7d9␟5277020320267646988:»»`,$localize`:@@ngb.pagination.first-aria␟f2f852318759c6396b5d3d17031d53817d7b38cc␟2241508602425256033:First`,$localize`:@@ngb.pagination.previous-aria␟680d5c75b7fd8d37961083608b9fcdc4167b4c43␟4452427314943113135:Previous`,$localize`:@@ngb.pagination.next-aria␟f732c304c7433e5a83ffcd862c3dce709a0f4982␟3885497195825665706:Next`,$localize`:@@ngb.pagination.last-aria␟5c729788ba138508aca1bec050b610f7bf81db3e␟4882268002141858767:Last`,$localize`:@@ngb.progressbar.value␟f8e9a947b9db4252c0e9905765338712f2fd032f␟3720830768741091151:${"\ufffd0\ufffd"}:INTERPOLATION:`,$localize`:@@ngb.timepicker.HH␟ce676ab1d6d98f85c836381cf100a4a91ef95a1f␟4043638465245303811:HH`,$localize`:@@ngb.timepicker.hours␟3bbce5fef7e1151da052a4e529453edb340e3912␟8070396816726827304:Hours`,$localize`:@@ngb.timepicker.MM␟72c8edf6a50068a05bde70991e36b1e881f4ca54␟1647282246509919852:MM`,$localize`:@@ngb.timepicker.minutes␟41e62daa962947c0d23ded0981975d1bddf0bf38␟5531237363767747080:Minutes`,$localize`:@@ngb.timepicker.increment-hours␟cb74bc1d625a6c1742f0d7d47306cf495780c218␟5939278348542933629:Increment hours`,$localize`:@@ngb.timepicker.decrement-hours␟147c7a19429da7d999e247d22e33fee370b1691b␟3651829882940481818:Decrement hours`,$localize`:@@ngb.timepicker.increment-minutes␟f5a4a3bc05e053f6732475d0e74875ec01c3a348␟180147720391025024:Increment minutes`,$localize`:@@ngb.timepicker.decrement-minutes␟c1a6899e529c096da5b660385d4e77fe1f7ad271␟7447789825403243588:Decrement minutes`,$localize`:@@ngb.timepicker.SS␟ebe38d36a40a2383c5fefa9b4608ffbda08bd4a3␟3628127143071124194:SS`,$localize`:@@ngb.timepicker.seconds␟4f2ed9e71a7c981db3e50ae2fedb28aff2ec4e6c␟8874012390997067175:Seconds`,$localize`:@@ngb.timepicker.increment-seconds␟912322ecee7d659d04dcf494a70e22e49d334b26␟5364772110539092174:Increment seconds`,$localize`:@@ngb.timepicker.decrement-seconds␟5db47ac104294243a70eb9124fbea9d0004ddf69␟753633511487974857:Decrement seconds`,$localize`:@@ngb.timepicker.PM␟8d6e691e10306c1b34c6b26805151aaea320ef7f␟3564199131264287502:${"\ufffd0\ufffd"}:INTERPOLATION:`,$localize`:@@ngb.timepicker.AM␟69a1f176a93998876952adac57c3bc3863b6105e␟4592818992509942761:${"\ufffd0\ufffd"}:INTERPOLATION:`,$localize`:@@ngb.toast.close-aria␟f4e529ae5ffd73001d1ff4bbdeeb0a72e342e5c8␟7819314041543176992:Close`,"undefined"==typeof Element||Element.prototype.closest||(Element.prototype.matches||(Element.prototype.matches=Element.prototype.msMatchesSelector||Element.prototype.webkitMatchesSelector),Element.prototype.closest=function(e){let t=this;if(!document.documentElement.contains(t))return null;do{if(t.matches(e))return t;t=t.parentElement||t.parentNode}while(null!==t&&1===t.nodeType);return null});let RW=(()=>{let e=class{};return e.\u0275mod=Ht({type:e}),e.\u0275inj=Ue({factory:function(t){return new(t||e)},imports:[[jl]]}),e})(),$W=(()=>{let e=class{};return e.\u0275mod=Ht({type:e}),e.\u0275inj=Ue({factory:function(t){return new(t||e)},imports:[[jl]]}),e})(),FW=(()=>{let e=class{};return e.\u0275mod=Ht({type:e}),e.\u0275inj=Ue({factory:function(t){return new(t||e)}}),e})(),DW=(()=>{let e=class{};return e.\u0275mod=Ht({type:e}),e.\u0275inj=Ue({factory:function(t){return new(t||e)},imports:[[jl]]}),e})(),OW=(()=>{let e=class{};return e.\u0275mod=Ht({type:e}),e.\u0275inj=Ue({factory:function(t){return new(t||e)}}),e})();var MW=function(e){return e[e.Tab=9]="Tab",e[e.Enter=13]="Enter",e[e.Escape=27]="Escape",e[e.Space=32]="Space",e[e.PageUp=33]="PageUp",e[e.PageDown=34]="PageDown",e[e.End=35]="End",e[e.Home=36]="Home",e[e.ArrowLeft=37]="ArrowLeft",e[e.ArrowUp=38]="ArrowUp",e[e.ArrowRight=39]="ArrowRight",e[e.ArrowDown=40]="ArrowDown",e}({});const LW=["a[href]","button:not([disabled])",'input:not([disabled]):not([type="hidden"])',"select:not([disabled])","textarea:not([disabled])","[contenteditable]",'[tabindex]:not([tabindex="-1"])'].join(", ");function zW(e){const t=Array.from(e.querySelectorAll(LW)).filter(e=>-1!==e.tabIndex);return[t[0],t[t.length-1]]}let PW=(()=>{let e=class{};return e.\u0275mod=Ht({type:e}),e.\u0275inj=Ue({factory:function(t){return new(t||e)},imports:[[jl,wW]]}),e})(),BW=(()=>{let e=class{};return e.\u0275mod=Ht({type:e}),e.\u0275inj=Ue({factory:function(t){return new(t||e)}}),e})(),UW=(()=>{let e=class{constructor(){this.backdrop=!0,this.keyboard=!0}};return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=Be({factory:function(){return new e},token:e,providedIn:"root"}),e})();class VW{constructor(e,t,n){this.nodes=e,this.viewRef=t,this.componentRef=n}}const WW=()=>{};let GW=(()=>{let e=class{constructor(e){this._document=e}compensate(){const e=this._getWidth();return this._isPresent(e)?this._adjustBody(e):WW}_adjustBody(e){const t=this._document.body,n=t.style.paddingRight,r=parseFloat(window.getComputedStyle(t)["padding-right"]);return t.style["padding-right"]=r+e+"px",()=>t.style["padding-right"]=n}_isPresent(e){const t=this._document.body.getBoundingClientRect();return window.innerWidth-(t.left+t.right)>=e-.1*e}_getWidth(){const e=this._document.createElement("div");e.className="modal-scrollbar-measure";const t=this._document.body;t.appendChild(e);const n=e.getBoundingClientRect().width-e.clientWidth;return t.removeChild(e),n}};return e.\u0275fac=function(t){return new(t||e)(St(Il))},e.\u0275prov=Be({factory:function(){return new e(St(Il))},token:e,providedIn:"root"}),e})(),HW=(()=>{let e=class{};return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=Ut({type:e,selectors:[["ngb-modal-backdrop"]],hostAttrs:[2,"z-index","1050"],hostVars:2,hostBindings:function(e,t){2&e&&oi("modal-backdrop fade show"+(t.backdropClass?" "+t.backdropClass:""))},inputs:{backdropClass:"backdropClass"},decls:0,vars:0,template:function(e,t){},encapsulation:2}),e})();class jW{close(e){}dismiss(e){}}class qW{constructor(e,t,n,r){this._windowCmptRef=e,this._contentRef=t,this._backdropCmptRef=n,this._beforeDismiss=r,e.instance.dismissEvent.subscribe(e=>{this.dismiss(e)}),this.result=new Promise((e,t)=>{this._resolve=e,this._reject=t}),this.result.then(null,()=>{})}get componentInstance(){if(this._contentRef&&this._contentRef.componentRef)return this._contentRef.componentRef.instance}close(e){this._windowCmptRef&&(this._resolve(e),this._removeModalElements())}_dismiss(e){this._reject(e),this._removeModalElements()}dismiss(e){if(this._windowCmptRef)if(this._beforeDismiss){const t=this._beforeDismiss();t&&t.then?t.then(t=>{!1!==t&&this._dismiss(e)},()=>{}):!1!==t&&this._dismiss(e)}else this._dismiss(e)}_removeModalElements(){const e=this._windowCmptRef.location.nativeElement;if(e.parentNode.removeChild(e),this._windowCmptRef.destroy(),this._backdropCmptRef){const e=this._backdropCmptRef.location.nativeElement;e.parentNode.removeChild(e),this._backdropCmptRef.destroy()}this._contentRef&&this._contentRef.viewRef&&this._contentRef.viewRef.destroy(),this._windowCmptRef=null,this._backdropCmptRef=null,this._contentRef=null}}var KW=function(e){return e[e.BACKDROP_CLICK=0]="BACKDROP_CLICK",e[e.ESC=1]="ESC",e}({});let XW=(()=>{let e=class{constructor(e,t,n){this._document=e,this._elRef=t,this._zone=n,this._closed$=new re,this._elWithFocus=null,this.backdrop=!0,this.keyboard=!0,this.dismissEvent=new ho}dismiss(e){this.dismissEvent.emit(e)}ngOnInit(){this._elWithFocus=this._document.activeElement}ngAfterViewInit(){const{nativeElement:e}=this._elRef;if(this._zone.runOutsideAngular(()=>{vW(e,"keydown").pipe(kW(this._closed$),Fu(e=>e.which===MW.Escape&&this.keyboard)).subscribe(e=>requestAnimationFrame(()=>{e.defaultPrevented||this._zone.run(()=>this.dismiss(KW.ESC))}));let t=!1;vW(this._dialogEl.nativeElement,"mousedown").pipe(kW(this._closed$),dc(()=>t=!1),rc(()=>vW(e,"mouseup").pipe(kW(this._closed$),Yu(1))),Fu(({target:t})=>e===t)).subscribe(()=>{t=!0}),vW(e,"click").pipe(kW(this._closed$)).subscribe(({target:n})=>{!0!==this.backdrop||e!==n||t||this._zone.run(()=>this.dismiss(KW.BACKDROP_CLICK)),t=!1})}),!e.contains(document.activeElement)){const t=e.querySelector("[ngbAutofocus]"),n=zW(e)[0];(t||n||e).focus()}}ngOnDestroy(){const e=this._document.body,t=this._elWithFocus;let n;n=t&&t.focus&&e.contains(t)?t:e,this._zone.runOutsideAngular(()=>{setTimeout(()=>n.focus()),this._elWithFocus=null}),this._closed$.next()}};return e.\u0275fac=function(t){return new(t||e)(Wa(Il),Wa(vi),Wa(jo))},e.\u0275cmp=Ut({type:e,selectors:[["ngb-modal-window"]],viewQuery:function(e,t){var n,r,s,a,i,o;1&e&&(a=EW,i=!0,function(e,t,n,r,s,a){e.firstCreatePass&&(function(e,t,n){null===e.queries&&(e.queries=new bo),e.queries.track(new xo(t,-1))}(e,new yo(n,r,!0,s)),e.staticViewQueries=!0),function(e,t){const n=new fo;!function(e,t,n,r){const s=Os(t);s.push(n),e.firstCreatePass&&Ms(e).push(r,s.length-1)}(e,t,n,n.destroy),null===t[19]&&(t[19]=new go),t[19].queries.push(new mo(n))}(e,t)}(vn(),wn(),a,i,o)),2&e&&function(e){const t=wn(),n=vn(),r=Rn();$n(r+1);const s=So(n,r);if(e.dirty&&pn(t)===s.metadata.isStatic){if(null===s.matches)e.reset([]);else{const a=s.crossesNgTemplate?function e(t,n,r,s){const a=t.queries.getByIndex(r),i=a.matches;if(null!==i){const o=ko(t,n,a,r);for(let t=0;t<i.length;t+=2){const r=i[t];if(r>0)s.push(o[t/2]);else{const a=i[t+1],o=n[-r];for(let t=10;t<o.length;t++){const n=o[t];n[17]===n[3]&&e(n[1],n,a,s)}if(null!==o[9]){const t=o[9];for(let n=0;n<t.length;n++){const r=t[n];e(r[1],r,a,s)}}}}}return s}(n,t,r,[]):ko(n,t,s,r);e.reset(a),e.notifyOnChanges()}return!0}return!1}((r=wn(),s=Rn(),n=r[19].queries[s].queryList))&&(t._dialogEl=n.first)},hostAttrs:["role","dialog","tabindex","-1"],hostVars:5,hostBindings:function(e,t){2&e&&(Va("aria-modal",!0)("aria-labelledby",t.ariaLabelledBy)("aria-describedby",t.ariaDescribedBy),oi("modal fade show d-block"+(t.windowClass?" "+t.windowClass:"")))},inputs:{backdrop:"backdrop",keyboard:"keyboard",ariaLabelledBy:"ariaLabelledBy",ariaDescribedBy:"ariaDescribedBy",centered:"centered",scrollable:"scrollable",size:"size",windowClass:"windowClass"},outputs:{dismissEvent:"dismiss"},ngContentSelectors:_W,decls:4,vars:2,consts:[["role","document"],["dialog",""],[1,"modal-content"]],template:function(e,t){1&e&&(function(e){const t=wn()[16][6];if(!t.projection){const e=t.projection=$t(1,null),n=e.slice();let r=t.child;for(;null!==r;){const t=0;null!==t&&(n[t]?n[t].projectionNext=r:e[t]=r,n[t]=r),r=r.next}}}(),qa(0,"div",0,1),qa(2,"div",2),function(e,t=0,n){const r=wn(),s=vn(),a=os(s,r[6],e,1,null,n||null);null===a.projection&&(a.projection=t),Cn(),function(e,t,n){sa(t[11],0,t,n,Ks(e,n,t),Qs(n.parent||t[6],t))}(s,r,a)}(3),Ka(),Ka()),2&e&&oi("modal-dialog"+(t.size?" modal-"+t.size:"")+(t.centered?" modal-dialog-centered":"")+(t.scrollable?" modal-dialog-scrollable":""))},styles:["ngb-modal-window .component-host-scrollable{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;overflow:hidden}"],encapsulation:2}),e})(),ZW=(()=>{let e=class{constructor(e,t,n,r,s,a){this._applicationRef=e,this._injector=t,this._document=n,this._scrollBar=r,this._rendererFactory=s,this._ngZone=a,this._activeWindowCmptHasChanged=new re,this._ariaHiddenValues=new Map,this._backdropAttributes=["backdropClass"],this._modalRefs=[],this._windowAttributes=["ariaLabelledBy","ariaDescribedBy","backdrop","centered","keyboard","scrollable","size","windowClass"],this._windowCmpts=[],this._activeInstances=new ho,this._activeWindowCmptHasChanged.subscribe(()=>{if(this._windowCmpts.length){const e=this._windowCmpts[this._windowCmpts.length-1];((e,t,n,r=!1)=>{this._ngZone.runOutsideAngular(()=>{const e=vW(t,"focusin").pipe(kW(n),me(e=>e.target));vW(t,"keydown").pipe(kW(n),Fu(e=>e.which===MW.Tab),CW(e)).subscribe(([e,n])=>{const[r,s]=zW(t);n!==r&&n!==t||!e.shiftKey||(s.focus(),e.preventDefault()),n!==s||e.shiftKey||(r.focus(),e.preventDefault())}),r&&vW(t,"click").pipe(kW(n),CW(e),me(e=>e[1])).subscribe(e=>e.focus())})})(0,e.location.nativeElement,this._activeWindowCmptHasChanged),this._revertAriaHidden(),this._setAriaHidden(e.location.nativeElement)}})}open(e,t,n,r){const s=r.container instanceof HTMLElement?r.container:AW(r.container)?this._document.querySelector(r.container):this._document.body,a=this._rendererFactory.createRenderer(null,null),i=this._scrollBar.compensate(),o=()=>{this._modalRefs.length||(a.removeClass(this._document.body,"modal-open"),this._revertAriaHidden())};if(!s)throw new Error(`The specified modal container "${r.container||"body"}" was not found in the DOM.`);const l=new jW,u=this._getContentRef(e,r.injector||t,n,l,r);let c=!1!==r.backdrop?this._attachBackdrop(e,s):void 0,h=this._attachWindowComponent(e,s,u),d=new qW(h,u,c,r.beforeDismiss);return this._registerModalRef(d),this._registerWindowCmpt(h),d.result.then(i,i),d.result.then(o,o),l.close=e=>{d.close(e)},l.dismiss=e=>{d.dismiss(e)},this._applyWindowOptions(h.instance,r),1===this._modalRefs.length&&a.addClass(this._document.body,"modal-open"),c&&c.instance&&this._applyBackdropOptions(c.instance,r),d}get activeInstances(){return this._activeInstances}dismissAll(e){this._modalRefs.forEach(t=>t.dismiss(e))}hasOpenModals(){return this._modalRefs.length>0}_attachBackdrop(e,t){let n=e.resolveComponentFactory(HW).create(this._injector);return this._applicationRef.attachView(n.hostView),t.appendChild(n.location.nativeElement),n}_attachWindowComponent(e,t,n){let r=e.resolveComponentFactory(XW).create(this._injector,n.nodes);return this._applicationRef.attachView(r.hostView),t.appendChild(r.location.nativeElement),r}_applyWindowOptions(e,t){this._windowAttributes.forEach(n=>{AW(t[n])&&(e[n]=t[n])})}_applyBackdropOptions(e,t){this._backdropAttributes.forEach(n=>{AW(t[n])&&(e[n]=t[n])})}_getContentRef(e,t,n,r,s){return n?n instanceof Hi?this._createFromTemplateRef(n,r):"string"==typeof n?this._createFromString(n):this._createFromComponent(e,t,n,r,s):new VW([])}_createFromTemplateRef(e,t){const n=e.createEmbeddedView({$implicit:t,close(e){t.close(e)},dismiss(e){t.dismiss(e)}});return this._applicationRef.attachView(n),new VW([n.rootNodes],n)}_createFromString(e){const t=this._document.createTextNode(""+e);return new VW([[t]])}_createFromComponent(e,t,n,r,s){const a=e.resolveComponentFactory(n),i=Aa.create({providers:[{provide:jW,useValue:r}],parent:t}),o=a.create(i),l=o.location.nativeElement;return s.scrollable&&l.classList.add("component-host-scrollable"),this._applicationRef.attachView(o.hostView),new VW([[l]],o.hostView,o)}_setAriaHidden(e){const t=e.parentElement;t&&e!==this._document.body&&(Array.from(t.children).forEach(t=>{t!==e&&"SCRIPT"!==t.nodeName&&(this._ariaHiddenValues.set(t,t.getAttribute("aria-hidden")),t.setAttribute("aria-hidden","true"))}),this._setAriaHidden(t))}_revertAriaHidden(){this._ariaHiddenValues.forEach((e,t)=>{e?t.setAttribute("aria-hidden",e):t.removeAttribute("aria-hidden")}),this._ariaHiddenValues.clear()}_registerModalRef(e){const t=()=>{const t=this._modalRefs.indexOf(e);t>-1&&(this._modalRefs.splice(t,1),this._activeInstances.emit(this._modalRefs))};this._modalRefs.push(e),this._activeInstances.emit(this._modalRefs),e.result.then(t,t)}_registerWindowCmpt(e){this._windowCmpts.push(e),this._activeWindowCmptHasChanged.next(),e.onDestroy(()=>{const t=this._windowCmpts.indexOf(e);t>-1&&(this._windowCmpts.splice(t,1),this._activeWindowCmptHasChanged.next())})}};return e.\u0275fac=function(t){return new(t||e)(St(dl),St(Aa),St(Il),St(GW),St(Si),St(jo))},e.\u0275prov=Be({factory:function(){return new e(St(dl),St(ft),St(Il),St(GW),St(Si),St(jo))},token:e,providedIn:"root"}),e})(),YW=(()=>{let e=class{constructor(e,t,n,r){this._moduleCFR=e,this._injector=t,this._modalStack=n,this._config=r}open(e,t={}){const n=Object.assign({},this._config,t);return this._modalStack.open(this._moduleCFR,this._injector,e,n)}get activeInstances(){return this._modalStack.activeInstances}dismissAll(e){this._modalStack.dismissAll(e)}hasOpenModals(){return this._modalStack.hasOpenModals()}};return e.\u0275fac=function(t){return new(t||e)(St(wi),St(Aa),St(ZW),St(UW))},e.\u0275prov=Be({factory:function(){return new e(St(wi),St(ft),St(ZW),St(UW))},token:e,providedIn:"root"}),e})(),JW=(()=>{let e=class{};return e.\u0275mod=Ht({type:e}),e.\u0275inj=Ue({factory:function(t){return new(t||e)},providers:[YW]}),e})(),QW=(()=>{let e=class{};return e.\u0275mod=Ht({type:e}),e.\u0275inj=Ue({factory:function(t){return new(t||e)},imports:[[jl]]}),e})(),eG=(()=>{let e=class{};return e.\u0275mod=Ht({type:e}),e.\u0275inj=Ue({factory:function(t){return new(t||e)},imports:[[jl]]}),e})(),tG=(()=>{let e=class{};return e.\u0275mod=Ht({type:e}),e.\u0275inj=Ue({factory:function(t){return new(t||e)},imports:[[jl]]}),e})(),nG=(()=>{let e=class{};return e.\u0275mod=Ht({type:e}),e.\u0275inj=Ue({factory:function(t){return new(t||e)},imports:[[jl]]}),e})(),rG=(()=>{let e=class{};return e.\u0275mod=Ht({type:e}),e.\u0275inj=Ue({factory:function(t){return new(t||e)},imports:[[jl]]}),e})(),sG=(()=>{let e=class{};return e.\u0275mod=Ht({type:e}),e.\u0275inj=Ue({factory:function(t){return new(t||e)},imports:[[jl]]}),e})(),aG=(()=>{let e=class{};return e.\u0275mod=Ht({type:e}),e.\u0275inj=Ue({factory:function(t){return new(t||e)},imports:[[jl]]}),e})(),iG=(()=>{let e=class{};return e.\u0275mod=Ht({type:e}),e.\u0275inj=Ue({factory:function(t){return new(t||e)},imports:[[jl]]}),e})(),oG=(()=>{let e=class{};return e.\u0275mod=Ht({type:e}),e.\u0275inj=Ue({factory:function(t){return new(t||e)}}),e})(),lG=(()=>{let e=class{};return e.\u0275mod=Ht({type:e}),e.\u0275inj=Ue({factory:function(t){return new(t||e)},imports:[[jl]]}),e})();const uG=[RW,$W,FW,DW,OW,PW,BW,JW,QW,eG,tG,nG,rG,aG,iG,oG,lG,sG];let cG=(()=>{let e=class{};return e.\u0275mod=Ht({type:e}),e.\u0275inj=Ue({factory:function(t){return new(t||e)},imports:[uG,RW,$W,FW,DW,OW,PW,BW,JW,QW,eG,tG,nG,rG,aG,iG,oG,lG,sG]}),e})(),hG=(()=>{class e{}return e.\u0275mod=Ht({type:e,bootstrap:[yW]}),e.\u0275inj=Ue({factory:function(t){return new(t||e)},providers:[],imports:[[ku,tp,cG]]}),e})();(function(){if(Ar)throw new Error("Cannot enable prod mode after platform setup.");Er=!1})(),wu().bootstrapModule(hG).catch(e=>console.error(e))},zn8P:function(e,t){function n(e){return Promise.resolve().then((function(){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}))}n.keys=function(){return[]},n.resolve=n,e.exports=n,n.id="zn8P"}},[[0,0]]]);